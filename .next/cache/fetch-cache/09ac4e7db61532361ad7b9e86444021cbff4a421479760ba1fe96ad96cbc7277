{"kind":"FETCH","data":{"headers":{"accept-ranges":"bytes","age":"0","alt-svc":"h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000","apicdn-cache-control":"public, max-age=60, s-maxage=3600, stale-while-revalidate=60, stale-if-error=3600","cache-control":"public, max-age=60, s-maxage=60, stale-while-revalidate=15, stale-if-error=3600","content-encoding":"br","content-length":"10666","content-type":"application/json; charset=utf-8","date":"Sun, 19 Jan 2025 07:12:24 GMT","sanity-gateway":"k8s-gcp-eu-w1-prod-ing-01","sanity-query-hash":"OMgC5xaiaho uxvbys1qyTQ","server-timing":"api;dur=43","strict-transport-security":"max-age=63072000; includeSubDomains; preload","vary":"accept-encoding, origin","via":"1.1 google","x-sanity-age":"0","x-sanity-shard":"gcp-eu-w1-01-prod-1015"},"body":"","status":200,"url":"https://ilhf9wt8.apicdn.sanity.io/v2023-10-10/data/query/production?query=%0A++++*%5B_type+%3D%3D+%22product%22%5D%7B%0A++++++++_id%2C%0A++++++++name%2C%0A++++++++description%2C%0A++++++++price%2C%0A++++++++discountPercentage%2C%0A++++++++%22imageUrl%22%3A+image.asset-%3Eurl%0A++++%7D&returnQuery=false"},"revalidate":31536000,"tags":[]}