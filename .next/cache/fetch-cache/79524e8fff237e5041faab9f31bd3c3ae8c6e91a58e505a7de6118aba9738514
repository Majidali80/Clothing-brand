{"kind":"FETCH","data":{"headers":{"accept-ranges":"bytes","alt-svc":"h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000","apicdn-cache-control":"public, max-age=60, s-maxage=3600, stale-while-revalidate=60, stale-if-error=3600","cache-control":"public, max-age=60, s-maxage=60, stale-while-revalidate=15, stale-if-error=3600","content-encoding":"br","content-length":"10669","content-type":"application/json; charset=utf-8","date":"Sun, 19 Jan 2025 07:20:20 GMT","sanity-gateway":"k8s-gcp-eu-w1-prod-ing-01","sanity-query-hash":"qNRGgZNPrFU uxvbys1qyTQ","server-timing":"api;dur=20","strict-transport-security":"max-age=63072000; includeSubDomains; preload","vary":"accept-encoding, origin","via":"1.1 google","x-sanity-age":"0","x-sanity-shard":"gcp-eu-w1-01-prod-1015"},"body":"eyJyZXN1bHQiOlt7Il9pZCI6IjBlMHp0dUpZNk5XZHlibEJFU0kzNTUiLCJuYW1lIjpudWxsLCJkZXNjcmlwdGlvbiI6IldlbGNvbWUgdG8gQm9sZE5lc3TigJR3aGVyZSBmZWFybGVzcyBkZXNpZ24gbWVldHMgY29tZm9ydCBhbmQgY3JlYXRpdml0eS4gQ3JhZnRlZCBmb3IgdGhvc2Ugd2hvIGVtYnJhY2UgaW5kaXZpZHVhbGl0eSBhbmQgYm9sZCBleHByZXNzaW9ucywgQm9sZE5lc3QgaXMgbW9yZSB0aGFuIGp1c3QgYSBwaWVjZSBvZiBmdXJuaXR1cmU7IGl04oCZcyBhIHN0YXRlbWVudC4gV2l0aCBpdHMgc3RyaWtpbmcgZGVzaWduLCBleGNlcHRpb25hbCBjb21mb3J0LCBhbmQgbW9kZXJuIGFlc3RoZXRpY3MsIEJvbGROZXN0IGlzIHBlcmZlY3QgZm9yIGFueW9uZSBsb29raW5nIHRvIGFkZCBhIHVuaXF1ZSB0b3VjaCB0byB0aGVpciBob21lIG9yIG9mZmljZS5cblxuVGhlIEJvbGROZXN0IGNvbGxlY3Rpb24gY29tYmluZXMgZGFyaW5nIGNvbG9ycywgZHluYW1pYyBzaGFwZXMsIGFuZCBoaWdoLXF1YWxpdHkgbWF0ZXJpYWxzIHRvIGNyZWF0ZSBhbiBlbnZpcm9ubWVudCB3aGVyZSBzdHlsZSBhbmQgY29tZm9ydCBjb2V4aXN0IGluIHBlcmZlY3QgaGFybW9ueS4gV2hldGhlciBpdOKAmXMgYSBjaGFpciwgc29mYSwgb3IgYWNjZW50IHBpZWNlLCBlYWNoIGl0ZW0gaXMgZGVzaWduZWQgdG8gc3RhbmQgb3V0IHdoaWxlIG9mZmVyaW5nIGEgd2VsY29taW5nIHNwYWNlIGZvciByZWxheGF0aW9uIGFuZCBlbmpveW1lbnQuXG5cbkl0cyBzdHVyZHkgY29uc3RydWN0aW9uIGFuZCB0aG91Z2h0ZnVsIGRlc2lnbiBlbnN1cmUgdGhhdCBCb2xkTmVzdCBub3Qgb25seSBtYWtlcyBhIGJvbGQgdmlzdWFsIGltcGFjdCBidXQgYWxzbyBwcm92aWRlcyBsYXN0aW5nIGR1cmFiaWxpdHkuIFBlcmZlY3QgZm9yIHRob3NlIHdobyBhcmUgbG9va2luZyB0byBicmVhayBhd2F5IGZyb20gdGhlIG9yZGluYXJ5IGFuZCBtYWtlIHRoZWlyIGhvbWUgYSByZWZsZWN0aW9uIG9mIHRoZWlyIGJvbGQgcGVyc29uYWxpdHksIEJvbGROZXN0IGlzIGFuIGlkZWFsIGNob2ljZSBmb3IgY3JlYXRpbmcgYW4gZW5lcmdldGljIGFuZCB1bmlxdWUgYXRtb3NwaGVyZS5cblxuS2V5IEZlYXR1cmVzOlxuXG5Cb2xkIGFuZCB1bmlxdWUgZGVzaWduIHRoYXQgYWRkcyBwZXJzb25hbGl0eSB0byBhbnkgc3BhY2VcbkhpZ2gtcXVhbGl0eSBtYXRlcmlhbHMgZm9yIGNvbWZvcnQsIGR1cmFiaWxpdHksIGFuZCBzdHlsZVxuQXZhaWxhYmxlIGluIGEgdmFyaWV0eSBvZiBzdHJpa2luZyBjb2xvcnMgYW5kIHBhdHRlcm5zXG5QZXJmZWN0IGZvciBtb2Rlcm4gaG9tZXMgYW5kIG9mZmljZXMgdGhhdCBlbWJyYWNlIGNyZWF0aXZpdHlcblZlcnNhdGlsZSBkZXNpZ24gdGhhdCBjb21wbGVtZW50cyBjb250ZW1wb3JhcnkgYW5kIGVjbGVjdGljIGRlY29yXG5UcmFuc2Zvcm0geW91ciBob21lIGludG8gYSBzcGFjZSB0aGF0IHJlZmxlY3RzIHlvdXIgYm9sZCwgdW5pcXVlIHN0eWxlIHdpdGggQm9sZE5lc3TigJR3aGVyZSBzdGFuZG91dCBkZXNpZ24gYW5kIGNvbWZvcnQgbWVldC4iLCJwcmljZSI6MjYwLCJkaXNjb3VudFBlcmNlbnRhZ2UiOm51bGwsImltYWdlX1VybCI6bnVsbH0seyJfaWQiOiIwZTB6dHVKWTZOV2R5YmxCRVNJMzhaIiwibmFtZSI6bnVsbCwiZGVzY3JpcHRpb24iOiJTaW5rIGludG8gY29tZm9ydCB3aXRoIHRoZSBDbG91ZCBIYXZlbiBDaGFpcuKAlHdoZXJlIHNvZnRuZXNzIG1lZXRzIHN1cHBvcnQgaW4gYSBiZWF1dGlmdWxseSBkZXNpZ25lZCBwaWVjZSB0aGF0IGZlZWxzIGxpa2UgYSBwZXJzb25hbCByZXRyZWF0LiBJbnNwaXJlZCBieSB0aGUgZ2VudGxlLCBjYWxtaW5nIHByZXNlbmNlIG9mIGNsb3VkcywgdGhpcyBjaGFpciBvZmZlcnMgYW4gdWx0cmEtY29tZm9ydGFibGUsIGludml0aW5nIGV4cGVyaWVuY2UgdGhhdCBsZXRzIHlvdSByZWxheCBhbmQgdW53aW5kLCBtYWtpbmcgaXQgdGhlIHBlcmZlY3QgYWRkaXRpb24gdG8gYW55IGxpdmluZyByb29tLCBiZWRyb29tLCBvciBjb3p5IG5vb2suXG5cblRoZSBDbG91ZCBIYXZlbiBDaGFpciBpcyBjcmFmdGVkIHdpdGggcHJlbWl1bSBtYXRlcmlhbHMgdGhhdCBjcmVhdGUgYSBwbHVzaCwgY2xvdWQtbGlrZSBzZWF0aW5nIGV4cGVyaWVuY2UuIEl0cyBsdXh1cmlvdXMgY3VzaGlvbmluZyBwcm92aWRlcyBnZW50bGUgc3VwcG9ydCwgY3JhZGxpbmcgeW91IGluIGNvbWZvcnQgd2hpbGUgdGhlIGVyZ29ub21pYyBkZXNpZ24gZW5zdXJlcyB0aGUgcGVyZmVjdCBiYWxhbmNlIGJldHdlZW4gcmVsYXhhdGlvbiBhbmQgcG9zdHVyZS4gVGhlIGNoYWly4oCZcyBzbGVlaywgbW9kZXJuIGxpbmVzIGFuZCBzb2Z0LCBuZXV0cmFsIHRvbmVzIGJsZW5kIHNlYW1sZXNzbHkgaW50byBhbnkgZGVjb3IsIGFkZGluZyBhIHRvdWNoIG9mIHNvcGhpc3RpY2F0aW9uIGFuZCB0cmFucXVpbGl0eSB0byB5b3VyIHNwYWNlLlxuXG5XaGV0aGVyIHlvdeKAmXJlIGVuam95aW5nIGEgZ29vZCBib29rLCBtZWRpdGF0aW5nLCBvciBzaW1wbHkgcmVsYXhpbmcgYWZ0ZXIgYSBsb25nIGRheSwgdGhlIENsb3VkIEhhdmVuIENoYWlyIGNyZWF0ZXMgYSBwZWFjZWZ1bCBzYW5jdHVhcnkgd2hlcmUgeW91IGNhbiBlc2NhcGUgaW50byBzZXJlbml0eS4gSXRzIGR1cmFibGUgY29uc3RydWN0aW9uIGd1YXJhbnRlZXMgbGFzdGluZyBjb21mb3J0IGFuZCBzdHlsZSwgd2hpbGUgaXRzIGNsb3VkLWluc3BpcmVkIGRlc2lnbiBicmluZ3MgYSBzZW5zZSBvZiBsaWdodG5lc3MgYW5kIGVhc2UgdG8geW91ciBob21lLlxuXG5LZXkgRmVhdHVyZXM6XG5cblVsdHJhLXNvZnQsIGNsb3VkLWxpa2UgY3VzaGlvbmluZyBmb3IgYSByZWxheGluZyBzZWF0aW5nIGV4cGVyaWVuY2VcbkVyZ29ub21pY2FsbHkgZGVzaWduZWQgZm9yIG9wdGltYWwgY29tZm9ydCBhbmQgc3VwcG9ydFxuU2xlZWssIG1vZGVybiBkZXNpZ24gdGhhdCBjb21wbGVtZW50cyBhIHZhcmlldHkgb2YgaG9tZSBkZWNvciBzdHlsZXNcbkNyYWZ0ZWQgZnJvbSBoaWdoLXF1YWxpdHkgbWF0ZXJpYWxzIGZvciBkdXJhYmlsaXR5IGFuZCBsb25nLWxhc3RpbmcgY29tZm9ydFxuUGVyZmVjdCBmb3IgY3JlYXRpbmcgYSBwZWFjZWZ1bCwgaW52aXRpbmcgc3BhY2UgaW4gYW55IHJvb21cblRyYW5zZm9ybSB5b3VyIGxpdmluZyBzcGFjZSBpbnRvIGEgc2VyZW5lIGhhdmVuIHdpdGggdGhlIENsb3VkIEhhdmVuIENoYWly4oCUd2hlcmUgY29tZm9ydCBhbmQgc3R5bGUgY29tZSB0b2dldGhlciB0byBjcmVhdGUgdGhlIHVsdGltYXRlIHJlbGF4YXRpb24gZXhwZXJpZW5jZS4iLCJwcmljZSI6MjMwLCJkaXNjb3VudFBlcmNlbnRhZ2UiOm51bGwsImltYWdlX1VybCI6bnVsbH0seyJfaWQiOiIwZTB6dHVKWTZOV2R5YmxCRVNJM0oxIiwibmFtZSI6bnVsbCwiZGVzY3JpcHRpb24iOiJNZWV0IFRoZSBEYW5keSBDaGFpcuKAlHRoZSBlcGl0b21lIG9mIGNvbWZvcnQsIHN0eWxlLCBhbmQgc29waGlzdGljYXRpb24uIERlc2lnbmVkIGZvciB0aG9zZSB3aG8gYXBwcmVjaWF0ZSB0aGUgZmluZXIgdGhpbmdzIGluIGxpZmUsIHRoaXMgY2hhaXIgY29tYmluZXMgY2xhc3NpYyBjaGFybSB3aXRoIG1vZGVybiBlbGVnYW5jZSwgbWFraW5nIGl0IHRoZSBwZXJmZWN0IGFkZGl0aW9uIHRvIGFueSByb29tIGluIHlvdXIgaG9tZSBvciBvZmZpY2UuIFdoZXRoZXIgeW91J3JlIGxvb2tpbmcgdG8gY3JlYXRlIGEgbHV4dXJpb3VzIHJlYWRpbmcgbm9vaywgYW4gaW52aXRpbmcgbG91bmdlIGFyZWEsIG9yIGEgc3RhdGVtZW50IHBpZWNlIGZvciB5b3VyIHdvcmtzcGFjZSwgVGhlIERhbmR5IENoYWlyIG9mZmVycyBib3RoIGJlYXV0eSBhbmQgZnVuY3Rpb25hbGl0eS5cblxuQ3JhZnRlZCB3aXRoIG1ldGljdWxvdXMgYXR0ZW50aW9uIHRvIGRldGFpbCwgVGhlIERhbmR5IENoYWlyIGZlYXR1cmVzIHBsdXNoIGN1c2hpb25pbmcsIGVyZ29ub21pYyBzdXBwb3J0LCBhbmQgYSBzbGVlaywgdGltZWxlc3MgZGVzaWduLiBJdHMgaGlnaC1xdWFsaXR5IG1hdGVyaWFscyBhbmQgc3VwZXJpb3IgY3JhZnRzbWFuc2hpcCBlbnN1cmUgZHVyYWJpbGl0eSB3aGlsZSBwcm92aWRpbmcgYW4gZXhjZXB0aW9uYWwgc2VhdGluZyBleHBlcmllbmNlLiBUaGUgY2hhaXIncyBjbGVhbiBsaW5lcyBhbmQgcmVmaW5lZCBzaGFwZSBnaXZlIGl0IGEgc3R5bGlzaCB5ZXQgcmVsYXhlZCBmZWVsLCB3aGlsZSBpdHMgYm9sZCB5ZXQgdW5kZXJzdGF0ZWQgcHJlc2VuY2UgYWRkcyBhIHRvdWNoIG9mIHJlZmluZW1lbnQgdG8gYW55IHNwYWNlLlxuXG5XaGV0aGVyIHlvdSBjaG9vc2UgYSBuZXV0cmFsIHRvbmUgb3IgYSBwb3Agb2YgY29sb3IsIFRoZSBEYW5keSBDaGFpciBlZmZvcnRsZXNzbHkgY29tcGxlbWVudHMgYSB3aWRlIHZhcmlldHkgb2YgZGVjb3Igc3R5bGVzLCBmcm9tIG1vZGVybiBtaW5pbWFsaXNtIHRvIHRyYWRpdGlvbmFsIGx1eHVyeS4gSXRzIHZlcnNhdGlsaXR5IGFuZCBjb21mb3J0IG1ha2UgaXQgaWRlYWwgZm9yIHRob3NlIHdobyB2YWx1ZSBib3RoIGFlc3RoZXRpY3MgYW5kIHByYWN0aWNhbGl0eSBpbiB0aGVpciBmdXJuaXR1cmUgY2hvaWNlcy5cblxuS2V5IEZlYXR1cmVzOlxuXG5Db21mb3J0YWJsZSwgcGx1c2ggY3VzaGlvbmluZyB3aXRoIGVyZ29ub21pYyBzdXBwb3J0XG5UaW1lbGVzcyBkZXNpZ24gdGhhdCBhZGRzIHNvcGhpc3RpY2F0aW9uIHRvIGFueSBzcGFjZVxuQ3JhZnRlZCB3aXRoIGhpZ2gtcXVhbGl0eSBtYXRlcmlhbHMgZm9yIGR1cmFiaWxpdHkgYW5kIGxvbmdldml0eVxuVmVyc2F0aWxlIHN0eWxlIHRoYXQgY29tcGxlbWVudHMgYm90aCBtb2Rlcm4gYW5kIHRyYWRpdGlvbmFsIGludGVyaW9yc1xuSWRlYWwgZm9yIGxpdmluZyByb29tcywgb2ZmaWNlcywgb3IgYW55IGFyZWEgdGhhdCBjYWxscyBmb3IgYSB0b3VjaCBvZiBlbGVnYW5jZVxuRXhwZXJpZW5jZSB0aGUgcGVyZmVjdCBibGVuZCBvZiBjb21mb3J0IGFuZCBzdHlsZSB3aXRoIFRoZSBEYW5keSBDaGFpcuKAlHdoZXJlIGx1eHVyeSBtZWV0cyBmdW5jdGlvbmFsaXR5IGFuZCBldmVyeSBkZXRhaWwgaXMgY3JhZnRlZCB0byBpbXByZXNzLiIsInByaWNlIjoxNTAsImRpc2NvdW50UGVyY2VudGFnZSI6bnVsbCwiaW1hZ2VfVXJsIjpudWxsfSx7InByaWNlIjoyMDAsImRpc2NvdW50UGVyY2VudGFnZSI6bnVsbCwiaW1hZ2VfVXJsIjpudWxsLCJfaWQiOiIwZTB6dHVKWTZOV2R5YmxCRVNJM1NKIiwibmFtZSI6bnVsbCwiZGVzY3JpcHRpb24iOiJJbnRyb2R1Y2luZyBTeWx0aGVyaW5lIOKAkyB0aGUgdWx0aW1hdGUgZnVzaW9uIG9mIGVsZWdhbmNlIGFuZCBwb3dlci4gQ3JhZnRlZCBmb3IgdGhvc2Ugd2hvIGRlbWFuZCBleGNlcHRpb25hbCBwZXJmb3JtYW5jZSwgU3lsdGhlcmluZSBpcyBhIHByZW1pdW0gcHJvZHVjdCBkZXNpZ25lZCB0byBlbGV2YXRlIHlvdXIgZXhwZXJpZW5jZSB0byB0aGUgbmV4dCBsZXZlbC4gV2hldGhlciB5b3UncmUgc2Vla2luZyBpbm5vdmF0aW9uLCBiZWF1dHksIG9yIHVubWF0Y2hlZCBkdXJhYmlsaXR5LCBTeWx0aGVyaW5lIG9mZmVycyBhbGwgdGhpcyBhbmQgbW9yZS5cblxuVGhpcyBjdXR0aW5nLWVkZ2Ugc29sdXRpb24gc3RhbmRzIGF0IHRoZSBpbnRlcnNlY3Rpb24gb2YgYWR2YW5jZWQgdGVjaG5vbG9neSBhbmQgcmVmaW5lZCBhZXN0aGV0aWNzLiBJdHMgc2xlZWsgZGVzaWduLCBjb21iaW5lZCB3aXRoIGNhcmVmdWxseSBzZWxlY3RlZCBtYXRlcmlhbHMsIHByb21pc2VzIG5vdCBvbmx5IGEgdmlzdWFsbHkgc3R1bm5pbmcgYXBwZWFyYW5jZSBidXQgYWxzbyBsb25nLWxhc3RpbmcgcmVsaWFiaWxpdHkuIFdoZXRoZXIgeW91IGFyZSB1c2luZyBTeWx0aGVyaW5lIGZvciBwcm9mZXNzaW9uYWwgdGFza3Mgb3IgcGVyc29uYWwgaW5kdWxnZW5jZSwgaXQgZGVsaXZlcnMgd2l0aCBwcmVjaXNpb24sIHNwZWVkLCBhbmQgdW5tYXRjaGVkIHBlcmZvcm1hbmNlLlxuXG5QZXJmZWN0bHkgYmFsYW5jZWQgdG8gbWVldCB0aGUgbmVlZHMgb2YgbW9kZXJuIHVzZXJzLCBTeWx0aGVyaW5lIGlzIGludHVpdGl2ZSBhbmQgZWFzeSB0byB1c2UsIHByb3ZpZGluZyBhIHNlYW1sZXNzIGV4cGVyaWVuY2UgZnJvbSBzdGFydCB0byBmaW5pc2guIEl0IGJvYXN0cyBhIHZhcmlldHkgb2YgZmVhdHVyZXMgdG8gZW5zdXJlIHRoYXQgeW91IHN0YXkgYWhlYWQgb2YgdGhlIGN1cnZlLCB3aGV0aGVyIGl04oCZcyBzbWFydCBpbnRlZ3JhdGlvbiwgZW5lcmd5IGVmZmljaWVuY3ksIG9yIHN1cGVyaW9yIGZ1bmN0aW9uYWxpdHkuXG5cbkV4cGVyaWVuY2UgdGhlIGZ1dHVyZSBvZiBwZXJmb3JtYW5jZSB3aXRoIFN5bHRoZXJpbmXigJR3aGVyZSBsdXh1cnkgbWVldHMgaW5ub3ZhdGlvbiwgYW5kIGV2ZXJ5IGRldGFpbCBpcyBlbmdpbmVlcmVkIGZvciBwZXJmZWN0aW9uLiBNYWtlIFN5bHRoZXJpbmUgeW91ciBnby10byBjaG9pY2UgZm9yIGFuIHVucGFyYWxsZWxlZCBleHBlcmllbmNlIHRvZGF5LlxuXG5LZXkgRmVhdHVyZXM6XG5cblN1cGVyaW9yIHBlcmZvcm1hbmNlIGFuZCBwcmVjaXNpb25cblNsZWVrLCBtb2Rlcm4gZGVzaWduXG5CdWlsdCBmb3IgZHVyYWJpbGl0eSBhbmQgbG9uZy1sYXN0aW5nIHVzZVxuRWFzeSBpbnRlZ3JhdGlvbiBhbmQgc2VhbWxlc3MgdXNlciBleHBlcmllbmNlXG5JZGVhbCBmb3IgYm90aCBwcm9mZXNzaW9uYWxzIGFuZCBwZXJzb25hbCB1c2VcbkVsZXZhdGUgeW91ciBzdGFuZGFyZHMgd2l0aCBTeWx0aGVyaW5l4oCUd2hlcmUgZXZlcnkgbW9tZW50IGlzIGVuaGFuY2VkIGJ5IGlubm92YXRpb24uIn0seyJfaWQiOiIwZTB6dHVKWTZOV2R5YmxCRVNJM2pqIiwibmFtZSI6bnVsbCwiZGVzY3JpcHRpb24iOiJJbnRyb2R1Y2luZyBNYXJibGVFYXNl4oCUYSBsdXh1cmlvdXMgY29sbGVjdGlvbiB0aGF0IGJyaW5ncyB0aGUgdGltZWxlc3MgZWxlZ2FuY2Ugb2YgbWFyYmxlIGludG8geW91ciBob21lIHdpdGggZWFzZSBhbmQgc29waGlzdGljYXRpb24uIERlc2lnbmVkIGZvciB0aG9zZSB3aG8gYXBwcmVjaWF0ZSB1bmRlcnN0YXRlZCBiZWF1dHkgYW5kIGhpZ2gtZW5kIGRlc2lnbiwgTWFyYmxlRWFzZSBjb21iaW5lcyB0aGUgbmF0dXJhbCBhbGx1cmUgb2YgbWFyYmxlIHdpdGggbW9kZXJuIGZ1bmN0aW9uYWxpdHksIGNyZWF0aW5nIGFuIGVmZm9ydGxlc3MgYmFsYW5jZSBiZXR3ZWVuIHN0eWxlIGFuZCBwcmFjdGljYWxpdHkuXG5cbkVhY2ggcGllY2UgaW4gdGhlIE1hcmJsZUVhc2UgY29sbGVjdGlvbiBmZWF0dXJlcyB0aGUgZXhxdWlzaXRlIHZlaW5pbmcgYW5kIHJlZmluZWQgdGV4dHVyZXMgdGhhdCBtYWtlIG1hcmJsZSBhIGNsYXNzaWMgY2hvaWNlLCB3aGlsZSBvZmZlcmluZyBsaWdodHdlaWdodCBhbmQgZHVyYWJsZSBhbHRlcm5hdGl2ZXMgdGhhdCBlbnN1cmUgZWFzeSBtYWludGVuYW5jZSBhbmQgbG9uZy1sYXN0aW5nIGFwcGVhbC4gV2hldGhlciB5b3UgYXJlIGFkZGluZyBhIHN0YXRlbWVudCBwaWVjZSB0byB5b3VyIGxpdmluZyByb29tLCBraXRjaGVuLCBvciBvZmZpY2UsIE1hcmJsZUVhc2UgYnJpbmdzIGEgdG91Y2ggb2Ygb3B1bGVuY2UgYW5kIHRyYW5xdWlsaXR5IHRvIGFueSBzcGFjZS5cblxuRnJvbSBzbGVlayB0YWJsZXRvcHMgYW5kIGNoaWMgaG9tZSBhY2Nlc3NvcmllcyB0byBzb3BoaXN0aWNhdGVkIGRlY29yIGFjY2VudHMsIE1hcmJsZUVhc2UgaW5mdXNlcyB5b3VyIGhvbWUgd2l0aCBhIHNlbnNlIG9mIGx1eHVyeSBhbmQgc2ltcGxpY2l0eS4gSXRzIG5ldXRyYWwgdG9uZXMgYW5kIGNsYXNzaWMgZGVzaWduIGNvbXBsZW1lbnQgYSB3aWRlIHZhcmlldHkgb2YgaW50ZXJpb3Igc3R5bGVzLCBmcm9tIG1vZGVybiBtaW5pbWFsaXNtIHRvIG1vcmUgdHJhZGl0aW9uYWwgc2V0dGluZ3MuIFBlcmZlY3QgZm9yIHRob3NlIHdobyB2YWx1ZSB0aW1lbGVzcyBkZXNpZ24gd2l0aCBhIGNvbnRlbXBvcmFyeSB0d2lzdCwgTWFyYmxlRWFzZSBvZmZlcnMgZWxlZ2FuY2Ugd2l0aG91dCB0aGUgaGFzc2xlLlxuXG5LZXkgRmVhdHVyZXM6XG5cblRpbWVsZXNzIG1hcmJsZS1pbnNwaXJlZCBkZXNpZ24gd2l0aCBiZWF1dGlmdWwgdmVpbmluZyBhbmQgdGV4dHVyZVxuSGlnaC1xdWFsaXR5LCBlYXN5LXRvLWNhcmUtZm9yIG1hdGVyaWFscyB0aGF0IG9mZmVyIGR1cmFiaWxpdHkgYW5kIGxvbmdldml0eVxuTGlnaHR3ZWlnaHQgYW5kIGZ1bmN0aW9uYWwsIG1ha2luZyBpdCBpZGVhbCBmb3IgZGFpbHkgdXNlIGFuZCBlZmZvcnRsZXNzIG1haW50ZW5hbmNlXG5WZXJzYXRpbGUgcGllY2VzIHRoYXQgY29tcGxlbWVudCBhIHdpZGUgcmFuZ2Ugb2YgaW50ZXJpb3Igc3R5bGVzXG5QZXJmZWN0IGZvciBhZGRpbmcgYW4gZWxlZ2FudCwgbHV4dXJpb3VzIHRvdWNoIHRvIGFueSByb29tXG5FbGV2YXRlIHlvdXIgaG9tZSB3aXRoIE1hcmJsZUVhc2XigJR3aGVyZSBsdXh1cnkgbWVldHMgZWFzZSwgYW5kIHRpbWVsZXNzIGRlc2lnbiBpcyBtYWRlIGVmZm9ydGxlc3NseSBtb2Rlcm4uIENyZWF0ZSBhIHNwYWNlIHRoYXQgcmVmbGVjdHMgeW91ciBsb3ZlIGZvciBiZWF1dHksIHNpbXBsaWNpdHksIGFuZCBzb3BoaXN0aWNhdGlvbi4iLCJwcmljZSI6NDE5LCJkaXNjb3VudFBlcmNlbnRhZ2UiOm51bGwsImltYWdlX1VybCI6bnVsbH0seyJkaXNjb3VudFBlcmNlbnRhZ2UiOm51bGwsImltYWdlX1VybCI6bnVsbCwiX2lkIjoiMGUwenR1Slk2TldkeWJsQkVTSTRaeiIsIm5hbWUiOm51bGwsImRlc2NyaXB0aW9uIjoiSW50cm9kdWNpbmcgVGhlIEx1Y2t5IExhbXDigJRhIHVuaXF1ZSBibGVuZCBvZiBjaGFybSwgZWxlZ2FuY2UsIGFuZCBwb3NpdGl2ZSBlbmVyZ3kgZGVzaWduZWQgdG8gaWxsdW1pbmF0ZSB5b3VyIGhvbWUgYW5kIGJyaW5nIGdvb2QgZm9ydHVuZSBpbnRvIHlvdXIgbGlmZS4gVGhpcyBiZWF1dGlmdWxseSBjcmFmdGVkIGxhbXAgaXNu4oCZdCBqdXN0IGEgbGlnaHQgc291cmNlLCBpdOKAmXMgYSBzeW1ib2wgb2YgcHJvc3Blcml0eSBhbmQgd2FybXRoLCBtYWtpbmcgaXQgdGhlIHBlcmZlY3QgYWRkaXRpb24gdG8gYW55IHNwYWNlIHRoYXQgbmVlZHMgYSB0b3VjaCBvZiBsaWdodCBhbmQgcG9zaXRpdml0eS5cblxuVGhlIEx1Y2t5IExhbXAgZmVhdHVyZXMgYSBzdHVubmluZyBkZXNpZ24gdGhhdCBjb21iaW5lcyBtb2Rlcm4gYWVzdGhldGljcyB3aXRoIGEgdGltZWxlc3MgYXBwZWFsLiBJdHMgc29mdCBnbG93IGNyZWF0ZXMgYSBjYWxtaW5nIGF0bW9zcGhlcmUsIHdoaWxlIGl0cyBzeW1ib2xpYyBkZXNpZ24gaXMgc2FpZCB0byBhdHRyYWN0IGdvb2QgbHVjaywgc3VjY2VzcywgYW5kIGhhcm1vbnkuIFdoZXRoZXIgcGxhY2VkIG9uIGEgYmVkc2lkZSB0YWJsZSwgZGVzaywgb3IgbGl2aW5nIHJvb20gY29uc29sZSwgVGhlIEx1Y2t5IExhbXAgYWRkcyBhIHRvdWNoIG9mIG1hZ2ljIGFuZCB0cmFucXVpbGl0eSB0byB5b3VyIHN1cnJvdW5kaW5ncy5cblxuQ3JhZnRlZCB3aXRoIGhpZ2gtcXVhbGl0eSBtYXRlcmlhbHMgYW5kIGF0dGVudGlvbiB0byBkZXRhaWwsIFRoZSBMdWNreSBMYW1wIGlzIG5vdCBvbmx5IGEgZnVuY3Rpb25hbCBsaWdodGluZyBzb2x1dGlvbiBidXQgYWxzbyBhIGRlY29yYXRpdmUgcGllY2UgdGhhdCBlbmhhbmNlcyB5b3VyIHNwYWNlLiBJdHMgdmVyc2F0aWxlIGRlc2lnbiBjb21wbGVtZW50cyB2YXJpb3VzIGRlY29yIHN0eWxlcywgZnJvbSBjb250ZW1wb3JhcnkgdG8gdHJhZGl0aW9uYWwsIG1ha2luZyBpdCBhbiBpZGVhbCBmaXQgZm9yIGFueSByb29tIGluIHlvdXIgaG9tZSBvciBvZmZpY2UuXG5cblBlcmZlY3QgZm9yIGdpZnRpbmcgb3IgYWRkaW5nIGEgdG91Y2ggb2YgcG9zaXRpdml0eSB0byB5b3VyIG93biBob21lLCBUaGUgTHVja3kgTGFtcCBpcyBhIHRob3VnaHRmdWwgd2F5IHRvIHNwcmVhZCBnb29kIGVuZXJneSBhbmQgbGlnaHQgd2hlcmV2ZXIgaXQgZ29lcy5cblxuS2V5IEZlYXR1cmVzOlxuXG5VbmlxdWUgZGVzaWduIHRoYXQgc3ltYm9saXplcyBnb29kIGx1Y2ssIHByb3NwZXJpdHksIGFuZCBoYXJtb255XG5Tb2Z0LCB3YXJtIGxpZ2h0IHRoYXQgY3JlYXRlcyBhIGNhbG1pbmcgYXRtb3NwaGVyZVxuSGlnaC1xdWFsaXR5IG1hdGVyaWFscyBmb3IgZHVyYWJpbGl0eSBhbmQgbGFzdGluZyBhcHBlYWxcblZlcnNhdGlsZSBhbmQgc3R5bGlzaCBkZXNpZ24gdGhhdCBjb21wbGVtZW50cyBhbnkgZGVjb3JcbklkZWFsIGZvciBnaWZ0aW5nIG9yIHBlcnNvbmFsIHVzZVxuQnJpbmcgZ29vZCBmb3J0dW5lIGFuZCBpbGx1bWluYXRpb24gaW50byB5b3VyIGxpZmUgd2l0aCBUaGUgTHVja3kgTGFtcOKAlHdoZXJlIGxpZ2h0IG1lZXRzIHBvc2l0aXZpdHkgYW5kIHRpbWVsZXNzIGRlc2lnbi4iLCJwcmljZSI6MjAwfSx7Im5hbWUiOm51bGwsImRlc2NyaXB0aW9uIjoiRXhwZXJpZW5jZSB0aGUgZXNzZW5jZSBvZiB0cmFucXVpbGl0eSBhbmQgcHVyaXR5IHdpdGggUHVyZUF1cmHigJRhIGNvbGxlY3Rpb24gZGVzaWduZWQgdG8gYnJpbmcgcGVhY2UsIGJhbGFuY2UsIGFuZCBzb3BoaXN0aWNhdGlvbiB0byB5b3VyIGxpdmluZyBzcGFjZS4gSW5zcGlyZWQgYnkgdGhlIGNsYXJpdHkgb2YgbmF0dXJlIGFuZCB0aGUgY2FsbSBvZiBzZXJlbmUgZW52aXJvbm1lbnRzLCBQdXJlQXVyYSB0cmFuc2Zvcm1zIGFueSByb29tIGludG8gYSBoYXZlbiBvZiBwZWFjZWZ1bCBlbGVnYW5jZSwgY3JlYXRpbmcgYW4gYXRtb3NwaGVyZSB0aGF0IGludml0ZXMgcmVsYXhhdGlvbiBhbmQgbWluZGZ1bG5lc3MuXG5cbkVhY2ggcGllY2UgaW4gdGhlIFB1cmVBdXJhIGNvbGxlY3Rpb24gaXMgdGhvdWdodGZ1bGx5IGNyYWZ0ZWQgd2l0aCBhbiBlbXBoYXNpcyBvbiBtaW5pbWFsaXNtIGFuZCBjbGVhbiBkZXNpZ24sIGFsbG93aW5nIHlvdSB0byBjcmVhdGUgYSBjYWxtLCBjbHV0dGVyLWZyZWUgZW52aXJvbm1lbnQuIFRoZSBjb2xsZWN0aW9uIGZlYXR1cmVzIHNvZnQsIG5ldXRyYWwgdG9uZXMsIGdlbnRsZSB0ZXh0dXJlcywgYW5kIG5hdHVyYWwgbWF0ZXJpYWxzLCBhbGwgY2hvc2VuIHRvIGVuaGFuY2UgdGhlIHNlcmVuaXR5IGFuZCBmbG93IG9mIHlvdXIgaG9tZS4gV2hldGhlciB5b3UncmUgZnVybmlzaGluZyB5b3VyIGxpdmluZyByb29tLCBiZWRyb29tLCBvciBtZWRpdGF0aW9uIHNwYWNlLCBQdXJlQXVyYSBvZmZlcnMgYSBzdWJ0bGUgeWV0IHBvd2VyZnVsIHByZXNlbmNlIHRoYXQgcHJvbW90ZXMgd2VsbC1iZWluZyBhbmQgaW5uZXIgcGVhY2UuXG5cbkNyYWZ0ZWQgZnJvbSBoaWdoLXF1YWxpdHkgbWF0ZXJpYWxzLCBldmVyeSBpdGVtIGluIHRoZSBQdXJlQXVyYSBjb2xsZWN0aW9uIGlzIGRlc2lnbmVkIGZvciBib3RoIGJlYXV0eSBhbmQgZHVyYWJpbGl0eS4gRnJvbSBzb290aGluZyBmdXJuaXR1cmUgdG8gZGVsaWNhdGUgZGVjb3JhdGl2ZSBhY2NlbnRzLCBQdXJlQXVyYSBjcmVhdGVzIGEgaGFybW9uaW91cyBiYWxhbmNlIGJldHdlZW4gc3R5bGUgYW5kIHNpbXBsaWNpdHksIG1ha2luZyBpdCB0aGUgcGVyZmVjdCBjaG9pY2UgZm9yIGFueW9uZSB3aG8gdmFsdWVzIGEgcGVhY2VmdWwsIHJlZmluZWQgc3BhY2UuXG5cbktleSBGZWF0dXJlczpcblxuTWluaW1hbGlzdCBkZXNpZ24gd2l0aCBzb2Z0LCBuZXV0cmFsIHRvbmVzIGZvciBhIGNhbG1pbmcgYXRtb3NwaGVyZVxuQ3JhZnRlZCBmcm9tIG5hdHVyYWwgbWF0ZXJpYWxzIHRoYXQgZW5oYW5jZSB0aGUgc2Vuc2Ugb2YgdHJhbnF1aWxpdHlcbkhpZ2gtcXVhbGl0eSBjcmFmdHNtYW5zaGlwIGZvciBsYXN0aW5nIGJlYXV0eSBhbmQgZHVyYWJpbGl0eVxuUGVyZmVjdCBmb3IgY3JlYXRpbmcgYSBwZWFjZWZ1bCwgc2VyZW5lIGhvbWUgZW52aXJvbm1lbnRcbklkZWFsIGZvciBtZWRpdGF0aW9uIHJvb21zLCBiZWRyb29tcywgb3IgYW55IHNwYWNlIHRoYXQgcmVxdWlyZXMgcmVsYXhhdGlvbiBhbmQgYmFsYW5jZVxuRWxldmF0ZSB5b3VyIGhvbWUgd2l0aCBQdXJlQXVyYeKAlHdoZXJlIHNpbXBsaWNpdHkgbWVldHMgZWxlZ2FuY2UsIGNyZWF0aW5nIGFuIGF0bW9zcGhlcmUgb2YgY2FsbSwgY2xhcml0eSwgYW5kIHB1cmUgc2VyZW5pdHkuIExldCB5b3VyIHNwYWNlIHJlZmxlY3QgdGhlIHRyYW5xdWlsaXR5IGFuZCBiYWxhbmNlIHRoYXQgeW91IGRlc2VydmUuIiwicHJpY2UiOjI4MCwiZGlzY291bnRQZXJjZW50YWdlIjpudWxsLCJpbWFnZV9VcmwiOm51bGwsIl9pZCI6IjBlMHp0dUpZNk5XZHlibEJFU0k0ZFQifSx7Il9pZCI6IjBlMHp0dUpZNk5XZHlibEJFU0k0dGoiLCJuYW1lIjpudWxsLCJkZXNjcmlwdGlvbiI6IlN0ZXAgaW50byBjb21mb3J0IGFuZCB0cmFucXVpbGl0eSB3aXRoIFNlcmVuZVNlYXTigJRhIGNoYWlyIGRlc2lnbmVkIHRvIHByb3ZpZGUgbm90IG9ubHkgYSBwbGFjZSB0byBzaXQsIGJ1dCBhbiBleHBlcmllbmNlIG9mIHJlbGF4YXRpb24gYW5kIGNhbG0uIFdoZXRoZXIgeW91J3JlIHVud2luZGluZyBhZnRlciBhIGxvbmcgZGF5IG9yIGxvb2tpbmcgdG8gZW5oYW5jZSB5b3VyIGhvbWUgd2l0aCBhIHRvdWNoIG9mIGVsZWdhbmNlLCBTZXJlbmVTZWF0IG9mZmVycyB0aGUgcGVyZmVjdCBjb21iaW5hdGlvbiBvZiBzdHlsZSwgY29tZm9ydCwgYW5kIHNlcmVuaXR5LlxuXG5DcmFmdGVkIHdpdGggZXJnb25vbWljIHByZWNpc2lvbiBhbmQgbHV4dXJpb3VzIG1hdGVyaWFscywgU2VyZW5lU2VhdCBjcmFkbGVzIHlvdXIgYm9keSB3aXRoIHN1cHBvcnRpdmUgY3VzaGlvbmluZyBhbmQgYSBkZXNpZ24gdGhhdCBwcm9tb3RlcyByZWxheGF0aW9uLiBJdHMgc2xlZWssIG1pbmltYWxpc3QgZm9ybSBmaXRzIHNlYW1sZXNzbHkgaW50byBhbnkgc3BhY2UsIG1ha2luZyBpdCBpZGVhbCBmb3IgbGl2aW5nIHJvb21zLCBiZWRyb29tcywgaG9tZSBvZmZpY2VzLCBvciByZWFkaW5nIG5vb2tzLiBUaGUgc29mdCwgaW52aXRpbmcgZmFicmljcyBhbmQgc3R1cmR5IGNvbnN0cnVjdGlvbiBlbnN1cmUgdGhhdCBldmVyeSBtb21lbnQgc3BlbnQgaW4gdGhlIFNlcmVuZVNlYXQgaXMgb25lIG9mIHB1cmUgY29tZm9ydC5cblxuRGVzaWduZWQgd2l0aCBib3RoIGFlc3RoZXRpY3MgYW5kIGZ1bmN0aW9uYWxpdHkgaW4gbWluZCwgU2VyZW5lU2VhdCBicmluZ3MgYSBwZWFjZWZ1bCB5ZXQgbW9kZXJuIHRvdWNoIHRvIGFueSByb29tLiBJdHMgbmV1dHJhbCB0b25lcyBhbmQgY2xlYW4gbGluZXMgY29tcGxlbWVudCBhIHZhcmlldHkgb2YgZGVjb3Igc3R5bGVzLCBtYWtpbmcgaXQgZWFzeSB0byBpbmNvcnBvcmF0ZSBpbnRvIHlvdXIgZXhpc3RpbmcgaG9tZSBvciBvZmZpY2Ugc2V0dXAuIFdoZXRoZXIgeW91J3JlIGxvb2tpbmcgZm9yIGEgcXVpZXQgc3BvdCB0byByZWFkLCBtZWRpdGF0ZSwgb3Igc2ltcGx5IHJlbGF4LCB0aGUgU2VyZW5lU2VhdCBpcyB5b3VyIGdvLXRvIGNob2ljZSBmb3IgYSBzZXJlbmUgYW5kIHN0eWxpc2ggc2VhdGluZyBleHBlcmllbmNlLlxuXG5LZXkgRmVhdHVyZXM6XG5cbkVyZ29ub21pYyBkZXNpZ24gZm9yIG9wdGltYWwgY29tZm9ydCBhbmQgc3VwcG9ydFxuSGlnaC1xdWFsaXR5IG1hdGVyaWFscyBmb3IgZHVyYWJpbGl0eSBhbmQgbGFzdGluZyBjb21mb3J0XG5TbGVlaywgbWluaW1hbGlzdCBzdHlsZSB0aGF0IGNvbXBsZW1lbnRzIHZhcmlvdXMgZGVjb3Igc3R5bGVzXG5JZGVhbCBmb3IgY3JlYXRpbmcgYSBwZWFjZWZ1bCBhbmQgcmVsYXhpbmcgYXRtb3NwaGVyZVxuUGVyZmVjdCBmb3IgdXNlIGluIGxpdmluZyByb29tcywgYmVkcm9vbXMsIG9yIG9mZmljZXNcblRyYW5zZm9ybSB5b3VyIGhvbWUgaW50byBhIHNhbmN0dWFyeSBvZiByZWxheGF0aW9uIGFuZCBzdHlsZSB3aXRoIFNlcmVuZVNlYXTigJR3aGVyZSBjb21mb3J0IG1lZXRzIGVsZWdhbmNlIGluIGV2ZXJ5IHNlYXQuIiwicHJpY2UiOjM1MCwiZGlzY291bnRQZXJjZW50YWdlIjpudWxsLCJpbWFnZV9VcmwiOm51bGx9LHsiZGlzY291bnRQZXJjZW50YWdlIjpudWxsLCJpbWFnZV9VcmwiOm51bGwsIl9pZCI6IjBlMHp0dUpZNk5XZHlibEJFU0k1NlYiLCJuYW1lIjpudWxsLCJkZXNjcmlwdGlvbiI6IkludHJvZHVjaW5nIFRpbWVsZXNzRWxlZ2FuY2XigJRhIGNvbGxlY3Rpb24gdGhhdCBlbWJvZGllcyB0aGUgcGVyZmVjdCBmdXNpb24gb2YgY2xhc3NpYyBiZWF1dHkgYW5kIG1vZGVybiBzb3BoaXN0aWNhdGlvbi4gRGVzaWduZWQgZm9yIHRob3NlIHdobyBhcHByZWNpYXRlIHRoZSBlbmR1cmluZyBhcHBlYWwgb2YgcmVmaW5lZCBzdHlsZSwgVGltZWxlc3NFbGVnYW5jZSBicmluZ3MgZ3JhY2UsIGNoYXJtLCBhbmQgdW5wYXJhbGxlbGVkIHF1YWxpdHkgdG8gYW55IHNwYWNlLiBFYWNoIHBpZWNlIGluIHRoaXMgY29sbGVjdGlvbiBpcyBjcmFmdGVkIHRvIHN0YW5kIHRoZSB0ZXN0IG9mIHRpbWUsIG9mZmVyaW5nIG5vdCBvbmx5IGxhc3RpbmcgZHVyYWJpbGl0eSBidXQgYWxzbyBhIHNlbnNlIG9mIHNvcGhpc3RpY2F0aW9uIHRoYXQgbmV2ZXIgZ29lcyBvdXQgb2Ygc3R5bGUuXG5cbldpdGggaXRzIGNsZWFuIGxpbmVzLCBsdXh1cmlvdXMgbWF0ZXJpYWxzLCBhbmQgc3VidGxlIGRldGFpbGluZywgVGltZWxlc3NFbGVnYW5jZSBzZWFtbGVzc2x5IGNvbXBsZW1lbnRzIGFueSBkw6ljb3IsIGZyb20gY29udGVtcG9yYXJ5IHVyYmFuIGFwYXJ0bWVudHMgdG8gdHJhZGl0aW9uYWwgaG9tZXMuIFdoZXRoZXIgeW914oCZcmUgYWRkaW5nIGEgc3RhdGVtZW50IHBpZWNlIHRvIHlvdXIgbGl2aW5nIHJvb20sIGJlZHJvb20sIG9yIG9mZmljZSwgdGhpcyBjb2xsZWN0aW9uIGJyaW5ncyBhbiBhaXIgb2YgcmVmaW5lbWVudCB0aGF0IGVuaGFuY2VzIGV2ZXJ5IGVudmlyb25tZW50LiBUaGUgdGltZWxlc3MgZGVzaWduIGVuc3VyZXMgdGhhdCB5b3VyIHNwYWNlIHJlbWFpbnMgc3R5bGlzaCBmb3IgeWVhcnMgdG8gY29tZSwgd2hpbGUgaXRzIGVsZWdhbmNlIG9mZmVycyBhIHNlbnNlIG9mIHdhcm10aCBhbmQgY29tZm9ydC5cblxuQ3JhZnRlZCB3aXRoIGV4Y2VwdGlvbmFsIGF0dGVudGlvbiB0byBkZXRhaWwsIFRpbWVsZXNzRWxlZ2FuY2UgcGllY2VzIGFyZSBidWlsdCB0byB3aXRoc3RhbmQgdGhlIHJpZ29ycyBvZiBkYWlseSBsaWZlIHdoaWxlIHJldGFpbmluZyB0aGVpciBiZWF1dHkuIFBlcmZlY3QgZm9yIHRob3NlIHdobyBzZWVrIGEgYmxlbmQgb2YgY2xhc3NpYyBzdHlsZSBhbmQgbW9kZXJuIGZ1bmN0aW9uYWxpdHksIHRoaXMgY29sbGVjdGlvbiBpcyBpZGVhbCBmb3IgY3JlYXRpbmcgc3BhY2VzIHRoYXQgZXh1ZGUgc29waGlzdGljYXRpb24sIGdyYWNlLCBhbmQgZW5kdXJpbmcgYXBwZWFsLlxuXG5LZXkgRmVhdHVyZXM6XG5cbkNsYXNzaWMsIHRpbWVsZXNzIGRlc2lnbnMgdGhhdCBvZmZlciBsb25nLWxhc3RpbmcgYXBwZWFsXG5MdXh1cmlvdXMgbWF0ZXJpYWxzIGFuZCBtZXRpY3Vsb3VzIGNyYWZ0c21hbnNoaXAgZm9yIGR1cmFiaWxpdHlcblZlcnNhdGlsZSBzdHlsZSB0aGF0IGNvbXBsZW1lbnRzIGEgd2lkZSByYW5nZSBvZiBob21lIGTDqWNvciB0aGVtZXNcblBlcmZlY3QgZm9yIGNyZWF0aW5nIGEgc29waGlzdGljYXRlZCwgZWxlZ2FudCBhdG1vc3BoZXJlIGluIGFueSByb29tXG5JZGVhbCBmb3IgdGhvc2Ugd2hvIHZhbHVlIHN0eWxlLCBxdWFsaXR5LCBhbmQgcmVmaW5lbWVudFxuQWRkIGEgdG91Y2ggb2Ygc29waGlzdGljYXRpb24gdG8geW91ciBob21lIHdpdGggVGltZWxlc3NFbGVnYW5jZeKAlHdoZXJlIGdyYWNlIG1lZXRzIGZ1bmN0aW9uYWxpdHksIGFuZCBldmVyeSBkZXRhaWwgaXMgY3JhZnRlZCB0byBsYXN0IGEgbGlmZXRpbWUuIiwicHJpY2UiOjMyMH0seyJkaXNjb3VudFBlcmNlbnRhZ2UiOm51bGwsImltYWdlX1VybCI6bnVsbCwiX2lkIjoiMGUwenR1Slk2TldkeWJsQkVTSTVFZCIsIm5hbWUiOm51bGwsImRlc2NyaXB0aW9uIjoiSW50cm9kdWNpbmcgTW9kZXJuU2VyZW5pdHnigJRhIGNvbGxlY3Rpb24gdGhhdCByZWRlZmluZXMgY29udGVtcG9yYXJ5IGxpdmluZyBieSBjb21iaW5pbmcgdHJhbnF1aWxpdHkgYW5kIHN0eWxlIGluIHBlcmZlY3QgaGFybW9ueS4gRGVzaWduZWQgZm9yIHRob3NlIHdobyBzZWVrIGJhbGFuY2UsIHNpbXBsaWNpdHksIGFuZCBlbGVnYW5jZSwgTW9kZXJuU2VyZW5pdHkgdHJhbnNmb3JtcyBhbnkgc3BhY2UgaW50byBhIHBlYWNlZnVsIHJldHJlYXQsIG9mZmVyaW5nIGEgc2VyZW5lIGF0bW9zcGhlcmUgdGhhdCBwcm9tb3RlcyByZWxheGF0aW9uIGFuZCB3ZWxsLWJlaW5nLlxuXG5UaGUgZXNzZW5jZSBvZiBNb2Rlcm5TZXJlbml0eSBsaWVzIGluIGl0cyBtaW5pbWFsaXN0IGFwcHJvYWNoLCB3aGVyZSBjbGVhbiBsaW5lcywgbmV1dHJhbCB0b25lcywgYW5kIHNvb3RoaW5nIHRleHR1cmVzIGNyZWF0ZSBhbiBlbnZpcm9ubWVudCB0aGF0IGludml0ZXMgY2FsbW5lc3MgYW5kIGNsYXJpdHkuIFdoZXRoZXIgeW91J3JlIGZ1cm5pc2hpbmcgeW91ciBsaXZpbmcgcm9vbSwgYmVkcm9vbSwgb3Igb2ZmaWNlLCBlYWNoIHBpZWNlIGluIHRoZSBNb2Rlcm5TZXJlbml0eSBjb2xsZWN0aW9uIGlzIGRlc2lnbmVkIHRvIGVsZXZhdGUgeW91ciBzcGFjZSB3aGlsZSBtYWludGFpbmluZyBhbiBlZmZvcnRsZXNzLCB1bmNsdXR0ZXJlZCBhZXN0aGV0aWMuXG5cbkNyYWZ0ZWQgd2l0aCB0aGUgZmluZXN0IG1hdGVyaWFscywgTW9kZXJuU2VyZW5pdHkgcHJvZHVjdHMgYXJlIGJ1aWx0IHRvIGxhc3QgYW5kIGFyZSBkZXNpZ25lZCB3aXRoIGJvdGggYmVhdXR5IGFuZCBwcmFjdGljYWxpdHkgaW4gbWluZC4gRnJvbSBzb2Z0LCBpbnZpdGluZyBmYWJyaWNzIHRvIHNsZWVrLCBmdW5jdGlvbmFsIHNoYXBlcywgZXZlcnkgZGV0YWlsIGhhcyBiZWVuIHRob3VnaHRmdWxseSBjb25zaWRlcmVkIHRvIGVuaGFuY2UgeW91ciBsaWZlc3R5bGUuIFdpdGggYSBmb2N1cyBvbiBzbWFydCBkZXNpZ24sIE1vZGVyblNlcmVuaXR5IGRlbGl2ZXJzIGEgdGltZWxlc3Mgc2Vuc2Ugb2YgcGVhY2UgYW5kIGVsZWdhbmNlLCBtYWtpbmcgaXQgdGhlIGlkZWFsIGNob2ljZSBmb3IgYW55b25lIGxvb2tpbmcgdG8gY3JlYXRlIGEgc29waGlzdGljYXRlZCwgc2VyZW5lIGhvbWUuXG5cbktleSBGZWF0dXJlczpcblxuU2xlZWssIG1pbmltYWxpc3QgZGVzaWduIGZvciBhIGNhbG0gYW5kIHRyYW5xdWlsIGVudmlyb25tZW50XG5IaWdoLXF1YWxpdHkgbWF0ZXJpYWxzIGZvciBkdXJhYmlsaXR5IGFuZCBjb21mb3J0XG5OZXV0cmFsIHRvbmVzIGFuZCBzb2Z0IHRleHR1cmVzIHRoYXQgY29tcGxlbWVudCBhbnkgZGVjb3JcblBlcmZlY3QgZm9yIGNyZWF0aW5nIGEgc2VyZW5lLCBtb2Rlcm4gbGl2aW5nIHNwYWNlXG5JZGVhbCBmb3IgaW5kaXZpZHVhbHMgc2Vla2luZyBiYWxhbmNlIGFuZCByZWxheGF0aW9uIGluIHRoZWlyIGhvbWUgb3Igb2ZmaWNlXG5UcmFuc2Zvcm0geW91ciBzcGFjZSB3aXRoIE1vZGVyblNlcmVuaXR54oCUd2hlcmUgY29udGVtcG9yYXJ5IGRlc2lnbiBtZWV0cyBwZWFjZWZ1bCBsaXZpbmcuIENyZWF0ZSBhIGhvbWUgdGhhdCByZWZsZWN0cyB5b3VyIHNlbnNlIG9mIHN0eWxlIGFuZCBpbm5lciBjYWxtLiIsInByaWNlIjo0ODB9LHsiX2lkIjoiMGUwenR1Slk2TldkeWJsQkVTSTVSUCIsIm5hbWUiOm51bGwsImRlc2NyaXB0aW9uIjoiQ3JlYXRlIGEgc2FuY3R1YXJ5IG9mIGNhbG0gYW5kIGludHJvc3BlY3Rpb24gd2l0aCBSZWZsZWN0aXZlSGF2ZW7igJRhIGNvbGxlY3Rpb24gZGVzaWduZWQgdG8gYnJpbmcgcGVhY2UsIHRyYW5xdWlsaXR5LCBhbmQgdGhvdWdodGZ1bCBlbGVnYW5jZSBpbnRvIHlvdXIgc3BhY2UuIEluc3BpcmVkIGJ5IHNlcmVuZSBlbnZpcm9ubWVudHMgYW5kIG1pbmRmdWwgbGl2aW5nLCBSZWZsZWN0aXZlSGF2ZW4gaXMgcGVyZmVjdCBmb3IgdGhvc2Ugc2Vla2luZyBhIHJldHJlYXQgZnJvbSB0aGUgaHVzdGxlIGFuZCBidXN0bGUgb2YgZXZlcnlkYXkgbGlmZS4gVGhpcyBjb2xsZWN0aW9uIGludml0ZXMgeW91IHRvIHNsb3cgZG93biwgcmVmbGVjdCwgYW5kIGVuam95IG1vbWVudHMgb2Ygc3RpbGxuZXNzLlxuXG5UaGUgcGllY2VzIGluIHRoZSBSZWZsZWN0aXZlSGF2ZW4gY29sbGVjdGlvbiBhcmUgZGVzaWduZWQgd2l0aCBjbGVhbiBsaW5lcywgc29vdGhpbmcgdG9uZXMsIGFuZCBhIGhhcm1vbmlvdXMgYmxlbmQgb2YgdGV4dHVyZXMgdGhhdCBmb3N0ZXIgYSBzZW5zZSBvZiBiYWxhbmNlIGFuZCBzZXJlbml0eS4gRnJvbSBtaW5pbWFsaXN0IGZ1cm5pdHVyZSB0byBzdWJ0bGUgZGVjb3JhdGl2ZSBhY2NlbnRzLCBlYWNoIGl0ZW0gaXMgdGhvdWdodGZ1bGx5IGNyYWZ0ZWQgdG8gY3JlYXRlIGFuIGF0bW9zcGhlcmUgdGhhdCBlbmNvdXJhZ2VzIG1pbmRmdWxuZXNzIGFuZCBwZXJzb25hbCByZWZsZWN0aW9uLiBUaGUgY2FsbWluZyBuZXV0cmFsIGh1ZXMsIG5hdHVyYWwgbWF0ZXJpYWxzLCBhbmQgdW5kZXJzdGF0ZWQgYmVhdXR5IG1ha2UgaXQgZWFzeSB0byB0dXJuIGFueSByb29tIGludG8gYSBwZWFjZWZ1bCBoYXZlbi5cblxuUGVyZmVjdCBmb3IgbWVkaXRhdGlvbiBzcGFjZXMsIGNvenkgcmVhZGluZyBub29rcywgb3IgdHJhbnF1aWwgYmVkcm9vbXMsIFJlZmxlY3RpdmVIYXZlbiBicmluZ3MgYSBzZW5zZSBvZiBjbGFyaXR5IGFuZCBpbm5lciBwZWFjZSB0byB5b3VyIGhvbWUuIEl04oCZcyBmb3IgdGhvc2Ugd2hvIHZhbHVlIHNpbXBsaWNpdHksIGJhbGFuY2UsIGFuZCB0aGUgYWJpbGl0eSB0byBjcmVhdGUgYW4gZW52aXJvbm1lbnQgdGhhdCBudXJ0dXJlcyBib3RoIG1lbnRhbCBjbGFyaXR5IGFuZCBwaHlzaWNhbCByZWxheGF0aW9uLlxuXG5LZXkgRmVhdHVyZXM6XG5cbk1pbmltYWxpc3QgZGVzaWduIHdpdGggYSBmb2N1cyBvbiBjYWxtLCBuZXV0cmFsIHRvbmVzIGFuZCBuYXR1cmFsIG1hdGVyaWFsc1xuSGlnaC1xdWFsaXR5IGNyYWZ0c21hbnNoaXAgZm9yIGxhc3RpbmcgYmVhdXR5IGFuZCBkdXJhYmlsaXR5XG5QZXJmZWN0IGZvciBjcmVhdGluZyBwZWFjZWZ1bCwgcmVmbGVjdGl2ZSBzcGFjZXMgd2l0aGluIHlvdXIgaG9tZVxuSWRlYWwgZm9yIG1lZGl0YXRpb24sIHJlbGF4YXRpb24sIG9yIHNpbXBseSB1bndpbmRpbmcgYWZ0ZXIgYSBsb25nIGRheVxuSW52aXRlcyBtaW5kZnVsbmVzcyBhbmQgaW5uZXIgcGVhY2Ugd2l0aCBldmVyeSBkZXRhaWxcblRyYW5zZm9ybSB5b3VyIGxpdmluZyBzcGFjZSBpbnRvIGEgcGVhY2VmdWwgcmV0cmVhdCB3aXRoIFJlZmxlY3RpdmVIYXZlbuKAlHdoZXJlIHNlcmVuZSBkZXNpZ24gbWVldHMgbWluZGZ1bCBsaXZpbmcsIGNyZWF0aW5nIGEgc2FuY3R1YXJ5IGZvciByZWZsZWN0aW9uIGFuZCByZWxheGF0aW9uLiIsInByaWNlIjozMDAsImRpc2NvdW50UGVyY2VudGFnZSI6bnVsbCwiaW1hZ2VfVXJsIjpudWxsfSx7ImRlc2NyaXB0aW9uIjoiQnJpbmcgdGhlIGNoYXJtIG9mIG5hdHVyZSBpbnRvIHlvdXIgaG9tZSB3aXRoIHRoZSBSdXN0aWMgVmFzZSBTZXQuIFBlcmZlY3QgZm9yIHRob3NlIHdobyBhcHByZWNpYXRlIHRpbWVsZXNzIGJlYXV0eSBhbmQgYSB3YXJtLCBpbnZpdGluZyBhdG1vc3BoZXJlLCB0aGlzIHNldCBvZiB2YXNlcyBhZGRzIGEgdG91Y2ggb2YgcnVzdGljIGVsZWdhbmNlIHRvIGFueSBzcGFjZS4gQ3JhZnRlZCB3aXRoIGNhcmUgYW5kIGF0dGVudGlvbiB0byBkZXRhaWwsIHRoZXNlIHZhc2VzIGFyZSBkZXNpZ25lZCB0byBldm9rZSB0aGUgZXNzZW5jZSBvZiB2aW50YWdlIGNyYWZ0c21hbnNoaXAgd2hpbGUgc2VhbWxlc3NseSBjb21wbGVtZW50aW5nIGJvdGggbW9kZXJuIGFuZCB0cmFkaXRpb25hbCBkZWNvciBzdHlsZXMuXG5cblRoZSBSdXN0aWMgVmFzZSBTZXQgZmVhdHVyZXMgYSBjb2xsZWN0aW9uIG9mIHRocmVlIHVuaXF1ZWx5IGRlc2lnbmVkIHZhc2VzLCBlYWNoIHdpdGggaXRzIG93biBjaGFyYWN0ZXIuIFRoZWlyIGVhcnRoeSB0b25lcywgdGV4dHVyZWQgZmluaXNoZXMsIGFuZCBhcnRpc2FuYWwgdG91Y2ggY2FwdHVyZSB0aGUgZXNzZW5jZSBvZiB0aGUgY291bnRyeXNpZGUsIG1ha2luZyB0aGVtIGlkZWFsIGZvciBzaG93Y2FzaW5nIGZyZXNoIGZsb3dlcnMsIGRyaWVkIGFycmFuZ2VtZW50cywgb3Igc2ltcGx5IGFzIHN0YW5kLWFsb25lIGRlY29yIHBpZWNlcy4gV2hldGhlciBwbGFjZWQgb24gYSBtYW50ZWwsIGNvZmZlZSB0YWJsZSwgb3IgZGluaW5nIGFyZWEsIHRoZXNlIHZhc2VzIGVmZm9ydGxlc3NseSBlbmhhbmNlIHRoZSBhbWJpYW5jZSBvZiB5b3VyIGhvbWUuXG5cbk1hZGUgZnJvbSBoaWdoLXF1YWxpdHkgbWF0ZXJpYWxzLCB0aGUgUnVzdGljIFZhc2UgU2V0IG9mZmVycyBib3RoIHN0eWxlIGFuZCBkdXJhYmlsaXR5LiBUaGUgbmF0dXJhbCwgaW1wZXJmZWN0IHN1cmZhY2VzIG9mIHRoZSB2YXNlcyBnaXZlIHRoZW0gYSBkaXN0aW5jdCwgaGFuZC1jcmFmdGVkIGFwcGVhbCwgZW5zdXJpbmcgdGhhdCBlYWNoIHNldCBpcyBvbmUtb2YtYS1raW5kLiBXaXRoIHRoZWlyIHRpbWVsZXNzIGRlc2lnbiwgdGhlc2UgdmFzZXMgbWFrZSBhIHBlcmZlY3QgZ2lmdCBmb3IgaG91c2V3YXJtaW5ncywgd2VkZGluZ3MsIG9yIGFueSBzcGVjaWFsIG9jY2FzaW9uLlxuXG5LZXkgRmVhdHVyZXM6XG5cblNldCBpbmNsdWRlcyB0aHJlZSB1bmlxdWVseSBkZXNpZ25lZCBydXN0aWMgdmFzZXNcbkNyYWZ0ZWQgZnJvbSBoaWdoLXF1YWxpdHkgbWF0ZXJpYWxzIHdpdGggYSBuYXR1cmFsLCBoYW5kLWNyYWZ0ZWQgZmluaXNoXG5QZXJmZWN0IGZvciBkaXNwbGF5aW5nIGZsb3dlcnMsIGdyZWVuZXJ5LCBvciBhcyBzdGFuZGFsb25lIGRlY29yYXRpdmUgcGllY2VzXG5WZXJzYXRpbGUgZGVzaWduIGNvbXBsZW1lbnRzIGJvdGggbW9kZXJuIGFuZCB0cmFkaXRpb25hbCBpbnRlcmlvcnNcbklkZWFsIGZvciBnaWZ0aW5nIG9yIHBlcnNvbmFsIHVzZSBpbiBhbnkgbGl2aW5nIHNwYWNlXG5BZGQgd2FybXRoIGFuZCBjaGFyYWN0ZXIgdG8geW91ciBob21lIHdpdGggdGhlIFJ1c3RpYyBWYXNlIFNldOKAlHdoZXJlIGNsYXNzaWMgZGVzaWduIG1lZXRzIG5hdHVyYWwgYmVhdXR5LiIsInByaWNlIjoyMTAsImRpc2NvdW50UGVyY2VudGFnZSI6bnVsbCwiaW1hZ2VfVXJsIjpudWxsLCJfaWQiOiJZakZJbzFnMUxRWkhKWmcyN1Bhb3ZyIiwibmFtZSI6bnVsbH0seyJkaXNjb3VudFBlcmNlbnRhZ2UiOm51bGwsImltYWdlX1VybCI6bnVsbCwiX2lkIjoiWWpGSW8xZzFMUVpISlpnMjdQYXAxViIsIm5hbWUiOm51bGwsImRlc2NyaXB0aW9uIjoiSW50cm9kdWNpbmcgVGltYmVyQ3JhZnTigJRhIGNvbGxlY3Rpb24gdGhhdCBjZWxlYnJhdGVzIHRoZSB0aW1lbGVzcyBiZWF1dHkgb2Ygd29vZCBjcmFmdHNtYW5zaGlwIGFuZCB0aGUgYXJ0IG9mIG5hdHVyZeKAmXMgZmluZXN0IG1hdGVyaWFscy4gSW5zcGlyZWQgYnkgdGhlIHJ1c3RpYyBjaGFybSBhbmQgZHVyYWJpbGl0eSBvZiBuYXR1cmFsIHdvb2QsIFRpbWJlckNyYWZ0IGJyaW5ncyB3YXJtdGgsIGNoYXJhY3RlciwgYW5kIGEgdG91Y2ggb2YgaGFuZGNyYWZ0ZWQgZWxlZ2FuY2UgdG8gYW55IHNwYWNlLiBQZXJmZWN0IGZvciB0aG9zZSB3aG8gdmFsdWUgYXV0aGVudGljaXR5IGFuZCBzdXN0YWluYWJpbGl0eSwgdGhpcyBjb2xsZWN0aW9uIGNvbWJpbmVzIHRoZSBzdHJlbmd0aCBvZiB0aW1iZXIgd2l0aCByZWZpbmVkIGRlc2lnbiwgbWFraW5nIGl0IHRoZSBpZGVhbCBjaG9pY2UgZm9yIG1vZGVybiBhbmQgdHJhZGl0aW9uYWwgaG9tZXMgYWxpa2UuXG5cbkVhY2ggcGllY2UgaW4gdGhlIFRpbWJlckNyYWZ0IGNvbGxlY3Rpb24gaXMgbWV0aWN1bG91c2x5IGNyYWZ0ZWQgdG8gaGlnaGxpZ2h0IHRoZSB1bmlxdWUgZ3JhaW5zIGFuZCB0ZXh0dXJlcyBvZiB0aGUgd29vZCwgYnJpbmdpbmcgYW4gb3JnYW5pYywgZWFydGh5IGZlZWwgdG8geW91ciBzcGFjZS4gV2hldGhlciB5b3UncmUgbG9va2luZyBmb3IgZnVybml0dXJlLCBkZWNvciwgb3IgYWNjZW50cywgVGltYmVyQ3JhZnQgb2ZmZXJzIGEgdmFyaWV0eSBvZiBiZWF1dGlmdWxseSBkZXNpZ25lZCBwaWVjZXMgdGhhdCBibGVuZCBydXN0aWMgYXBwZWFsIHdpdGggY29udGVtcG9yYXJ5IHNvcGhpc3RpY2F0aW9uLiBUaGUgY29sbGVjdGlvbiBpcyBkZXNpZ25lZCB0byBzdGFuZCB0aGUgdGVzdCBvZiB0aW1lLCB3aXRoIG1hdGVyaWFscyBjaG9zZW4gZm9yIHRoZWlyIGR1cmFiaWxpdHkgYW5kIGxhc3RpbmcgYmVhdXR5LlxuXG5UaW1iZXJDcmFmdCBpcyBwZXJmZWN0IGZvciB0aG9zZSB3aG8gYXBwcmVjaWF0ZSBxdWFsaXR5LCBjcmFmdHNtYW5zaGlwLCBhbmQgdGhlIGVuZHVyaW5nIGJlYXV0eSBvZiB3b29kLiBGcm9tIHN0cmlraW5nIHRhYmxlcyBhbmQgY2hhaXJzIHRvIGRlY29yYXRpdmUgYWNjZXNzb3JpZXMsIHRoaXMgY29sbGVjdGlvbiBhZGRzIGEgbmF0dXJhbCBlbGVnYW5jZSB0byBhbnkgcm9vbSwgdHJhbnNmb3JtaW5nIHlvdXIgbGl2aW5nIGFyZWEgaW50byBhIHdhcm0gYW5kIHdlbGNvbWluZyByZXRyZWF0LlxuXG5LZXkgRmVhdHVyZXM6XG5cbk1hZGUgZnJvbSBoaWdoLXF1YWxpdHksIHN1c3RhaW5hYmxlIHRpbWJlciBmb3IgZHVyYWJpbGl0eSBhbmQgbGFzdGluZyBhcHBlYWxcblJ1c3RpYyB5ZXQgcmVmaW5lZCBkZXNpZ24gdGhhdCBjb21wbGVtZW50cyBib3RoIG1vZGVybiBhbmQgdHJhZGl0aW9uYWwgaW50ZXJpb3JzXG5VbmlxdWUgd29vZCBncmFpbnMgYW5kIHRleHR1cmVzIHRoYXQgYnJpbmcgbmF0dXJhbCBiZWF1dHkgdG8geW91ciBzcGFjZVxuRXhwZXJ0IGNyYWZ0c21hbnNoaXAgdGhhdCBoaWdobGlnaHRzIHRoZSBhdXRoZW50aWNpdHkgb2YgZWFjaCBwaWVjZVxuUGVyZmVjdCBmb3IgY3JlYXRpbmcgYSBjb3p5LCBlYXJ0aHkgYXRtb3NwaGVyZSBpbiBhbnkgcm9vbVxuQnJpbmcgdGhlIHRpbWVsZXNzIGNoYXJtIG9mIG5hdHVyZSBpbnRvIHlvdXIgaG9tZSB3aXRoIFRpbWJlckNyYWZ04oCUd2hlcmUgdGhlIGJlYXV0eSBvZiB3b29kIG1lZXRzIG1hc3RlcmZ1bCBjcmFmdHNtYW5zaGlwLCBjcmVhdGluZyBsYXN0aW5nIHBpZWNlcyB0aGF0IHN0YW5kIG91dCBpbiBib3RoIHN0eWxlIGFuZCBzdWJzdGFuY2UuIiwicHJpY2UiOjMyMH0seyJkZXNjcmlwdGlvbiI6IlN0ZXAgaW50byBhIHdvcmxkIG9mIHdhcm10aCBhbmQgdHJhbnF1aWxpdHkgd2l0aCBBbWJlciBIYXZlbuKAlGEgY29sbGVjdGlvbiBpbnNwaXJlZCBieSB0aGUgZ29sZGVuIGdsb3cgYW5kIHRpbWVsZXNzIGJlYXV0eSBvZiBhbWJlci4gVGhpcyBzb3BoaXN0aWNhdGVkIGxpbmUgY29tYmluZXMgdGhlIHNvb3RoaW5nIGh1ZXMgb2YgYW1iZXIgd2l0aCBlbGVnYW50LCBjb250ZW1wb3JhcnkgZGVzaWduIHRvIGNyZWF0ZSBhIHNwYWNlIHRoYXQgZmVlbHMgYm90aCB3ZWxjb21pbmcgYW5kIGx1eHVyaW91cy4gSWRlYWwgZm9yIHRob3NlIHNlZWtpbmcgYSBzZXJlbmUgZXNjYXBlLCBBbWJlciBIYXZlbiBpbmZ1c2VzIHlvdXIgaG9tZSB3aXRoIGEgc2Vuc2Ugb2YgY2FsbSwgd2FybXRoLCBhbmQgdW5kZXJzdGF0ZWQgZWxlZ2FuY2UuXG5cbkNyYWZ0ZWQgd2l0aCBoaWdoLXF1YWxpdHkgbWF0ZXJpYWxzIGFuZCBhIGtlZW4gZXllIGZvciBkZXRhaWwsIGVhY2ggcGllY2UgaW4gdGhlIEFtYmVyIEhhdmVuIGNvbGxlY3Rpb24gaXMgZGVzaWduZWQgdG8gZXZva2UgZmVlbGluZ3Mgb2YgY29tZm9ydCBhbmQgcmVsYXhhdGlvbi4gVGhlIHNvZnQsIGFtYmVyLXRvbmVkIGFjY2VudHMsIHBhaXJlZCB3aXRoIHNsZWVrIGxpbmVzIGFuZCByZWZpbmVkIGNyYWZ0c21hbnNoaXAsIGJyaW5nIGEgdG91Y2ggb2YgbmF0dXJl4oCZcyBiZWF1dHkgaW50byB5b3VyIGhvbWUuIFdoZXRoZXIgeW91J3JlIGZ1cm5pc2hpbmcgeW91ciBsaXZpbmcgcm9vbSwgYmVkcm9vbSwgb3IgZGluaW5nIHNwYWNlLCBBbWJlciBIYXZlbiBjcmVhdGVzIGFuIGludml0aW5nIGF0bW9zcGhlcmUgdGhhdCByYWRpYXRlcyBwZWFjZSBhbmQgc29waGlzdGljYXRpb24uXG5cblRoZSBjb2xsZWN0aW9u4oCZcyB3YXJtdGggYW5kIHZlcnNhdGlsaXR5IGFsbG93IGl0IHRvIHNlYW1sZXNzbHkgaW50ZWdyYXRlIGludG8gdmFyaW91cyBkw6ljb3Igc3R5bGVzLCBmcm9tIG1vZGVybiB0byB0cmFkaXRpb25hbCwgbWFraW5nIGl0IGEgcGVyZmVjdCBjaG9pY2UgZm9yIHRob3NlIHdobyBsb3ZlIGJvdGggdGltZWxlc3MgZWxlZ2FuY2UgYW5kIGNvbnRlbXBvcmFyeSBmbGFpci4gQW1iZXIgSGF2ZW4gb2ZmZXJzIGEgc2FuY3R1YXJ5IG9mIGNvbWZvcnQgYW5kIGx1eHVyeSwgd2hlcmUgZXZlcnkgcGllY2UgaXMgZGVzaWduZWQgdG8gZW5oYW5jZSB5b3VyIGhvbWUgYW5kIHlvdXIgd2VsbC1iZWluZy5cblxuS2V5IEZlYXR1cmVzOlxuXG5XYXJtIGFtYmVyIHRvbmVzIGFuZCBlbGVnYW50IGRlc2lnbiBjcmVhdGUgYSBjb3p5LCBpbnZpdGluZyBhbWJpYW5jZVxuSGlnaC1xdWFsaXR5IGNyYWZ0c21hbnNoaXAgYW5kIG1hdGVyaWFscyBlbnN1cmUgZHVyYWJpbGl0eSBhbmQgbG9uZy1sYXN0aW5nIGFwcGVhbFxuVmVyc2F0aWxlIHN0eWxlIGNvbXBsZW1lbnRzIGEgdmFyaWV0eSBvZiBpbnRlcmlvciBkZXNpZ25zLCBmcm9tIG1vZGVybiB0byB0cmFkaXRpb25hbFxuUGVyZmVjdCBmb3IgY3JlYXRpbmcgYSBzZXJlbmUgYW5kIGx1eHVyaW91cyBzcGFjZSBpbiBhbnkgcm9vbVxuSWRlYWwgZm9yIHRob3NlIHNlZWtpbmcgYSBjb21iaW5hdGlvbiBvZiBiZWF1dHksIGNvbWZvcnQsIGFuZCBzb3BoaXN0aWNhdGlvblxuQnJpbmcgdGhlIGdvbGRlbiBnbG93IG9mIEFtYmVyIEhhdmVuIGludG8geW91ciBob21l4oCUd2hlcmUgd2FybXRoLCBsdXh1cnksIGFuZCB0aW1lbGVzcyBkZXNpZ24gY29tZSB0b2dldGhlciB0byBjcmVhdGUgYSBwZWFjZWZ1bCBhbmQgZWxlZ2FudCByZXRyZWF0LiIsInByaWNlIjoxNTAsImRpc2NvdW50UGVyY2VudGFnZSI6bnVsbCwiaW1hZ2VfVXJsIjpudWxsLCJfaWQiOiJZakZJbzFnMUxRWkhKWmcyN1BhcDZMIiwibmFtZSI6bnVsbH0seyJfaWQiOiJZakZJbzFnMUxRWkhKWmcyN1BhcElSIiwibmFtZSI6bnVsbCwiZGVzY3JpcHRpb24iOiJXZWxjb21lIHRvIEJyaWdodFNwYWNl4oCUYSBjb2xsZWN0aW9uIGRlc2lnbmVkIHRvIGluZnVzZSB5b3VyIGhvbWUgd2l0aCBsaWdodCwgZW5lcmd5LCBhbmQgdmlicmFuY3kuIEluc3BpcmVkIGJ5IHRoZSBwb3dlciBvZiBuYXR1cmFsIGxpZ2h0IGFuZCBvcGVuIHNwYWNlcywgQnJpZ2h0U3BhY2UgYnJpbmdzIGEgZnJlc2gsIGFpcnkgZmVlbCB0byBhbnkgcm9vbS4gV2hldGhlciB5b3UncmUgbG9va2luZyB0byBicmlnaHRlbiB5b3VyIGxpdmluZyBhcmVhLCBjcmVhdGUgYW4gaW5zcGlyaW5nIHdvcmtzcGFjZSwgb3IgdHJhbnNmb3JtIHlvdXIgYmVkcm9vbSBpbnRvIGEgcGVhY2VmdWwgcmV0cmVhdCwgQnJpZ2h0U3BhY2Ugb2ZmZXJzIHRoZSBwZXJmZWN0IGJsZW5kIG9mIHN0eWxlIGFuZCBmdW5jdGlvbiB0byBtYWtlIHlvdXIgZW52aXJvbm1lbnQgZmVlbCBvcGVuIGFuZCBpbnZpdGluZy5cblxuRmVhdHVyaW5nIGNsZWFuIGxpbmVzLCBsaWdodCBodWVzLCBhbmQgZnVuY3Rpb25hbCBkZXNpZ25zLCBCcmlnaHRTcGFjZSBpcyBhbGwgYWJvdXQgY3JlYXRpbmcgYSBwb3NpdGl2ZSwgdXBsaWZ0aW5nIGF0bW9zcGhlcmUuIEVhY2ggcGllY2UgaXMgY2FyZWZ1bGx5IGNyYWZ0ZWQgdG8gZW5oYW5jZSB0aGUgZmxvdyBvZiBsaWdodCwgd2l0aCBtYXRlcmlhbHMgdGhhdCByZWZsZWN0IGJyaWdodG5lc3MgYW5kIGVuY291cmFnZSBhIHNlbnNlIG9mIG9wZW5uZXNzLiBUaGUgY29sbGVjdGlvbiBicmluZ3MgYSBtb2Rlcm4sIG1pbmltYWxpc3QgYXBwcm9hY2ggdGhhdCBhbGxvd3MgeW91ciBzcGFjZSB0byBmZWVsIG1vcmUgZXhwYW5zaXZlLCB3aGV0aGVyIHRocm91Z2ggbGFyZ2Ugd2luZG93cywgcmVmbGVjdGl2ZSBzdXJmYWNlcywgb3IgbGlnaHQgZnVybml0dXJlIGNob2ljZXMuXG5cbklkZWFsIGZvciB0aG9zZSB3aG8gYXBwcmVjaWF0ZSBhIG1vZGVybiwgZnJlc2ggYWVzdGhldGljIHdpdGggYSBmb2N1cyBvbiBuYXR1cmFsIGxpZ2h0LCBCcmlnaHRTcGFjZSBpcyBwZXJmZWN0IGZvciB0aG9zZSBsb29raW5nIHRvIGNyZWF0ZSBhIGxpdmVseSB5ZXQgc2VyZW5lIGVudmlyb25tZW50LiBXaGV0aGVyIHlvdeKAmXJlIGRlY29yYXRpbmcgYSBob21lIG9mZmljZSwgbGl2aW5nIHJvb20sIG9yIHN1bi1kcmVuY2hlZCBkaW5pbmcgYXJlYSwgdGhpcyBjb2xsZWN0aW9uIGlzIGRlc2lnbmVkIHRvIGJyaW5nIGNsYXJpdHkgYW5kIHZpYnJhbmN5IHRvIGFueSBzcGFjZS5cblxuS2V5IEZlYXR1cmVzOlxuXG5EZXNpZ25lZCB0byBlbmhhbmNlIG5hdHVyYWwgbGlnaHQgYW5kIGNyZWF0ZSBhbiBvcGVuLCBhaXJ5IGZlZWxcbkNsZWFuLCBtaW5pbWFsaXN0IGxpbmVzIHRoYXQgY29tcGxlbWVudCBtb2Rlcm4gc3BhY2VzXG5MaWdodCwgbmV1dHJhbCB0b25lcyBhbmQgcmVmbGVjdGl2ZSBzdXJmYWNlcyBmb3IgYSBicmlnaHQgYXRtb3NwaGVyZVxuQ3JhZnRlZCB3aXRoIHF1YWxpdHkgbWF0ZXJpYWxzIGZvciBkdXJhYmlsaXR5IGFuZCBsYXN0aW5nIGFwcGVhbFxuUGVyZmVjdCBmb3IgY3JlYXRpbmcgYSB2aWJyYW50LCBwb3NpdGl2ZSBzcGFjZSBpbiB5b3VyIGhvbWUgb3Igb2ZmaWNlXG5UcmFuc2Zvcm0geW91ciBob21lIGludG8gYSBicmlnaHQsIGludml0aW5nIGhhdmVuIHdpdGggQnJpZ2h0U3BhY2XigJR3aGVyZSBsaWdodCwgc3R5bGUsIGFuZCBmdW5jdGlvbmFsaXR5IGNvbWUgdG9nZXRoZXIgdG8gY3JlYXRlIHRoZSBwZXJmZWN0IGVudmlyb25tZW50LiIsInByaWNlIjoxODAsImRpc2NvdW50UGVyY2VudGFnZSI6bnVsbCwiaW1hZ2VfVXJsIjpudWxsfSx7InByaWNlIjoxNTAsImRpc2NvdW50UGVyY2VudGFnZSI6bnVsbCwiaW1hZ2VfVXJsIjpudWxsLCJfaWQiOiJZakZJbzFnMUxRWkhKWmcyN1BhcE1UIiwibmFtZSI6bnVsbCwiZGVzY3JpcHRpb24iOiJFbGV2YXRlIHlvdXIgaG9tZSBkZWNvciB3aXRoIHRoZSB0aW1lbGVzcyBiZWF1dHkgb2YgdGhlIFZhc2UgU2V0LiBEZXNpZ25lZCB0byBjb21wbGVtZW50IGFueSBpbnRlcmlvciBzdHlsZSwgdGhpcyBjYXJlZnVsbHkgY3VyYXRlZCBzZXQgb2YgdmFzZXMgYnJpbmdzIGEgdG91Y2ggb2YgZWxlZ2FuY2UgYW5kIHNvcGhpc3RpY2F0aW9uIHRvIHlvdXIgbGl2aW5nIHNwYWNlLiBXaGV0aGVyIHlvdeKAmXJlIGxvb2tpbmcgdG8gZGlzcGxheSBmcmVzaCBmbG93ZXJzLCBkcmllZCBhcnJhbmdlbWVudHMsIG9yIHNpbXBseSBhZGQgYSBkZWNvcmF0aXZlIGFjY2VudCwgdGhlIFZhc2UgU2V0IG9mZmVycyB2ZXJzYXRpbGUgb3B0aW9ucyB0byBlbmhhbmNlIGFueSByb29tLlxuXG5DcmFmdGVkIGZyb20gcHJlbWl1bSBtYXRlcmlhbHMsIGVhY2ggdmFzZSBpbiB0aGUgc2V0IGZlYXR1cmVzIGEgdW5pcXVlIGRlc2lnbiwgcmFuZ2luZyBmcm9tIHNsZWVrIGFuZCBtb2Rlcm4gdG8gY2xhc3NpYyBhbmQgdHJhZGl0aW9uYWwuIFRoZSB0aG91Z2h0ZnVsIG1peCBvZiBzaGFwZXMsIHNpemVzLCBhbmQgZmluaXNoZXMgbWFrZXMgdGhpcyBzZXQgaWRlYWwgZm9yIGNyZWF0aW5nIGV5ZS1jYXRjaGluZyBkaXNwbGF5cyBpbiB5b3VyIGhvbWUgb3Igb2ZmaWNlLiBQbGFjZSB0aGVtIHRvZ2V0aGVyIGZvciBhIGNvb3JkaW5hdGVkIGxvb2sgb3Igc3ByZWFkIHRoZW0gdGhyb3VnaG91dCBkaWZmZXJlbnQgc3BhY2VzIGZvciBhIGNvaGVzaXZlLCBzdHlsaXNoIHRvdWNoLlxuXG5UaGUgVmFzZSBTZXQgaXMgbm90IGp1c3QgYWJvdXQgYWVzdGhldGljIGFwcGVhbOKAlGl04oCZcyBhbHNvIGFib3V0IHF1YWxpdHkgYW5kIGR1cmFiaWxpdHkuIEVhY2ggcGllY2UgaXMgZGVzaWduZWQgd2l0aCBwcmVjaXNpb24sIGVuc3VyaW5nIHRoYXQgdGhlIHZhc2VzIG1haW50YWluIHRoZWlyIGJlYXV0eSBmb3IgeWVhcnMgdG8gY29tZS4gV2hldGhlciB5b3UncmUgZ2lmdGluZyB0aGlzIHNldCBmb3IgYSBzcGVjaWFsIG9jY2FzaW9uIG9yIGFkZGluZyBpdCB0byB5b3VyIG93biBob21lLCBpdCBpcyBzdXJlIHRvIGJlIGEgY2hlcmlzaGVkIHBpZWNlIHRoYXQgYWRkcyBjaGFybSBhbmQgY2hhcmFjdGVyIHRvIGFueSBzZXR0aW5nLlxuXG5LZXkgRmVhdHVyZXM6XG5cbkluY2x1ZGVzIG11bHRpcGxlIHZhc2VzIHdpdGggdmFyeWluZyBzaGFwZXMgYW5kIHNpemVzXG5QZXJmZWN0IGZvciBkaXNwbGF5aW5nIGZsb3dlcnMsIHBsYW50cywgb3IgYXMgc3RhbmRhbG9uZSBkZWNvclxuSGlnaC1xdWFsaXR5IG1hdGVyaWFscyBmb3IgbG9uZy1sYXN0aW5nIGJlYXV0eSBhbmQgZHVyYWJpbGl0eVxuVmVyc2F0aWxlIGRlc2lnbiBjb21wbGVtZW50cyBhIHdpZGUgcmFuZ2Ugb2YgaW50ZXJpb3Igc3R5bGVzXG5JZGVhbCBmb3IgYm90aCBnaWZ0aW5nIGFuZCBwZXJzb25hbCB1c2VcbkVuaGFuY2UgeW91ciBzcGFjZSB3aXRoIHRoZSBWYXNlIFNldOKAlGEgYmxlbmQgb2YgZWxlZ2FuY2UsIHF1YWxpdHksIGFuZCB0aW1lbGVzcyBkZXNpZ24gdGhhdCB0cmFuc2Zvcm1zIGFueSByb29tIGludG8gYSBoYXZlbiBvZiBiZWF1dHkuIn0seyJpbWFnZV9VcmwiOm51bGwsIl9pZCI6IllqRklvMWcxTFFaSEpaZzI3UGFwZFAiLCJuYW1lIjpudWxsLCJkZXNjcmlwdGlvbiI6IkludHJvZHVjaW5nIHRoZSBCZWTigJR5b3VyIHNhbmN0dWFyeSBmb3IgcmVzdCBhbmQgcmVsYXhhdGlvbiwgZGVzaWduZWQgd2l0aCBib3RoIGNvbWZvcnQgYW5kIHN0eWxlIGluIG1pbmQuIFRoaXMgdGltZWxlc3MgcGllY2UgaXMgY3JhZnRlZCB0byB0cmFuc2Zvcm0geW91ciBiZWRyb29tIGludG8gYSBwZWFjZWZ1bCByZXRyZWF0LCBvZmZlcmluZyBhIHBlcmZlY3QgYmFsYW5jZSBvZiBzdXBwb3J0LCBlbGVnYW5jZSwgYW5kIGR1cmFiaWxpdHkuIFdoZXRoZXIgeW91J3JlIG91dGZpdHRpbmcgYSBtYXN0ZXIgYmVkcm9vbSBvciBhIGd1ZXN0IHJvb20sIHRoZSBCZWQgZW5zdXJlcyB0aGF0IGV2ZXJ5IG5pZ2h0IGlzIGZpbGxlZCB3aXRoIHJlc3RmdWwgc2xlZXAgYW5kIGV2ZXJ5IG1vcm5pbmcgc3RhcnRzIHdpdGggZWFzZS5cblxuQ29uc3RydWN0ZWQgZnJvbSBoaWdoLXF1YWxpdHkgbWF0ZXJpYWxzLCB0aGUgQmVkIHByb3ZpZGVzIGJvdGggc3R1cmR5IHN1cHBvcnQgYW5kIGx1eHVyaW91cyBjb21mb3J0LiBUaGUgZnJhbWUgZmVhdHVyZXMgc2xlZWsgbGluZXMgYW5kIGEgbWluaW1hbGlzdCBkZXNpZ24sIG1ha2luZyBpdCBhbiBpZGVhbCBjaG9pY2UgZm9yIGEgdmFyaWV0eSBvZiBpbnRlcmlvciBzdHlsZXMsIGZyb20gbW9kZXJuIHRvIHRyYWRpdGlvbmFsLiBUaGUgc29mdCB5ZXQgc3VwcG9ydGl2ZSBzdXJmYWNlIGVuc3VyZXMgdGhhdCB5b3UgY2FuIHVud2luZCBpbiB1bHRpbWF0ZSBjb21mb3J0LCB3aGlsZSB0aGUgc3R1cmR5IGZvdW5kYXRpb24gcHJvdmlkZXMgbG9uZy1sYXN0aW5nIGR1cmFiaWxpdHkuXG5cbkRlc2lnbmVkIGZvciB0aG9zZSB3aG8gYXBwcmVjaWF0ZSBib3RoIGFlc3RoZXRpY3MgYW5kIHByYWN0aWNhbGl0eSwgdGhlIEJlZCBpcyBhIHZlcnNhdGlsZSBhZGRpdGlvbiB0byBhbnkgYmVkcm9vbS4gSXRzIGNsZWFuIGRlc2lnbiwgcXVhbGl0eSBjcmFmdHNtYW5zaGlwLCBhbmQgZnVuY3Rpb25hbCBmZWF0dXJlcyBjcmVhdGUgYW4gaW52aXRpbmcgc3BhY2Ugd2hlcmUgeW91IGNhbiByZXN0LCByZWNoYXJnZSwgYW5kIGVuam95IHlvdXIgbW9zdCByZXN0ZnVsIG5pZ2h0cy5cblxuS2V5IEZlYXR1cmVzOlxuXG5IaWdoLXF1YWxpdHkgY29uc3RydWN0aW9uIGZvciBkdXJhYmlsaXR5IGFuZCBsb25nLWxhc3Rpbmcgc3VwcG9ydFxuU2xlZWssIG1pbmltYWxpc3QgZGVzaWduIHRoYXQgZml0cyBpbnRvIGEgd2lkZSByYW5nZSBvZiBiZWRyb29tIHN0eWxlc1xuQ29tZm9ydGFibGUgYW5kIHN1cHBvcnRpdmUgc3VyZmFjZSBmb3IgYSByZXN0ZnVsIG5pZ2h0J3Mgc2xlZXBcblBlcmZlY3QgZm9yIG1hc3RlciBiZWRyb29tcywgZ3Vlc3Qgcm9vbXMsIG9yIHNtYWxsZXIgc3BhY2VzXG5CdWlsdCB3aXRoIGF0dGVudGlvbiB0byBkZXRhaWwgZm9yIGJvdGggYmVhdXR5IGFuZCBwcmFjdGljYWxpdHlcblRyYW5zZm9ybSB5b3VyIGJlZHJvb20gaW50byBhIHJlc3RmdWwgaGF2ZW4gd2l0aCB0aGUgQmVk4oCUd2hlcmUgc3R5bGUsIGNvbWZvcnQsIGFuZCBmdW5jdGlvbmFsaXR5IG1lZXQgdG8gY3JlYXRlIHRoZSB1bHRpbWF0ZSBzcGFjZSBmb3IgcmVsYXhhdGlvbiBhbmQgcmVqdXZlbmF0aW9uLiIsInByaWNlIjoyNTAsImRpc2NvdW50UGVyY2VudGFnZSI6bnVsbH0seyJkaXNjb3VudFBlcmNlbnRhZ2UiOm51bGwsImltYWdlX1VybCI6bnVsbCwiX2lkIjoiWWpGSW8xZzFMUVpISlpnMjdQYXBuNSIsIm5hbWUiOm51bGwsImRlc2NyaXB0aW9uIjoiSW50cm9kdWNpbmcgdGhlIFdvb2QgQ2hhaXLigJRhIGJlYXV0aWZ1bGx5IGNyYWZ0ZWQgcGllY2UgdGhhdCBibGVuZHMgdGltZWxlc3Mgc2ltcGxpY2l0eSB3aXRoIG5hdHVyYWwgZWxlZ2FuY2UuIERlc2lnbmVkIHRvIGJyaW5nIHdhcm10aCBhbmQgY2hhcmFjdGVyIHRvIGFueSByb29tLCB0aGUgV29vZCBDaGFpciBpcyBwZXJmZWN0IGZvciB0aG9zZSB3aG8gYXBwcmVjaWF0ZSB0aGUgYmVhdXR5IG9mIHdvb2QgYW5kIHRoZSBkdXJhYmlsaXR5IG9mIGEgd2VsbC1tYWRlLCBmdW5jdGlvbmFsIGNoYWlyLiBXaGV0aGVyIHlvdSdyZSBhZGRpbmcgYSBzZWF0aW5nIG9wdGlvbiB0byB5b3VyIGRpbmluZyByb29tLCBvZmZpY2UsIG9yIGxpdmluZyBhcmVhLCB0aGlzIGNoYWlyIG9mZmVycyBib3RoIHN0eWxlIGFuZCBjb21mb3J0LlxuXG5DcmFmdGVkIGZyb20gaGlnaC1xdWFsaXR5LCBzdXN0YWluYWJseSBzb3VyY2VkIHdvb2QsIHRoZSBXb29kIENoYWlyIHNob3djYXNlcyB0aGUgbmF0dXJhbCBncmFpbiBhbmQgdGV4dHVyZSBvZiB0aGUgd29vZCwgbWFraW5nIGVhY2ggcGllY2UgdW5pcXVlLiBJdHMgY2xlYW4gbGluZXMgYW5kIG1pbmltYWxpc3QgZGVzaWduIGhpZ2hsaWdodCB0aGUgaW5oZXJlbnQgYmVhdXR5IG9mIHRoZSBtYXRlcmlhbCwgYWxsb3dpbmcgaXQgdG8gc2VhbWxlc3NseSBjb21wbGVtZW50IGEgd2lkZSByYW5nZSBvZiBkZWNvciBzdHlsZXMsIGZyb20gcnVzdGljIGFuZCB0cmFkaXRpb25hbCB0byBtb2Rlcm4gYW5kIGNvbnRlbXBvcmFyeS5cblxuTm90IGp1c3QgYSBwaWVjZSBvZiBmdXJuaXR1cmUsIHRoZSBXb29kIENoYWlyIGlzIGJ1aWx0IGZvciBjb21mb3J0IGFuZCBwcmFjdGljYWxpdHkuIEl0cyBzdHVyZHkgY29uc3RydWN0aW9uIHByb3ZpZGVzIHJlbGlhYmxlIHN1cHBvcnQsIHdoaWxlIHRoZSBzaW1wbGUgeWV0IHN0eWxpc2ggZGVzaWduIGVuc3VyZXMgaXQgcmVtYWlucyBhIHN0YXBsZSBpbiB5b3VyIGhvbWUgZm9yIHllYXJzIHRvIGNvbWUuXG5cbktleSBGZWF0dXJlczpcblxuTWFkZSBmcm9tIGhpZ2gtcXVhbGl0eSwgc3VzdGFpbmFibHkgc291cmNlZCB3b29kIGZvciBkdXJhYmlsaXR5IGFuZCBzdHlsZVxuQ2xlYW4sIG1pbmltYWxpc3QgZGVzaWduIHRoYXQgY29tcGxlbWVudHMgYSB2YXJpZXR5IG9mIGRlY29yIHN0eWxlc1xuQ29tZm9ydGFibGUgc2VhdGluZyBhbmQgc3R1cmR5IGNvbnN0cnVjdGlvbiBmb3IgZXZlcnlkYXkgdXNlXG5OYXR1cmFsIHdvb2QgZ3JhaW4gYW5kIHRleHR1cmUgbWFrZSBlYWNoIGNoYWlyIHVuaXF1ZVxuVmVyc2F0aWxlIGRlc2lnbiBwZXJmZWN0IGZvciBkaW5pbmcgcm9vbXMsIG9mZmljZXMsIG9yIGNhc3VhbCBzZWF0aW5nIGFyZWFzXG5BZGQgYSB0b3VjaCBvZiBuYXR1cmFsIGVsZWdhbmNlIHRvIHlvdXIgc3BhY2Ugd2l0aCB0aGUgV29vZCBDaGFpcuKAlHdoZXJlIHRpbWVsZXNzIGRlc2lnbiBtZWV0cyBmdW5jdGlvbmFsaXR5IGZvciBhIGNvbWZvcnRhYmxlIGFuZCBzdHlsaXNoIHNlYXRpbmcgZXhwZXJpZW5jZS4iLCJwcmljZSI6MTAwfSx7ImRlc2NyaXB0aW9uIjoiSW50cm9kdWNpbmcgUmV0cm9WaWJl4oCUYSBwZXJmZWN0IGJsZW5kIG9mIHZpbnRhZ2UgY2hhcm0gYW5kIG1vZGVybiBzdHlsZSwgZGVzaWduZWQgZm9yIHRob3NlIHdobyBhcHByZWNpYXRlIHRpbWVsZXNzIGFlc3RoZXRpY3Mgd2l0aCBhIGNvbnRlbXBvcmFyeSB0d2lzdC4gSW5zcGlyZWQgYnkgdGhlIGJvbGQgZGVzaWducyBhbmQgdmlicmFudCBjb2xvcnMgb2YgdGhlIHBhc3QsIFJldHJvVmliZSBicmluZ3MgYSBub3N0YWxnaWMgeWV0IGZyZXNoIHZpYmUgdG8gYW55IHNwYWNlLCBpbmZ1c2luZyB5b3VyIGhvbWUgd2l0aCBjaGFyYWN0ZXIgYW5kIGZsYWlyLlxuXG5DcmFmdGVkIHdpdGggbWV0aWN1bG91cyBhdHRlbnRpb24gdG8gZGV0YWlsLCBSZXRyb1ZpYmUgY29tYmluZXMgY2xhc3NpYyBtYXRlcmlhbHMgYW5kIGRpc3RpbmN0aXZlIGRlc2lnbiBlbGVtZW50cyB0byBjcmVhdGUgYSBzdGFuZG91dCBwaWVjZSB0aGF0IGVuaGFuY2VzIHlvdXIgbGl2aW5nIHNwYWNlLiBGcm9tIGl0cyBzbGVlayBsaW5lcyB0byBpdHMgdW5pcXVlIGNvbG9yIHBhbGV0dGUsIGV2ZXJ5IGFzcGVjdCBvZiBSZXRyb1ZpYmUgaXMgY2FyZWZ1bGx5IGNyYWZ0ZWQgdG8gZXZva2UgdGhlIHNwaXJpdCBvZiByZXRybyBkZXNpZ24gd2hpbGUgc2VhbWxlc3NseSBmaXR0aW5nIGludG8gdG9kYXnigJlzIG1vZGVybiBpbnRlcmlvcnMuXG5cbldoZXRoZXIgeW914oCZcmUgZGVjb3JhdGluZyBhIGxpdmluZyByb29tLCBiZWRyb29tLCBvciB3b3Jrc3BhY2UsIFJldHJvVmliZSBzZXJ2ZXMgYXMgYSBjb252ZXJzYXRpb24gc3RhcnRlciBhbmQgYSBzdGF0ZW1lbnQgcGllY2UuIEl0cyB2ZXJzYXRpbGl0eSBhbGxvd3MgaXQgdG8gY29tcGxlbWVudCBhIHZhcmlldHkgb2YgZGVjb3Igc3R5bGVzLCBmcm9tIG1pZC1jZW50dXJ5IG1vZGVybiB0byBlY2xlY3RpYyBhbmQgY29udGVtcG9yYXJ5LiBUaGUgcGVyZmVjdCB3YXkgdG8gYWRkIGEgdG91Y2ggb2Ygbm9zdGFsZ2lhIGFuZCBzdHlsZSwgUmV0cm9WaWJlIGlzIGlkZWFsIGZvciB0aG9zZSB3aG8gbG92ZSB2aW50YWdlIGFlc3RoZXRpY3Mgd2l0aCBhIG1vZGVybiB0d2lzdC5cblxuS2V5IEZlYXR1cmVzOlxuXG5SZXRyby1pbnNwaXJlZCBkZXNpZ24gd2l0aCBtb2Rlcm4gdG91Y2hlc1xuQm9sZCBjb2xvciBwYWxldHRlIGFuZCBjbGFzc2ljIG1hdGVyaWFscyB0aGF0IGV2b2tlIG5vc3RhbGdpYVxuSGlnaC1xdWFsaXR5IGNyYWZ0c21hbnNoaXAgZm9yIGR1cmFiaWxpdHkgYW5kIGxhc3RpbmcgYXBwZWFsXG5WZXJzYXRpbGUgc3R5bGUgdGhhdCBjb21wbGVtZW50cyB2YXJpb3VzIGhvbWUgZGVjb3IgdGhlbWVzXG5JZGVhbCBmb3IgY3JlYXRpbmcgYSBmdW4sIHN0eWxpc2gsIGFuZCB1bmlxdWUgYXRtb3NwaGVyZVxuQnJpbmcgYmFjayB0aGUgY2hhcm0gb2YgdGhlIHBhc3Qgd2l0aCBSZXRyb1ZpYmXigJR3aGVyZSBjbGFzc2ljIGRlc2lnbiBtZWV0cyBjb250ZW1wb3JhcnkgZmxhaXIuIFBlcmZlY3QgZm9yIHRob3NlIHdobyBsb3ZlIGEgZGFzaCBvZiBub3N0YWxnaWEgaW4gdGhlaXIgbW9kZXJuIGhvbWUuXG4iLCJwcmljZSI6MzQwLCJkaXNjb3VudFBlcmNlbnRhZ2UiOm51bGwsImltYWdlX1VybCI6bnVsbCwiX2lkIjoiWWpGSW8xZzFMUVpISlpnMjdQYXBzaiIsIm5hbWUiOm51bGx9LHsiZGVzY3JpcHRpb24iOiJJbnRyb2R1Y2UgdHJhbnF1aWxpdHkgYW5kIGJhbGFuY2UgaW50byB5b3VyIGhvbWUgd2l0aCBaZW5UYWJsZeKAlGEgYmVhdXRpZnVsbHkgY3JhZnRlZCBwaWVjZSBkZXNpZ25lZCB0byBpbnNwaXJlIG1pbmRmdWxuZXNzLCBzZXJlbml0eSwgYW5kIGVmZm9ydGxlc3MgZWxlZ2FuY2UuIEluc3BpcmVkIGJ5IHRoZSBwZWFjZWZ1bCBhZXN0aGV0aWNzIG9mIFplbiBkZXNpZ24sIHRoaXMgdGFibGUgc2VydmVzIGFzIGEgZnVuY3Rpb25hbCBjZW50ZXJwaWVjZSB3aGlsZSBmb3N0ZXJpbmcgYSBjYWxtLCBtZWRpdGF0aXZlIGF0bW9zcGhlcmUgaW4gYW55IHJvb20uIFBlcmZlY3QgZm9yIG1vZGVybiBob21lcyBvciBzcGFjZXMgZGVkaWNhdGVkIHRvIHJlbGF4YXRpb24sIFplblRhYmxlIGJyaW5ncyBhIHNlbnNlIG9mIGhhcm1vbnkgYW5kIHNpbXBsaWNpdHkgdGhhdCBlbmhhbmNlcyB5b3VyIGRhaWx5IGxpZmUuXG5cbkNyYWZ0ZWQgd2l0aCBjbGVhbiBsaW5lcywgbmF0dXJhbCBtYXRlcmlhbHMsIGFuZCBzdWJ0bGUgZGV0YWlsaW5nLCBaZW5UYWJsZSBjYXB0dXJlcyB0aGUgZXNzZW5jZSBvZiBtaW5pbWFsaXN0IGJlYXV0eS4gSXRzIHNpbXBsZSB5ZXQgc3RyaWtpbmcgZGVzaWduIGFsbG93cyBpdCB0byBzZWFtbGVzc2x5IGludGVncmF0ZSBpbnRvIGEgdmFyaWV0eSBvZiBpbnRlcmlvcnMsIHdoZXRoZXIgcGxhY2VkIGluIHRoZSBsaXZpbmcgcm9vbSwgb2ZmaWNlLCBvciBtZWRpdGF0aW9uIHNwYWNlLiBUaGUgWmVuVGFibGUgaXMgYnVpbHQgd2l0aCBib3RoIGZvcm0gYW5kIGZ1bmN0aW9uIGluIG1pbmTigJRvZmZlcmluZyBhIHN0dXJkeSwgZHVyYWJsZSBzdXJmYWNlIHdoaWxlIG1haW50YWluaW5nIGFuIGVsZWdhbnQgYW5kIHNvb3RoaW5nIGFwcGVhcmFuY2UuXG5cbldoZXRoZXIgdXNlZCBhcyBhIGNvZmZlZSB0YWJsZSwgYSBmb2NhbCBwb2ludCBpbiB5b3VyIG1lZGl0YXRpb24gcm9vbSwgb3IgYSBzbGVlayBhY2NlbnQgaW4geW91ciBsaXZpbmcgc3BhY2UsIFplblRhYmxlIGVuY291cmFnZXMgYSBwZWFjZWZ1bCwgYmFsYW5jZWQgZW52aXJvbm1lbnQuIEl0cyB1bmRlcnN0YXRlZCBkZXNpZ24gY3JlYXRlcyBhbiBpbnZpdGluZyBhdG1vc3BoZXJlIHdoZXJlIHlvdSBjYW4gcmVmbGVjdCwgdW53aW5kLCBhbmQgZW5qb3kgbGlmZSdzIHNpbXBsZXIgbW9tZW50cy5cblxuS2V5IEZlYXR1cmVzOlxuXG5NaW5pbWFsaXN0LCBaZW4taW5zcGlyZWQgZGVzaWduIHRoYXQgZm9zdGVycyBwZWFjZSBhbmQgdHJhbnF1aWxpdHlcbkNyYWZ0ZWQgZnJvbSBoaWdoLXF1YWxpdHkgbmF0dXJhbCBtYXRlcmlhbHMgZm9yIGR1cmFiaWxpdHkgYW5kIGVsZWdhbmNlXG5TaW1wbGUsIGNsZWFuIGxpbmVzIHRoYXQgY29tcGxlbWVudCBtb2Rlcm4gYW5kIHRyYWRpdGlvbmFsIGludGVyaW9yc1xuVmVyc2F0aWxlIHVzZSBpbiBsaXZpbmcgcm9vbXMsIG9mZmljZXMsIG9yIG1lZGl0YXRpb24gc3BhY2VzXG5FbmNvdXJhZ2VzIGJhbGFuY2UgYW5kIHNlcmVuaXR5LCBwZXJmZWN0IGZvciBtaW5kZnVsbmVzcyBwcmFjdGljZXNcbkNyZWF0ZSBhIGNhbG1pbmcgYW5kIGhhcm1vbmlvdXMgc3BhY2Ugd2l0aCBaZW5UYWJsZeKAlHdoZXJlIGRlc2lnbiBtZWV0cyB0cmFucXVpbGl0eSwgbWFraW5nIGV2ZXJ5IG1vbWVudCBvZiB5b3VyIGRheSBtb3JlIHBlYWNlZnVsIGFuZCBjZW50ZXJlZC4iLCJwcmljZSI6MjUwLCJkaXNjb3VudFBlcmNlbnRhZ2UiOm51bGwsImltYWdlX1VybCI6bnVsbCwiX2lkIjoiWWpGSW8xZzFMUVpISlpnMjdQYXE4ciIsIm5hbWUiOm51bGx9LHsiaW1hZ2VfVXJsIjpudWxsLCJfaWQiOiJZakZJbzFnMUxRWkhKWmcyN1BhcUVWIiwibmFtZSI6bnVsbCwiZGVzY3JpcHRpb24iOiJFc2NhcGUgdG8gcGFyYWRpc2Ugd2l0aCBUcm9waWNhbFZpYmXigJRhIGNvbGxlY3Rpb24gdGhhdCBicmluZ3MgdGhlIHZpYnJhbnQgZW5lcmd5IG9mIHRoZSB0cm9waWNzIHJpZ2h0IGludG8geW91ciBob21lLiBJbnNwaXJlZCBieSBsdXNoIGxhbmRzY2FwZXMsIHdhcm0gc3Vuc2hpbmUsIGFuZCB2aWJyYW50IGNvbG9ycywgVHJvcGljYWxWaWJlIG9mZmVycyBhIHJlZnJlc2hpbmcsIHRyb3BpY2FsLWluc3BpcmVkIGFlc3RoZXRpYyB0aGF0IGNyZWF0ZXMgYSByZWxheGVkIGFuZCBpbnZpdGluZyBhdG1vc3BoZXJlIGluIGFueSBzcGFjZS5cblxuRGVzaWduZWQgZm9yIHRob3NlIHdobyBkcmVhbSBvZiBhIGxhaWQtYmFjaywgdmFjYXRpb24tbGlrZSBhbWJpYW5jZSwgVHJvcGljYWxWaWJlIGNhcHR1cmVzIHRoZSBlc3NlbmNlIG9mIGlzbGFuZCBsaXZpbmcgd2l0aCBpdHMgbGl2ZWx5IHByaW50cywgbmF0dXJhbCB0ZXh0dXJlcywgYW5kIGJvbGQgY29sb3JzLiBXaGV0aGVyIHlvdSdyZSBsb29raW5nIHRvIGFkZCBhIHRvdWNoIG9mIHRoZSB0cm9waWNzIHRvIHlvdXIgbGl2aW5nIHJvb20sIGJlZHJvb20sIG9yIG91dGRvb3IgcGF0aW8sIFRyb3BpY2FsVmliZSBzZWFtbGVzc2x5IGluZnVzZXMgYW55IGFyZWEgd2l0aCBhIHNlbnNlIG9mIGFkdmVudHVyZSBhbmQgdHJhbnF1aWxpdHkuXG5cbkNyYWZ0ZWQgZnJvbSBoaWdoLXF1YWxpdHkgbWF0ZXJpYWxzLCBlYWNoIHBpZWNlIGluIHRoZSBUcm9waWNhbFZpYmUgY29sbGVjdGlvbiBpcyBib3RoIGR1cmFibGUgYW5kIHN0eWxpc2guIFRoZSBjb2xsZWN0aW9uIGZlYXR1cmVzIGVsZW1lbnRzIHN1Y2ggYXMgbGVhZnkgbW90aWZzLCByYXR0YW4gZmluaXNoZXMsIGFuZCB0cm9waWNhbCBmbG9yYWxzIHRoYXQgZWZmb3J0bGVzc2x5IGNhcHR1cmUgdGhlIHNwaXJpdCBvZiB0cm9waWNhbCBkZXN0aW5hdGlvbnMuIFdoZXRoZXIgeW914oCZcmUgbG91bmdpbmcgaW4geW91ciBsaXZpbmcgcm9vbSBvciBob3N0aW5nIGFuIG91dGRvb3IgZ2F0aGVyaW5nLCBUcm9waWNhbFZpYmUgY3JlYXRlcyB0aGUgcGVyZmVjdCBiYWNrZHJvcCBmb3IgcmVsYXhhdGlvbiBhbmQgZ29vZCB2aWJlcy5cblxuS2V5IEZlYXR1cmVzOlxuXG5Ucm9waWNhbC1pbnNwaXJlZCBkZXNpZ25zIHRoYXQgZXZva2Ugd2FybXRoIGFuZCByZWxheGF0aW9uXG5MdXNoIGNvbG9ycywgbmF0dXJhbCB0ZXh0dXJlcywgYW5kIGlzbGFuZC1pbnNwaXJlZCBwcmludHNcbkhpZ2gtcXVhbGl0eSBtYXRlcmlhbHMgZm9yIGNvbWZvcnQsIGR1cmFiaWxpdHksIGFuZCBzdHlsZVxuUGVyZmVjdCBmb3IgY3JlYXRpbmcgYSB2YWNhdGlvbi1saWtlIGFtYmlhbmNlIGluIGFueSByb29tIG9yIG91dGRvb3Igc3BhY2VcbklkZWFsIGZvciB0aG9zZSB3aG8gbG92ZSBib2xkLCB2aWJyYW50LCBhbmQgbmF0dXJlLWluZnVzZWQgZGVjb3JcbkJyaW5nIHRoZSBiZWF1dHkgYW5kIGVuZXJneSBvZiB0aGUgdHJvcGljcyBpbnRvIHlvdXIgaG9tZSB3aXRoIFRyb3BpY2FsVmliZeKAlHdoZXJlIGlzbGFuZC1pbnNwaXJlZCBkZXNpZ24gbWVldHMgZXZlcnlkYXkgY29tZm9ydCBhbmQgc3R5bGUuIExldCBldmVyeSBkYXkgZmVlbCBsaWtlIGEgZ2V0YXdheS4iLCJwcmljZSI6NTUwLCJkaXNjb3VudFBlcmNlbnRhZ2UiOm51bGx9LHsibmFtZSI6bnVsbCwiZGVzY3JpcHRpb24iOiJXZWxjb21lIHRvIFNsZWVrTGl2aW5nLCB3aGVyZSBtb2Rlcm4gc29waGlzdGljYXRpb24gbWVldHMgZnVuY3Rpb25hbCBkZXNpZ24gZm9yIHRoZSB1bHRpbWF0ZSBsaXZpbmcgZXhwZXJpZW5jZS4gQ3JhZnRlZCBmb3IgdGhvc2Ugd2hvIHZhbHVlIHN0eWxlLCBjb252ZW5pZW5jZSwgYW5kIGlubm92YXRpb24sIFNsZWVrTGl2aW5nIGlzIGEgY29sbGVjdGlvbiBvZiBwcmVtaXVtIGhvbWUgZXNzZW50aWFscyB0aGF0IHJlZGVmaW5lIHRoZSB3YXkgeW91IGxpdmUuIFdpdGggYW4gZW1waGFzaXMgb24gbWluaW1hbGlzbSBhbmQgZWxlZ2FuY2UsIGV2ZXJ5IHByb2R1Y3QgaW4gdGhlIFNsZWVrTGl2aW5nIGxpbmUgaXMgZW5naW5lZXJlZCB0byBicmluZyBhIHJlZmluZWQgdG91Y2ggdG8geW91ciBob21lIHdpdGhvdXQgY29tcHJvbWlzaW5nIG9uIHBlcmZvcm1hbmNlIG9yIGNvbWZvcnQuXG5cblNsZWVrTGl2aW5nIGlzIGFsbCBhYm91dCB0cmFuc2Zvcm1pbmcgeW91ciBzcGFjZSBpbnRvIGEgc2FuY3R1YXJ5IG9mIGNhbG0gYW5kIHNvcGhpc3RpY2F0aW9uLiBGZWF0dXJpbmcgY2xlYW4gbGluZXMsIGNvbnRlbXBvcmFyeSBhZXN0aGV0aWNzLCBhbmQgY3V0dGluZy1lZGdlIGZ1bmN0aW9uYWxpdHksIHRoaXMgY29sbGVjdGlvbiBvZmZlcnMgdmVyc2F0aWxlIHNvbHV0aW9ucyBmb3IgZXZlcnkgcm9vbSBpbiB5b3VyIGhvbWUuIFdoZXRoZXIgeW91J3JlIHVwZ3JhZGluZyB5b3VyIGxpdmluZyByb29tLCBraXRjaGVuLCBiZWRyb29tLCBvciBvZmZpY2UsIFNsZWVrTGl2aW5nIGVmZm9ydGxlc3NseSBibGVuZHMgaW50byBhbnkgZGVjb3IsIG9mZmVyaW5nIHlvdSB0aGUgZnJlZWRvbSB0byBjcmVhdGUgYSBzcGFjZSB0aGF0IHJlZmxlY3RzIHlvdXIgdW5pcXVlIHN0eWxlLlxuXG5EZXNpZ25lZCB3aXRoIHRoZSBtb2Rlcm4gaG9tZW93bmVyIGluIG1pbmQsIFNsZWVrTGl2aW5nIHByb2R1Y3RzIGFyZSBub3QganVzdCBhYm91dCBsb29rc+KAlHRoZXkgYXJlIGJ1aWx0IGZvciBwcmFjdGljYWxpdHkgYW5kIGVhc2Ugb2YgdXNlLiBFYWNoIGl0ZW0gaXMgdGhvdWdodGZ1bGx5IGNyYWZ0ZWQgdXNpbmcgaGlnaC1xdWFsaXR5IG1hdGVyaWFscyB0aGF0IGVuc3VyZSBkdXJhYmlsaXR5IGFuZCBsb25nLWxhc3RpbmcgcGVyZm9ybWFuY2UuIEZyb20gc21hcnQgZnVybml0dXJlIHNvbHV0aW9ucyB0byBzdHlsaXNoIGFjY2Vzc29yaWVzLCBTbGVla0xpdmluZyBicmluZ3MgdG9nZXRoZXIgdGhlIGJlc3Qgb2YgY29udGVtcG9yYXJ5IGRlc2lnbiB3aXRoIGV2ZXJ5ZGF5IGZ1bmN0aW9uYWxpdHkuXG5cbktleSBGZWF0dXJlczpcblxuTW9kZXJuLCBtaW5pbWFsaXN0IGRlc2lnbiB0aGF0IGVuaGFuY2VzIGFueSBsaXZpbmcgc3BhY2VcblZlcnNhdGlsZSByYW5nZSBvZiBwcm9kdWN0cyBmb3IgZXZlcnkgcm9vbSBpbiB5b3VyIGhvbWVcbkhpZ2gtcXVhbGl0eSBtYXRlcmlhbHMgZm9yIGR1cmFiaWxpdHkgYW5kIGxvbmctbGFzdGluZyBwZXJmb3JtYW5jZVxuSW5ub3ZhdGl2ZSBmZWF0dXJlcyB0aGF0IGNvbWJpbmUgZm9ybSBhbmQgZnVuY3Rpb25cblBlcmZlY3QgZm9yIHRob3NlIHdobyBhcHByZWNpYXRlIHN0eWxlIGFuZCBwcmFjdGljYWxpdHlcblRyYW5zZm9ybSB5b3VyIGhvbWUgaW50byBhIHNsZWVrLCBzdHlsaXNoIGhhdmVuIHdpdGggU2xlZWtMaXZpbmfigJR3aGVyZSBjb250ZW1wb3JhcnkgZGVzaWduIG1lZXRzIGV2ZXJ5ZGF5IGNvbnZlbmllbmNlLiIsInByaWNlIjozMDAsImRpc2NvdW50UGVyY2VudGFnZSI6bnVsbCwiaW1hZ2VfVXJsIjpudWxsLCJfaWQiOiJZakZJbzFnMUxRWkhKWmcyN1BhcUs5In0seyJuYW1lIjpudWxsLCJkZXNjcmlwdGlvbiI6IkVsZXZhdGUgeW91ciBzcGFjZSB3aXRoIE5vcmRpYyBFbGVnYW5jZeKAlGEgY29sbGVjdGlvbiB0aGF0IGJyaW5ncyB0aGUgbWluaW1hbGlzdCBiZWF1dHkgYW5kIHVuZGVyc3RhdGVkIHNvcGhpc3RpY2F0aW9uIG9mIFNjYW5kaW5hdmlhbiBkZXNpZ24gaW50byB5b3VyIGhvbWUuIEluc3BpcmVkIGJ5IHRoZSBzZXJlbmUgbGFuZHNjYXBlcyBhbmQgZnVuY3Rpb25hbCBhZXN0aGV0aWNzIG9mIE5vcmRpYyByZWdpb25zLCB0aGlzIGNvbGxlY3Rpb24gb2ZmZXJzIHRpbWVsZXNzIHBpZWNlcyB0aGF0IGJsZW5kIGNsZWFuIGxpbmVzLCBuYXR1cmFsIG1hdGVyaWFscywgYW5kIGEgcmVmaW5lZCBzaW1wbGljaXR5IHRvIGNyZWF0ZSBhIHBlYWNlZnVsIGFuZCBpbnZpdGluZyBhdG1vc3BoZXJlLlxuXG5DcmFmdGVkIHdpdGggcHJlY2lzaW9uIGFuZCBhdHRlbnRpb24gdG8gZGV0YWlsLCBOb3JkaWMgRWxlZ2FuY2UgY2VsZWJyYXRlcyB0aGUgYmVhdXR5IG9mIGxpZ2h0LCBhaXJ5IHNwYWNlcywgYW5kIHRoZSBoYXJtb255IGJldHdlZW4gZm9ybSBhbmQgZnVuY3Rpb24uIEVhY2ggcGllY2UgaXMgZGVzaWduZWQgdG8gYmUgYm90aCBwcmFjdGljYWwgYW5kIHZpc3VhbGx5IGFwcGVhbGluZywgY29tYmluaW5nIGZ1bmN0aW9uYWxpdHkgd2l0aCByZWZpbmVkLCBtaW5pbWFsaXN0IGVsZWdhbmNlLiBXaGV0aGVyIHlvdSBhcmUgb3V0Zml0dGluZyB5b3VyIGxpdmluZyByb29tLCBiZWRyb29tLCBvciBob21lIG9mZmljZSwgdGhlIE5vcmRpYyBFbGVnYW5jZSBjb2xsZWN0aW9uIGNyZWF0ZXMgYSBzb3BoaXN0aWNhdGVkIHlldCByZWxheGVkIHZpYmUgdGhhdCBzdWl0cyBhbnkgbW9kZXJuIGludGVyaW9yLlxuXG5XaXRoIG5hdHVyYWwgd29vZCBmaW5pc2hlcywgbmV1dHJhbCB0b25lcywgYW5kIHNvZnQgdGV4dHVyZXMsIE5vcmRpYyBFbGVnYW5jZSBmb3N0ZXJzIGEgc2Vuc2Ugb2YgY2FsbSBhbmQgdHJhbnF1aWxpdHksIG1ha2luZyBpdCB0aGUgcGVyZmVjdCBjaG9pY2UgZm9yIHRob3NlIHdobyB2YWx1ZSBzaW1wbGljaXR5IGFuZCBxdWFsaXR5LiBJZGVhbCBmb3IgY3JlYXRpbmcgYSBzZXJlbmUsIGNsdXR0ZXItZnJlZSBzcGFjZSwgdGhpcyBjb2xsZWN0aW9uIGlzIGEgdHJ1ZSByZWZsZWN0aW9uIG9mIFNjYW5kaW5hdmlhbiBkZXNpZ24gcHJpbmNpcGxlczogY2xlYW4sIGZ1bmN0aW9uYWwsIGFuZCBiZWF1dGlmdWxseSBjcmFmdGVkLlxuXG5LZXkgRmVhdHVyZXM6XG5cbk1pbmltYWxpc3QsIFNjYW5kaW5hdmlhbi1pbnNwaXJlZCBkZXNpZ24gdGhhdCBlbXBoYXNpemVzIHNpbXBsaWNpdHkgYW5kIGZ1bmN0aW9uYWxpdHlcbkNyYWZ0ZWQgZnJvbSBuYXR1cmFsIG1hdGVyaWFscyBsaWtlIHdvb2QsIHN0b25lLCBhbmQgc29mdCB0ZXh0aWxlcyBmb3IgYSB3YXJtLCBpbnZpdGluZyBmZWVsXG5MaWdodCwgbmV1dHJhbCBjb2xvciBwYWxldHRlIHRoYXQgY29tcGxlbWVudHMgdmFyaW91cyBpbnRlcmlvciBzdHlsZXNcbkhpZ2gtcXVhbGl0eSBjcmFmdHNtYW5zaGlwIGZvciBsYXN0aW5nIGJlYXV0eSBhbmQgZHVyYWJpbGl0eVxuSWRlYWwgZm9yIGNyZWF0aW5nIGEgcGVhY2VmdWwsIGVsZWdhbnQgZW52aXJvbm1lbnQgaW4gYW55IHJvb21cbkJyaW5nIHRoZSBwZWFjZWZ1bCBlbGVnYW5jZSBvZiBOb3JkaWMgZGVzaWduIGludG8geW91ciBob21lIHdpdGggTm9yZGljIEVsZWdhbmNl4oCUd2hlcmUgc2ltcGxpY2l0eSwgcXVhbGl0eSwgYW5kIHN0eWxlIHVuaXRlIHRvIGNyZWF0ZSB0aGUgdWx0aW1hdGUgYXRtb3NwaGVyZSBvZiBjYWxtIGFuZCBzb3BoaXN0aWNhdGlvbi4iLCJwcmljZSI6MjgwLCJkaXNjb3VudFBlcmNlbnRhZ2UiOm51bGwsImltYWdlX1VybCI6bnVsbCwiX2lkIjoiWWpGSW8xZzFMUVpISlpnMjdQYXFYMyJ9LHsiaW1hZ2VfVXJsIjpudWxsLCJfaWQiOiJZakZJbzFnMUxRWkhKWmcyN1Bhc2N0IiwibmFtZSI6bnVsbCwiZGVzY3JpcHRpb24iOiJFbWJyYWNlIHRoZSB3YXJtdGggb2Ygc3R5bGUgd2l0aCBTdW5ueUNoaWPigJRhIHZpYnJhbnQgYW5kIGNvbnRlbXBvcmFyeSBjb2xsZWN0aW9uIGRlc2lnbmVkIHRvIGJyaW5nIHRoZSBjaGVlcmZ1bCBlc3NlbmNlIG9mIHN1bnNoaW5lIGFuZCBjaGljIGVsZWdhbmNlIHRvIHlvdXIgaG9tZS4gV2hldGhlciB5b3UncmUgYnJpZ2h0ZW5pbmcgdXAgYSBsaXZpbmcgcm9vbSwgYmVkcm9vbSwgb3Igb3V0ZG9vciBzcGFjZSwgU3VubnlDaGljIGluZnVzZXMgZXZlcnkgY29ybmVyIHdpdGggYSByZWZyZXNoaW5nIGJ1cnN0IG9mIGVuZXJneSBhbmQgYSB0b3VjaCBvZiBzb3BoaXN0aWNhdGVkIGNoYXJtLlxuXG5JbnNwaXJlZCBieSB0aGUgd2FybXRoIG9mIHN1bm55IGRheXMgYW5kIHRoZSBsYWlkLWJhY2sgeWV0IHN0eWxpc2ggdmliZSBvZiBjb2FzdGFsIGxpdmluZywgU3VubnlDaGljIGZlYXR1cmVzIGJvbGQgY29sb3JzLCBsaWdodCBmYWJyaWNzLCBhbmQgYnJlZXp5IGRlc2lnbnMgdGhhdCBjYXB0dXJlIHRoZSBzcGlyaXQgb2Ygc3VtbWVyIGFsbCB5ZWFyIHJvdW5kLiBGcm9tIHN1bm55IHllbGxvd3MgYW5kIHNvZnQgbmV1dHJhbHMgdG8gcGxheWZ1bCBwYXR0ZXJucyBhbmQgdGV4dHVyZXMsIHRoaXMgY29sbGVjdGlvbiBlZmZvcnRsZXNzbHkgY29tYmluZXMgY29tZm9ydCB3aXRoIHRyZW5kc2V0dGluZyBkZXNpZ24sIGNyZWF0aW5nIHNwYWNlcyB0aGF0IGZlZWwgYm90aCBsaXZlbHkgYW5kIGludml0aW5nLlxuXG5DcmFmdGVkIGZyb20gaGlnaC1xdWFsaXR5IG1hdGVyaWFscywgU3VubnlDaGljIGlzIGRlc2lnbmVkIGZvciB0aG9zZSB3aG8gYXBwcmVjaWF0ZSBhIG1vZGVybiBhbmQgY2hlZXJmdWwgYWVzdGhldGljIHdpdGhvdXQgc2FjcmlmaWNpbmcgY29tZm9ydC4gVGhlIGNvbGxlY3Rpb24gb2ZmZXJzIGEgcGVyZmVjdCBiYWxhbmNlIG9mIGNhc3VhbCBlbGVnYW5jZSBhbmQgYnJpZ2h0IGFwcGVhbCwgbWFraW5nIGl0IGFuIGlkZWFsIGNob2ljZSBmb3IgdGhvc2Ugd2hvIGxvdmUgdG8gaW5jb3Jwb3JhdGUgbGlnaHQsIGFpcnkgdG9uZXMgYW5kIGEgdG91Y2ggb2YgcGxheWZ1bG5lc3MgaW50byB0aGVpciBkZWNvci5cblxuS2V5IEZlYXR1cmVzOlxuXG5CcmlnaHQsIGJvbGQgY29sb3JzIGFuZCBicmVlenkgZGVzaWducyBpbnNwaXJlZCBieSBzdW5ueSwgY29hc3RhbCBsaXZpbmdcbkhpZ2gtcXVhbGl0eSBtYXRlcmlhbHMgdGhhdCBhcmUgYm90aCBkdXJhYmxlIGFuZCBjb21mb3J0YWJsZVxuQSB2ZXJzYXRpbGUgY29sbGVjdGlvbiBwZXJmZWN0IGZvciBsaXZpbmcgcm9vbXMsIGJlZHJvb21zLCBvciBvdXRkb29yIHNwYWNlc1xuQ29tYmluZXMgY2hpYyBzdHlsZSB3aXRoIGEgcmVsYXhlZCwgd2VsY29taW5nIGF0bW9zcGhlcmVcbklkZWFsIGZvciB0aG9zZSBsb29raW5nIHRvIGFkZCBhIHJlZnJlc2hpbmcsIGNoZWVyZnVsIHRvdWNoIHRvIHRoZWlyIGhvbWVcbkZpbGwgeW91ciBob21lIHdpdGggdGhlIGxpZ2h0IGFuZCBlbmVyZ3kgb2YgU3VubnlDaGlj4oCUd2hlcmUgc3Vuc2hpbmUgbWVldHMgc3R5bGUgZm9yIGEgbGl2ZWx5IGFuZCBzb3BoaXN0aWNhdGVkIGxpdmluZyBleHBlcmllbmNlLiBNYWtlIGV2ZXJ5IGRheSBmZWVsIGxpa2UgYSBzdW5saXQgZXNjYXBlLiIsInByaWNlIjo0MDAsImRpc2NvdW50UGVyY2VudGFnZSI6bnVsbH1dLCJzeW5jVGFncyI6WyJzMTpkcXZ1UWciXSwibXMiOjh9","status":200,"url":"https://ilhf9wt8.apicdn.sanity.io/v2023-10-10/data/query/production?query=%0A++++*%5B_type+%3D%3D+%22product%22%5D%7B%0A++++++++_id%2C%0A++++++++name%2C%0A++++++++description%2C%0A++++++++price%2C%0A++++++++discountPercentage%2C%0A++++++++%22image_Url%22%3Aimage.asset-%3Eurl%2C%0A++++%7D&returnQuery=false"},"revalidate":31536000,"tags":[]}