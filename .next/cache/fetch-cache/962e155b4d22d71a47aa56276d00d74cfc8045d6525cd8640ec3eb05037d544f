{"kind":"FETCH","data":{"headers":{"accept-ranges":"bytes","alt-svc":"h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000","apicdn-cache-control":"public, max-age=60, s-maxage=3600, stale-while-revalidate=60, stale-if-error=3600","cache-control":"public, max-age=60, s-maxage=60, stale-while-revalidate=15, stale-if-error=3600","content-encoding":"br","content-length":"13051","content-type":"application/json; charset=utf-8","date":"Sun, 19 Jan 2025 12:01:42 GMT","sanity-gateway":"k8s-gcp-eu-w1-prod-ing-01","sanity-query-hash":"ZuwaGyTmBns uxvbys1qyTQ","server-timing":"api;dur=43","strict-transport-security":"max-age=63072000; includeSubDomains; preload","vary":"accept-encoding, origin","via":"1.1 google","x-sanity-age":"0","x-sanity-shard":"gcp-eu-w1-01-prod-1015"},"body":"{"result":[{"tags":["bold ","nest ","furniture ","modern ","contemporary"],"discountPercentage":null,"isNew":false,"_id":"0e0ztuJY6NWdyblBESI355","title":"Bold Nest","description":"Welcome to BoldNest—where fearless design meets comfort and creativity. Crafted for those who embrace individuality and bold expressions, BoldNest is more than just a piece of furniture; it’s a statement. With its striking design, exceptional comfort, and modern aesthetics, BoldNest is perfect for anyone looking to add a unique touch to their home or office.\n\nThe BoldNest collection combines daring colors, dynamic shapes, and high-quality materials to create an environment where style and comfort coexist in perfect harmony. Whether it’s a chair, sofa, or accent piece, each item is designed to stand out while offering a welcoming space for relaxation and enjoyment.\n\nIts sturdy construction and thoughtful design ensure that BoldNest not only makes a bold visual impact but also provides lasting durability. Perfect for those who are looking to break away from the ordinary and make their home a reflection of their bold personality, BoldNest is an ideal choice for creating an energetic and unique atmosphere.\n\nKey Features:\n\nBold and unique design that adds personality to any space\nHigh-quality materials for comfort, durability, and style\nAvailable in a variety of striking colors and patterns\nPerfect for modern homes and offices that embrace creativity\nVersatile design that complements contemporary and eclectic decor\nTransform your home into a space that reflects your bold, unique style with BoldNest—where standout design and comfort meet.","productImage":{"asset":{"_id":"image-75ef174ddda5862f2b2e869b169d8c0fbc7ce15b-4160x4160-jpg","url":"https://cdn.sanity.io/images/ilhf9wt8/production/75ef174ddda5862f2b2e869b169d8c0fbc7ce15b-4160x4160.jpg"}},"price":260},{"productImage":{"asset":{"_id":"image-78683aab6c58d367f91e411fbe2aea5f06a9a9b7-3264x4902-jpg","url":"https://cdn.sanity.io/images/ilhf9wt8/production/78683aab6c58d367f91e411fbe2aea5f06a9a9b7-3264x4902.jpg"}},"price":230,"tags":["cloud ","chair ","comfy ","home decor","modern furniture"],"discountPercentage":null,"isNew":false,"_id":"0e0ztuJY6NWdyblBESI38Z","title":"Cloud Haven Chair","description":"Sink into comfort with the Cloud Haven Chair—where softness meets support in a beautifully designed piece that feels like a personal retreat. Inspired by the gentle, calming presence of clouds, this chair offers an ultra-comfortable, inviting experience that lets you relax and unwind, making it the perfect addition to any living room, bedroom, or cozy nook.\n\nThe Cloud Haven Chair is crafted with premium materials that create a plush, cloud-like seating experience. Its luxurious cushioning provides gentle support, cradling you in comfort while the ergonomic design ensures the perfect balance between relaxation and posture. The chair’s sleek, modern lines and soft, neutral tones blend seamlessly into any decor, adding a touch of sophistication and tranquility to your space.\n\nWhether you’re enjoying a good book, meditating, or simply relaxing after a long day, the Cloud Haven Chair creates a peaceful sanctuary where you can escape into serenity. Its durable construction guarantees lasting comfort and style, while its cloud-inspired design brings a sense of lightness and ease to your home.\n\nKey Features:\n\nUltra-soft, cloud-like cushioning for a relaxing seating experience\nErgonomically designed for optimal comfort and support\nSleek, modern design that complements a variety of home decor styles\nCrafted from high-quality materials for durability and long-lasting comfort\nPerfect for creating a peaceful, inviting space in any room\nTransform your living space into a serene haven with the Cloud Haven Chair—where comfort and style come together to create the ultimate relaxation experience."},{"discountPercentage":null,"isNew":true,"_id":"0e0ztuJY6NWdyblBESI3J1","title":"The Dandy chair","description":"Meet The Dandy Chair—the epitome of comfort, style, and sophistication. Designed for those who appreciate the finer things in life, this chair combines classic charm with modern elegance, making it the perfect addition to any room in your home or office. Whether you're looking to create a luxurious reading nook, an inviting lounge area, or a statement piece for your workspace, The Dandy Chair offers both beauty and functionality.\n\nCrafted with meticulous attention to detail, The Dandy Chair features plush cushioning, ergonomic support, and a sleek, timeless design. Its high-quality materials and superior craftsmanship ensure durability while providing an exceptional seating experience. The chair's clean lines and refined shape give it a stylish yet relaxed feel, while its bold yet understated presence adds a touch of refinement to any space.\n\nWhether you choose a neutral tone or a pop of color, The Dandy Chair effortlessly complements a wide variety of decor styles, from modern minimalism to traditional luxury. Its versatility and comfort make it ideal for those who value both aesthetics and practicality in their furniture choices.\n\nKey Features:\n\nComfortable, plush cushioning with ergonomic support\nTimeless design that adds sophistication to any space\nCrafted with high-quality materials for durability and longevity\nVersatile style that complements both modern and traditional interiors\nIdeal for living rooms, offices, or any area that calls for a touch of elegance\nExperience the perfect blend of comfort and style with The Dandy Chair—where luxury meets functionality and every detail is crafted to impress.","productImage":{"asset":{"_id":"image-e2cc69a6c9f9d1ff1fcfbe839844240e16f5f758-305x375-png","url":"https://cdn.sanity.io/images/ilhf9wt8/production/e2cc69a6c9f9d1ff1fcfbe839844240e16f5f758-305x375.png"}},"price":150,"tags":["chair ","elegant ","vintage ","classic ","furniture"]},{"isNew":false,"_id":"0e0ztuJY6NWdyblBESI3SJ","title":"Syltherine","description":"Introducing Syltherine – the ultimate fusion of elegance and power. Crafted for those who demand exceptional performance, Syltherine is a premium product designed to elevate your experience to the next level. Whether you're seeking innovation, beauty, or unmatched durability, Syltherine offers all this and more.\n\nThis cutting-edge solution stands at the intersection of advanced technology and refined aesthetics. Its sleek design, combined with carefully selected materials, promises not only a visually stunning appearance but also long-lasting reliability. Whether you are using Syltherine for professional tasks or personal indulgence, it delivers with precision, speed, and unmatched performance.\n\nPerfectly balanced to meet the needs of modern users, Syltherine is intuitive and easy to use, providing a seamless experience from start to finish. It boasts a variety of features to ensure that you stay ahead of the curve, whether it’s smart integration, energy efficiency, or superior functionality.\n\nExperience the future of performance with Syltherine—where luxury meets innovation, and every detail is engineered for perfection. Make Syltherine your go-to choice for an unparalleled experience today.\n\nKey Features:\n\nSuperior performance and precision\nSleek, modern design\nBuilt for durability and long-lasting use\nEasy integration and seamless user experience\nIdeal for both professionals and personal use\nElevate your standards with Syltherine—where every moment is enhanced by innovation.","productImage":{"asset":{"_id":"image-fd34380db5561bddee83ba8fad1601efef20bfe9-285x301-png","url":"https://cdn.sanity.io/images/ilhf9wt8/production/fd34380db5561bddee83ba8fad1601efef20bfe9-285x301.png"}},"price":200,"tags":["living","fancy","elegance ","desgin"],"discountPercentage":null},{"isNew":false,"_id":"0e0ztuJY6NWdyblBESI3jj","title":"Marble Ease","description":"Introducing MarbleEase—a luxurious collection that brings the timeless elegance of marble into your home with ease and sophistication. Designed for those who appreciate understated beauty and high-end design, MarbleEase combines the natural allure of marble with modern functionality, creating an effortless balance between style and practicality.\n\nEach piece in the MarbleEase collection features the exquisite veining and refined textures that make marble a classic choice, while offering lightweight and durable alternatives that ensure easy maintenance and long-lasting appeal. Whether you are adding a statement piece to your living room, kitchen, or office, MarbleEase brings a touch of opulence and tranquility to any space.\n\nFrom sleek tabletops and chic home accessories to sophisticated decor accents, MarbleEase infuses your home with a sense of luxury and simplicity. Its neutral tones and classic design complement a wide variety of interior styles, from modern minimalism to more traditional settings. Perfect for those who value timeless design with a contemporary twist, MarbleEase offers elegance without the hassle.\n\nKey Features:\n\nTimeless marble-inspired design with beautiful veining and texture\nHigh-quality, easy-to-care-for materials that offer durability and longevity\nLightweight and functional, making it ideal for daily use and effortless maintenance\nVersatile pieces that complement a wide range of interior styles\nPerfect for adding an elegant, luxurious touch to any room\nElevate your home with MarbleEase—where luxury meets ease, and timeless design is made effortlessly modern. Create a space that reflects your love for beauty, simplicity, and sophistication.","productImage":{"asset":{"_id":"image-7f6146b6625bf94030f2aa896e9b0c847e5f4919-8000x8000-jpg","url":"https://cdn.sanity.io/images/ilhf9wt8/production/7f6146b6625bf94030f2aa896e9b0c847e5f4919-8000x8000.jpg"}},"price":419,"tags":["marble ","luxury ","furniture ","modern ","elegance"],"discountPercentage":null},{"title":"The Lucky Lamp","description":"Introducing The Lucky Lamp—a unique blend of charm, elegance, and positive energy designed to illuminate your home and bring good fortune into your life. This beautifully crafted lamp isn’t just a light source, it’s a symbol of prosperity and warmth, making it the perfect addition to any space that needs a touch of light and positivity.\n\nThe Lucky Lamp features a stunning design that combines modern aesthetics with a timeless appeal. Its soft glow creates a calming atmosphere, while its symbolic design is said to attract good luck, success, and harmony. Whether placed on a bedside table, desk, or living room console, The Lucky Lamp adds a touch of magic and tranquility to your surroundings.\n\nCrafted with high-quality materials and attention to detail, The Lucky Lamp is not only a functional lighting solution but also a decorative piece that enhances your space. Its versatile design complements various decor styles, from contemporary to traditional, making it an ideal fit for any room in your home or office.\n\nPerfect for gifting or adding a touch of positivity to your own home, The Lucky Lamp is a thoughtful way to spread good energy and light wherever it goes.\n\nKey Features:\n\nUnique design that symbolizes good luck, prosperity, and harmony\nSoft, warm light that creates a calming atmosphere\nHigh-quality materials for durability and lasting appeal\nVersatile and stylish design that complements any decor\nIdeal for gifting or personal use\nBring good fortune and illumination into your life with The Lucky Lamp—where light meets positivity and timeless design.","productImage":{"asset":{"_id":"image-c10750f3c15f8807251977fe5e042b0a6cee55ab-305x375-png","url":"https://cdn.sanity.io/images/ilhf9wt8/production/c10750f3c15f8807251977fe5e042b0a6cee55ab-305x375.png"}},"price":200,"tags":["lamp ","lucky ","decor ","lighting ","vintage"],"discountPercentage":null,"isNew":false,"_id":"0e0ztuJY6NWdyblBESI4Zz"},{"price":280,"tags":["pure ","modern ","elegance ","interior design","furniture"],"discountPercentage":null,"isNew":false,"_id":"0e0ztuJY6NWdyblBESI4dT","title":"Pure Aura","description":"Experience the essence of tranquility and purity with PureAura—a collection designed to bring peace, balance, and sophistication to your living space. Inspired by the clarity of nature and the calm of serene environments, PureAura transforms any room into a haven of peaceful elegance, creating an atmosphere that invites relaxation and mindfulness.\n\nEach piece in the PureAura collection is thoughtfully crafted with an emphasis on minimalism and clean design, allowing you to create a calm, clutter-free environment. The collection features soft, neutral tones, gentle textures, and natural materials, all chosen to enhance the serenity and flow of your home. Whether you're furnishing your living room, bedroom, or meditation space, PureAura offers a subtle yet powerful presence that promotes well-being and inner peace.\n\nCrafted from high-quality materials, every item in the PureAura collection is designed for both beauty and durability. From soothing furniture to delicate decorative accents, PureAura creates a harmonious balance between style and simplicity, making it the perfect choice for anyone who values a peaceful, refined space.\n\nKey Features:\n\nMinimalist design with soft, neutral tones for a calming atmosphere\nCrafted from natural materials that enhance the sense of tranquility\nHigh-quality craftsmanship for lasting beauty and durability\nPerfect for creating a peaceful, serene home environment\nIdeal for meditation rooms, bedrooms, or any space that requires relaxation and balance\nElevate your home with PureAura—where simplicity meets elegance, creating an atmosphere of calm, clarity, and pure serenity. Let your space reflect the tranquility and balance that you deserve.","productImage":{"asset":{"_id":"image-db6d068faf67dab6145cadcd8e572944c6b9e935-3648x5472-jpg","url":"https://cdn.sanity.io/images/ilhf9wt8/production/db6d068faf67dab6145cadcd8e572944c6b9e935-3648x5472.jpg"}}},{"tags":["serene ","seat ","comfort ","relaxing ","furniture"],"discountPercentage":null,"isNew":false,"_id":"0e0ztuJY6NWdyblBESI4tj","title":"Serene Seat","description":"Step into comfort and tranquility with SereneSeat—a chair designed to provide not only a place to sit, but an experience of relaxation and calm. Whether you're unwinding after a long day or looking to enhance your home with a touch of elegance, SereneSeat offers the perfect combination of style, comfort, and serenity.\n\nCrafted with ergonomic precision and luxurious materials, SereneSeat cradles your body with supportive cushioning and a design that promotes relaxation. Its sleek, minimalist form fits seamlessly into any space, making it ideal for living rooms, bedrooms, home offices, or reading nooks. The soft, inviting fabrics and sturdy construction ensure that every moment spent in the SereneSeat is one of pure comfort.\n\nDesigned with both aesthetics and functionality in mind, SereneSeat brings a peaceful yet modern touch to any room. Its neutral tones and clean lines complement a variety of decor styles, making it easy to incorporate into your existing home or office setup. Whether you're looking for a quiet spot to read, meditate, or simply relax, the SereneSeat is your go-to choice for a serene and stylish seating experience.\n\nKey Features:\n\nErgonomic design for optimal comfort and support\nHigh-quality materials for durability and lasting comfort\nSleek, minimalist style that complements various decor styles\nIdeal for creating a peaceful and relaxing atmosphere\nPerfect for use in living rooms, bedrooms, or offices\nTransform your home into a sanctuary of relaxation and style with SereneSeat—where comfort meets elegance in every seat.","productImage":{"asset":{"_id":"image-19920122d503e8a40aa994d43f5f090547b48e9d-3777x5990-jpg","url":"https://cdn.sanity.io/images/ilhf9wt8/production/19920122d503e8a40aa994d43f5f090547b48e9d-3777x5990.jpg"}},"price":350},{"title":"Timeless Elegance","description":"Introducing TimelessElegance—a collection that embodies the perfect fusion of classic beauty and modern sophistication. Designed for those who appreciate the enduring appeal of refined style, TimelessElegance brings grace, charm, and unparalleled quality to any space. Each piece in this collection is crafted to stand the test of time, offering not only lasting durability but also a sense of sophistication that never goes out of style.\n\nWith its clean lines, luxurious materials, and subtle detailing, TimelessElegance seamlessly complements any décor, from contemporary urban apartments to traditional homes. Whether you’re adding a statement piece to your living room, bedroom, or office, this collection brings an air of refinement that enhances every environment. The timeless design ensures that your space remains stylish for years to come, while its elegance offers a sense of warmth and comfort.\n\nCrafted with exceptional attention to detail, TimelessElegance pieces are built to withstand the rigors of daily life while retaining their beauty. Perfect for those who seek a blend of classic style and modern functionality, this collection is ideal for creating spaces that exude sophistication, grace, and enduring appeal.\n\nKey Features:\n\nClassic, timeless designs that offer long-lasting appeal\nLuxurious materials and meticulous craftsmanship for durability\nVersatile style that complements a wide range of home décor themes\nPerfect for creating a sophisticated, elegant atmosphere in any room\nIdeal for those who value style, quality, and refinement\nAdd a touch of sophistication to your home with TimelessElegance—where grace meets functionality, and every detail is crafted to last a lifetime.","productImage":{"asset":{"_id":"image-09ddef74e0be13da2648ecead6504e317ce47847-6000x4000-jpg","url":"https://cdn.sanity.io/images/ilhf9wt8/production/09ddef74e0be13da2648ecead6504e317ce47847-6000x4000.jpg"}},"price":320,"tags":["timeless ","elegance ","furniture ","classic ","luxury"],"discountPercentage":null,"isNew":true,"_id":"0e0ztuJY6NWdyblBESI56V"},{"price":480,"tags":["modern ","serenity ","peaceful ","contemporary ","furniture"],"discountPercentage":null,"isNew":true,"_id":"0e0ztuJY6NWdyblBESI5Ed","title":"Modern Serenity","description":"Introducing ModernSerenity—a collection that redefines contemporary living by combining tranquility and style in perfect harmony. Designed for those who seek balance, simplicity, and elegance, ModernSerenity transforms any space into a peaceful retreat, offering a serene atmosphere that promotes relaxation and well-being.\n\nThe essence of ModernSerenity lies in its minimalist approach, where clean lines, neutral tones, and soothing textures create an environment that invites calmness and clarity. Whether you're furnishing your living room, bedroom, or office, each piece in the ModernSerenity collection is designed to elevate your space while maintaining an effortless, uncluttered aesthetic.\n\nCrafted with the finest materials, ModernSerenity products are built to last and are designed with both beauty and practicality in mind. From soft, inviting fabrics to sleek, functional shapes, every detail has been thoughtfully considered to enhance your lifestyle. With a focus on smart design, ModernSerenity delivers a timeless sense of peace and elegance, making it the ideal choice for anyone looking to create a sophisticated, serene home.\n\nKey Features:\n\nSleek, minimalist design for a calm and tranquil environment\nHigh-quality materials for durability and comfort\nNeutral tones and soft textures that complement any decor\nPerfect for creating a serene, modern living space\nIdeal for individuals seeking balance and relaxation in their home or office\nTransform your space with ModernSerenity—where contemporary design meets peaceful living. Create a home that reflects your sense of style and inner calm.","productImage":{"asset":{"_id":"image-9074eb33bece6914927f6e78eb520d7b0695f77c-3715x2362-jpg","url":"https://cdn.sanity.io/images/ilhf9wt8/production/9074eb33bece6914927f6e78eb520d7b0695f77c-3715x2362.jpg"}}},{"isNew":false,"_id":"0e0ztuJY6NWdyblBESI5RP","title":"Reflective Haven","description":"Create a sanctuary of calm and introspection with ReflectiveHaven—a collection designed to bring peace, tranquility, and thoughtful elegance into your space. Inspired by serene environments and mindful living, ReflectiveHaven is perfect for those seeking a retreat from the hustle and bustle of everyday life. This collection invites you to slow down, reflect, and enjoy moments of stillness.\n\nThe pieces in the ReflectiveHaven collection are designed with clean lines, soothing tones, and a harmonious blend of textures that foster a sense of balance and serenity. From minimalist furniture to subtle decorative accents, each item is thoughtfully crafted to create an atmosphere that encourages mindfulness and personal reflection. The calming neutral hues, natural materials, and understated beauty make it easy to turn any room into a peaceful haven.\n\nPerfect for meditation spaces, cozy reading nooks, or tranquil bedrooms, ReflectiveHaven brings a sense of clarity and inner peace to your home. It’s for those who value simplicity, balance, and the ability to create an environment that nurtures both mental clarity and physical relaxation.\n\nKey Features:\n\nMinimalist design with a focus on calm, neutral tones and natural materials\nHigh-quality craftsmanship for lasting beauty and durability\nPerfect for creating peaceful, reflective spaces within your home\nIdeal for meditation, relaxation, or simply unwinding after a long day\nInvites mindfulness and inner peace with every detail\nTransform your living space into a peaceful retreat with ReflectiveHaven—where serene design meets mindful living, creating a sanctuary for reflection and relaxation.","productImage":{"asset":{"_id":"image-1d164807717fdbc56142a73f3dec82fea98d12e5-3902x5853-jpg","url":"https://cdn.sanity.io/images/ilhf9wt8/production/1d164807717fdbc56142a73f3dec82fea98d12e5-3902x5853.jpg"}},"price":300,"tags":["reflective ","haven ","contemporary ","modern ","decor"],"discountPercentage":null},{"description":"Bring the charm of nature into your home with the Rustic Vase Set. Perfect for those who appreciate timeless beauty and a warm, inviting atmosphere, this set of vases adds a touch of rustic elegance to any space. Crafted with care and attention to detail, these vases are designed to evoke the essence of vintage craftsmanship while seamlessly complementing both modern and traditional decor styles.\n\nThe Rustic Vase Set features a collection of three uniquely designed vases, each with its own character. Their earthy tones, textured finishes, and artisanal touch capture the essence of the countryside, making them ideal for showcasing fresh flowers, dried arrangements, or simply as stand-alone decor pieces. Whether placed on a mantel, coffee table, or dining area, these vases effortlessly enhance the ambiance of your home.\n\nMade from high-quality materials, the Rustic Vase Set offers both style and durability. The natural, imperfect surfaces of the vases give them a distinct, hand-crafted appeal, ensuring that each set is one-of-a-kind. With their timeless design, these vases make a perfect gift for housewarmings, weddings, or any special occasion.\n\nKey Features:\n\nSet includes three uniquely designed rustic vases\nCrafted from high-quality materials with a natural, hand-crafted finish\nPerfect for displaying flowers, greenery, or as standalone decorative pieces\nVersatile design complements both modern and traditional interiors\nIdeal for gifting or personal use in any living space\nAdd warmth and character to your home with the Rustic Vase Set—where classic design meets natural beauty.","productImage":{"asset":{"_id":"image-2219cafc285ec13a2ed3f88aa36cbea852a11735-305x375-png","url":"https://cdn.sanity.io/images/ilhf9wt8/production/2219cafc285ec13a2ed3f88aa36cbea852a11735-305x375.png"}},"price":210,"tags":["rustic ","vase ","home decor","vintage ","interior design"],"discountPercentage":null,"isNew":false,"_id":"0e0ztuJY6NWdyblBETq42h","title":"Rustic Vase Set"},{"discountPercentage":null,"isNew":false,"_id":"0e0ztuJY6NWdyblBETq4vH","title":"Bold Nest","description":"Welcome to BoldNest—where fearless design meets comfort and creativity. Crafted for those who embrace individuality and bold expressions, BoldNest is more than just a piece of furniture; it’s a statement. With its striking design, exceptional comfort, and modern aesthetics, BoldNest is perfect for anyone looking to add a unique touch to their home or office.\n\nThe BoldNest collection combines daring colors, dynamic shapes, and high-quality materials to create an environment where style and comfort coexist in perfect harmony. Whether it’s a chair, sofa, or accent piece, each item is designed to stand out while offering a welcoming space for relaxation and enjoyment.\n\nIts sturdy construction and thoughtful design ensure that BoldNest not only makes a bold visual impact but also provides lasting durability. Perfect for those who are looking to break away from the ordinary and make their home a reflection of their bold personality, BoldNest is an ideal choice for creating an energetic and unique atmosphere.\n\nKey Features:\n\nBold and unique design that adds personality to any space\nHigh-quality materials for comfort, durability, and style\nAvailable in a variety of striking colors and patterns\nPerfect for modern homes and offices that embrace creativity\nVersatile design that complements contemporary and eclectic decor\nTransform your home into a space that reflects your bold, unique style with BoldNest—where standout design and comfort meet.","productImage":{"asset":{"_id":"image-75ef174ddda5862f2b2e869b169d8c0fbc7ce15b-4160x4160-jpg","url":"https://cdn.sanity.io/images/ilhf9wt8/production/75ef174ddda5862f2b2e869b169d8c0fbc7ce15b-4160x4160.jpg"}},"price":260,"tags":["bold ","nest ","furniture ","modern ","contemporary"]},{"price":180,"tags":["bright ","space ","minimalistic ","modern ","decor"],"discountPercentage":null,"isNew":false,"_id":"0e0ztuJY6NWdyblBETq59D","title":"Bright Space","description":"Welcome to BrightSpace—a collection designed to infuse your home with light, energy, and vibrancy. Inspired by the power of natural light and open spaces, BrightSpace brings a fresh, airy feel to any room. Whether you're looking to brighten your living area, create an inspiring workspace, or transform your bedroom into a peaceful retreat, BrightSpace offers the perfect blend of style and function to make your environment feel open and inviting.\n\nFeaturing clean lines, light hues, and functional designs, BrightSpace is all about creating a positive, uplifting atmosphere. Each piece is carefully crafted to enhance the flow of light, with materials that reflect brightness and encourage a sense of openness. The collection brings a modern, minimalist approach that allows your space to feel more expansive, whether through large windows, reflective surfaces, or light furniture choices.\n\nIdeal for those who appreciate a modern, fresh aesthetic with a focus on natural light, BrightSpace is perfect for those looking to create a lively yet serene environment. Whether you’re decorating a home office, living room, or sun-drenched dining area, this collection is designed to bring clarity and vibrancy to any space.\n\nKey Features:\n\nDesigned to enhance natural light and create an open, airy feel\nClean, minimalist lines that complement modern spaces\nLight, neutral tones and reflective surfaces for a bright atmosphere\nCrafted with quality materials for durability and lasting appeal\nPerfect for creating a vibrant, positive space in your home or office\nTransform your home into a bright, inviting haven with BrightSpace—where light, style, and functionality come together to create the perfect environment.","productImage":{"asset":{"_id":"image-d32066d0882c1632e027b053564115ed460e09eb-3393x5090-jpg","url":"https://cdn.sanity.io/images/ilhf9wt8/production/d32066d0882c1632e027b053564115ed460e09eb-3393x5090.jpg"}}},{"price":150,"tags":["chair ","elegant ","vintage ","classic ","furniture"],"discountPercentage":null,"isNew":true,"_id":"0e0ztuJY6NWdyblBETq5HL","title":"The Dandy chair","description":"Meet The Dandy Chair—the epitome of comfort, style, and sophistication. Designed for those who appreciate the finer things in life, this chair combines classic charm with modern elegance, making it the perfect addition to any room in your home or office. Whether you're looking to create a luxurious reading nook, an inviting lounge area, or a statement piece for your workspace, The Dandy Chair offers both beauty and functionality.\n\nCrafted with meticulous attention to detail, The Dandy Chair features plush cushioning, ergonomic support, and a sleek, timeless design. Its high-quality materials and superior craftsmanship ensure durability while providing an exceptional seating experience. The chair's clean lines and refined shape give it a stylish yet relaxed feel, while its bold yet understated presence adds a touch of refinement to any space.\n\nWhether you choose a neutral tone or a pop of color, The Dandy Chair effortlessly complements a wide variety of decor styles, from modern minimalism to traditional luxury. Its versatility and comfort make it ideal for those who value both aesthetics and practicality in their furniture choices.\n\nKey Features:\n\nComfortable, plush cushioning with ergonomic support\nTimeless design that adds sophistication to any space\nCrafted with high-quality materials for durability and longevity\nVersatile style that complements both modern and traditional interiors\nIdeal for living rooms, offices, or any area that calls for a touch of elegance\nExperience the perfect blend of comfort and style with The Dandy Chair—where luxury meets functionality and every detail is crafted to impress.","productImage":{"asset":{"_id":"image-e2cc69a6c9f9d1ff1fcfbe839844240e16f5f758-305x375-png","url":"https://cdn.sanity.io/images/ilhf9wt8/production/e2cc69a6c9f9d1ff1fcfbe839844240e16f5f758-305x375.png"}}},{"_id":"0e0ztuJY6NWdyblBETq6JD","title":"Marble Ease","description":"Introducing MarbleEase—a luxurious collection that brings the timeless elegance of marble into your home with ease and sophistication. Designed for those who appreciate understated beauty and high-end design, MarbleEase combines the natural allure of marble with modern functionality, creating an effortless balance between style and practicality.\n\nEach piece in the MarbleEase collection features the exquisite veining and refined textures that make marble a classic choice, while offering lightweight and durable alternatives that ensure easy maintenance and long-lasting appeal. Whether you are adding a statement piece to your living room, kitchen, or office, MarbleEase brings a touch of opulence and tranquility to any space.\n\nFrom sleek tabletops and chic home accessories to sophisticated decor accents, MarbleEase infuses your home with a sense of luxury and simplicity. Its neutral tones and classic design complement a wide variety of interior styles, from modern minimalism to more traditional settings. Perfect for those who value timeless design with a contemporary twist, MarbleEase offers elegance without the hassle.\n\nKey Features:\n\nTimeless marble-inspired design with beautiful veining and texture\nHigh-quality, easy-to-care-for materials that offer durability and longevity\nLightweight and functional, making it ideal for daily use and effortless maintenance\nVersatile pieces that complement a wide range of interior styles\nPerfect for adding an elegant, luxurious touch to any room\nElevate your home with MarbleEase—where luxury meets ease, and timeless design is made effortlessly modern. Create a space that reflects your love for beauty, simplicity, and sophistication.","productImage":{"asset":{"_id":"image-7f6146b6625bf94030f2aa896e9b0c847e5f4919-8000x8000-jpg","url":"https://cdn.sanity.io/images/ilhf9wt8/production/7f6146b6625bf94030f2aa896e9b0c847e5f4919-8000x8000.jpg"}},"price":419,"tags":["marble ","luxury ","furniture ","modern ","elegance"],"discountPercentage":null,"isNew":false},{"isNew":true,"_id":"0e0ztuJY6NWdyblBETq9FX","title":"Bed","description":"Introducing the Bed—your sanctuary for rest and relaxation, designed with both comfort and style in mind. This timeless piece is crafted to transform your bedroom into a peaceful retreat, offering a perfect balance of support, elegance, and durability. Whether you're outfitting a master bedroom or a guest room, the Bed ensures that every night is filled with restful sleep and every morning starts with ease.\n\nConstructed from high-quality materials, the Bed provides both sturdy support and luxurious comfort. The frame features sleek lines and a minimalist design, making it an ideal choice for a variety of interior styles, from modern to traditional. The soft yet supportive surface ensures that you can unwind in ultimate comfort, while the sturdy foundation provides long-lasting durability.\n\nDesigned for those who appreciate both aesthetics and practicality, the Bed is a versatile addition to any bedroom. Its clean design, quality craftsmanship, and functional features create an inviting space where you can rest, recharge, and enjoy your most restful nights.\n\nKey Features:\n\nHigh-quality construction for durability and long-lasting support\nSleek, minimalist design that fits into a wide range of bedroom styles\nComfortable and supportive surface for a restful night's sleep\nPerfect for master bedrooms, guest rooms, or smaller spaces\nBuilt with attention to detail for both beauty and practicality\nTransform your bedroom into a restful haven with the Bed—where style, comfort, and functionality meet to create the ultimate space for relaxation and rejuvenation.","productImage":{"asset":{"_id":"image-b6551d6252d30e222875fbcd5d91c6edca324a1d-3518x3238-jpg","url":"https://cdn.sanity.io/images/ilhf9wt8/production/b6551d6252d30e222875fbcd5d91c6edca324a1d-3518x3238.jpg"}},"price":250,"tags":["bed ","furniture ","sleep ","cozy ","modern"],"discountPercentage":null},{"isNew":true,"_id":"0e0ztuJY6NWdyblBETqA9H","title":"Zen Table","description":"Introduce tranquility and balance into your home with ZenTable—a beautifully crafted piece designed to inspire mindfulness, serenity, and effortless elegance. Inspired by the peaceful aesthetics of Zen design, this table serves as a functional centerpiece while fostering a calm, meditative atmosphere in any room. Perfect for modern homes or spaces dedicated to relaxation, ZenTable brings a sense of harmony and simplicity that enhances your daily life.\n\nCrafted with clean lines, natural materials, and subtle detailing, ZenTable captures the essence of minimalist beauty. Its simple yet striking design allows it to seamlessly integrate into a variety of interiors, whether placed in the living room, office, or meditation space. The ZenTable is built with both form and function in mind—offering a sturdy, durable surface while maintaining an elegant and soothing appearance.\n\nWhether used as a coffee table, a focal point in your meditation room, or a sleek accent in your living space, ZenTable encourages a peaceful, balanced environment. Its understated design creates an inviting atmosphere where you can reflect, unwind, and enjoy life's simpler moments.\n\nKey Features:\n\nMinimalist, Zen-inspired design that fosters peace and tranquility\nCrafted from high-quality natural materials for durability and elegance\nSimple, clean lines that complement modern and traditional interiors\nVersatile use in living rooms, offices, or meditation spaces\nEncourages balance and serenity, perfect for mindfulness practices\nCreate a calming and harmonious space with ZenTable—where design meets tranquility, making every moment of your day more peaceful and centered.","productImage":{"asset":{"_id":"image-73e36a9afc074b751d9f2693d2b251ba12b36276-3433x3064-jpg","url":"https://cdn.sanity.io/images/ilhf9wt8/production/73e36a9afc074b751d9f2693d2b251ba12b36276-3433x3064.jpg"}},"price":250,"tags":["zen ","table ","furniture ","calm ","minimalistic"],"discountPercentage":null},{"title":"Serene Seat","description":"Step into comfort and tranquility with SereneSeat—a chair designed to provide not only a place to sit, but an experience of relaxation and calm. Whether you're unwinding after a long day or looking to enhance your home with a touch of elegance, SereneSeat offers the perfect combination of style, comfort, and serenity.\n\nCrafted with ergonomic precision and luxurious materials, SereneSeat cradles your body with supportive cushioning and a design that promotes relaxation. Its sleek, minimalist form fits seamlessly into any space, making it ideal for living rooms, bedrooms, home offices, or reading nooks. The soft, inviting fabrics and sturdy construction ensure that every moment spent in the SereneSeat is one of pure comfort.\n\nDesigned with both aesthetics and functionality in mind, SereneSeat brings a peaceful yet modern touch to any room. Its neutral tones and clean lines complement a variety of decor styles, making it easy to incorporate into your existing home or office setup. Whether you're looking for a quiet spot to read, meditate, or simply relax, the SereneSeat is your go-to choice for a serene and stylish seating experience.\n\nKey Features:\n\nErgonomic design for optimal comfort and support\nHigh-quality materials for durability and lasting comfort\nSleek, minimalist style that complements various decor styles\nIdeal for creating a peaceful and relaxing atmosphere\nPerfect for use in living rooms, bedrooms, or offices\nTransform your home into a sanctuary of relaxation and style with SereneSeat—where comfort meets elegance in every seat.","productImage":{"asset":{"_id":"image-19920122d503e8a40aa994d43f5f090547b48e9d-3777x5990-jpg","url":"https://cdn.sanity.io/images/ilhf9wt8/production/19920122d503e8a40aa994d43f5f090547b48e9d-3777x5990.jpg"}},"price":350,"tags":["serene ","seat ","comfort ","relaxing ","furniture"],"discountPercentage":null,"isNew":false,"_id":"0e0ztuJY6NWdyblBETqAi7"},{"productImage":{"asset":{"_id":"image-c371d0a7592905e368cf906ccc918d41033e7a85-4140x5520-jpg","url":"https://cdn.sanity.io/images/ilhf9wt8/production/c371d0a7592905e368cf906ccc918d41033e7a85-4140x5520.jpg"}},"price":280,"tags":["nordic ","elegance ","furniture ","minimalistic ","modern"],"discountPercentage":null,"isNew":false,"_id":"0e0ztuJY6NWdyblBETqAtj","title":"Nordic Elegance","description":"Elevate your space with Nordic Elegance—a collection that brings the minimalist beauty and understated sophistication of Scandinavian design into your home. Inspired by the serene landscapes and functional aesthetics of Nordic regions, this collection offers timeless pieces that blend clean lines, natural materials, and a refined simplicity to create a peaceful and inviting atmosphere.\n\nCrafted with precision and attention to detail, Nordic Elegance celebrates the beauty of light, airy spaces, and the harmony between form and function. Each piece is designed to be both practical and visually appealing, combining functionality with refined, minimalist elegance. Whether you are outfitting your living room, bedroom, or home office, the Nordic Elegance collection creates a sophisticated yet relaxed vibe that suits any modern interior.\n\nWith natural wood finishes, neutral tones, and soft textures, Nordic Elegance fosters a sense of calm and tranquility, making it the perfect choice for those who value simplicity and quality. Ideal for creating a serene, clutter-free space, this collection is a true reflection of Scandinavian design principles: clean, functional, and beautifully crafted.\n\nKey Features:\n\nMinimalist, Scandinavian-inspired design that emphasizes simplicity and functionality\nCrafted from natural materials like wood, stone, and soft textiles for a warm, inviting feel\nLight, neutral color palette that complements various interior styles\nHigh-quality craftsmanship for lasting beauty and durability\nIdeal for creating a peaceful, elegant environment in any room\nBring the peaceful elegance of Nordic design into your home with Nordic Elegance—where simplicity, quality, and style unite to create the ultimate atmosphere of calm and sophistication."},{"isNew":true,"_id":"0e0ztuJY6NWdyblBETqAxD","title":"Timeless Elegance","description":"Introducing TimelessElegance—a collection that embodies the perfect fusion of classic beauty and modern sophistication. Designed for those who appreciate the enduring appeal of refined style, TimelessElegance brings grace, charm, and unparalleled quality to any space. Each piece in this collection is crafted to stand the test of time, offering not only lasting durability but also a sense of sophistication that never goes out of style.\n\nWith its clean lines, luxurious materials, and subtle detailing, TimelessElegance seamlessly complements any décor, from contemporary urban apartments to traditional homes. Whether you’re adding a statement piece to your living room, bedroom, or office, this collection brings an air of refinement that enhances every environment. The timeless design ensures that your space remains stylish for years to come, while its elegance offers a sense of warmth and comfort.\n\nCrafted with exceptional attention to detail, TimelessElegance pieces are built to withstand the rigors of daily life while retaining their beauty. Perfect for those who seek a blend of classic style and modern functionality, this collection is ideal for creating spaces that exude sophistication, grace, and enduring appeal.\n\nKey Features:\n\nClassic, timeless designs that offer long-lasting appeal\nLuxurious materials and meticulous craftsmanship for durability\nVersatile style that complements a wide range of home décor themes\nPerfect for creating a sophisticated, elegant atmosphere in any room\nIdeal for those who value style, quality, and refinement\nAdd a touch of sophistication to your home with TimelessElegance—where grace meets functionality, and every detail is crafted to last a lifetime.","productImage":{"asset":{"_id":"image-09ddef74e0be13da2648ecead6504e317ce47847-6000x4000-jpg","url":"https://cdn.sanity.io/images/ilhf9wt8/production/09ddef74e0be13da2648ecead6504e317ce47847-6000x4000.jpg"}},"price":320,"tags":["timeless ","elegance ","furniture ","classic ","luxury"],"discountPercentage":null},{"discountPercentage":null,"isNew":true,"_id":"0e0ztuJY6NWdyblBETqB31","title":"Modern Serenity","description":"Introducing ModernSerenity—a collection that redefines contemporary living by combining tranquility and style in perfect harmony. Designed for those who seek balance, simplicity, and elegance, ModernSerenity transforms any space into a peaceful retreat, offering a serene atmosphere that promotes relaxation and well-being.\n\nThe essence of ModernSerenity lies in its minimalist approach, where clean lines, neutral tones, and soothing textures create an environment that invites calmness and clarity. Whether you're furnishing your living room, bedroom, or office, each piece in the ModernSerenity collection is designed to elevate your space while maintaining an effortless, uncluttered aesthetic.\n\nCrafted with the finest materials, ModernSerenity products are built to last and are designed with both beauty and practicality in mind. From soft, inviting fabrics to sleek, functional shapes, every detail has been thoughtfully considered to enhance your lifestyle. With a focus on smart design, ModernSerenity delivers a timeless sense of peace and elegance, making it the ideal choice for anyone looking to create a sophisticated, serene home.\n\nKey Features:\n\nSleek, minimalist design for a calm and tranquil environment\nHigh-quality materials for durability and comfort\nNeutral tones and soft textures that complement any decor\nPerfect for creating a serene, modern living space\nIdeal for individuals seeking balance and relaxation in their home or office\nTransform your space with ModernSerenity—where contemporary design meets peaceful living. Create a home that reflects your sense of style and inner calm.","productImage":{"asset":{"_id":"image-9074eb33bece6914927f6e78eb520d7b0695f77c-3715x2362-jpg","url":"https://cdn.sanity.io/images/ilhf9wt8/production/9074eb33bece6914927f6e78eb520d7b0695f77c-3715x2362.jpg"}},"price":480,"tags":["modern ","serenity ","peaceful ","contemporary ","furniture"]},{"discountPercentage":null,"isNew":false,"_id":"0e0ztuJY6NWdyblBETqB7f","title":"Reflective Haven","description":"Create a sanctuary of calm and introspection with ReflectiveHaven—a collection designed to bring peace, tranquility, and thoughtful elegance into your space. Inspired by serene environments and mindful living, ReflectiveHaven is perfect for those seeking a retreat from the hustle and bustle of everyday life. This collection invites you to slow down, reflect, and enjoy moments of stillness.\n\nThe pieces in the ReflectiveHaven collection are designed with clean lines, soothing tones, and a harmonious blend of textures that foster a sense of balance and serenity. From minimalist furniture to subtle decorative accents, each item is thoughtfully crafted to create an atmosphere that encourages mindfulness and personal reflection. The calming neutral hues, natural materials, and understated beauty make it easy to turn any room into a peaceful haven.\n\nPerfect for meditation spaces, cozy reading nooks, or tranquil bedrooms, ReflectiveHaven brings a sense of clarity and inner peace to your home. It’s for those who value simplicity, balance, and the ability to create an environment that nurtures both mental clarity and physical relaxation.\n\nKey Features:\n\nMinimalist design with a focus on calm, neutral tones and natural materials\nHigh-quality craftsmanship for lasting beauty and durability\nPerfect for creating peaceful, reflective spaces within your home\nIdeal for meditation, relaxation, or simply unwinding after a long day\nInvites mindfulness and inner peace with every detail\nTransform your living space into a peaceful retreat with ReflectiveHaven—where serene design meets mindful living, creating a sanctuary for reflection and relaxation.","productImage":{"asset":{"_id":"image-1d164807717fdbc56142a73f3dec82fea98d12e5-3902x5853-jpg","url":"https://cdn.sanity.io/images/ilhf9wt8/production/1d164807717fdbc56142a73f3dec82fea98d12e5-3902x5853.jpg"}},"price":300,"tags":["reflective ","haven ","contemporary ","modern ","decor"]},{"description":"Sink into comfort with the Cloud Haven Chair—where softness meets support in a beautifully designed piece that feels like a personal retreat. Inspired by the gentle, calming presence of clouds, this chair offers an ultra-comfortable, inviting experience that lets you relax and unwind, making it the perfect addition to any living room, bedroom, or cozy nook.\n\nThe Cloud Haven Chair is crafted with premium materials that create a plush, cloud-like seating experience. Its luxurious cushioning provides gentle support, cradling you in comfort while the ergonomic design ensures the perfect balance between relaxation and posture. The chair’s sleek, modern lines and soft, neutral tones blend seamlessly into any decor, adding a touch of sophistication and tranquility to your space.\n\nWhether you’re enjoying a good book, meditating, or simply relaxing after a long day, the Cloud Haven Chair creates a peaceful sanctuary where you can escape into serenity. Its durable construction guarantees lasting comfort and style, while its cloud-inspired design brings a sense of lightness and ease to your home.\n\nKey Features:\n\nUltra-soft, cloud-like cushioning for a relaxing seating experience\nErgonomically designed for optimal comfort and support\nSleek, modern design that complements a variety of home decor styles\nCrafted from high-quality materials for durability and long-lasting comfort\nPerfect for creating a peaceful, inviting space in any room\nTransform your living space into a serene haven with the Cloud Haven Chair—where comfort and style come together to create the ultimate relaxation experience.","productImage":{"asset":{"_id":"image-78683aab6c58d367f91e411fbe2aea5f06a9a9b7-3264x4902-jpg","url":"https://cdn.sanity.io/images/ilhf9wt8/production/78683aab6c58d367f91e411fbe2aea5f06a9a9b7-3264x4902.jpg"}},"price":230,"tags":["cloud ","chair ","comfy ","home decor","modern furniture"],"discountPercentage":null,"isNew":false,"_id":"BQj9k9W1Mf2GlcuUg4fOFd","title":"Cloud Haven Chair"},{"description":"Introducing Syltherine – the ultimate fusion of elegance and power. Crafted for those who demand exceptional performance, Syltherine is a premium product designed to elevate your experience to the next level. Whether you're seeking innovation, beauty, or unmatched durability, Syltherine offers all this and more.\n\nThis cutting-edge solution stands at the intersection of advanced technology and refined aesthetics. Its sleek design, combined with carefully selected materials, promises not only a visually stunning appearance but also long-lasting reliability. Whether you are using Syltherine for professional tasks or personal indulgence, it delivers with precision, speed, and unmatched performance.\n\nPerfectly balanced to meet the needs of modern users, Syltherine is intuitive and easy to use, providing a seamless experience from start to finish. It boasts a variety of features to ensure that you stay ahead of the curve, whether it’s smart integration, energy efficiency, or superior functionality.\n\nExperience the future of performance with Syltherine—where luxury meets innovation, and every detail is engineered for perfection. Make Syltherine your go-to choice for an unparalleled experience today.\n\nKey Features:\n\nSuperior performance and precision\nSleek, modern design\nBuilt for durability and long-lasting use\nEasy integration and seamless user experience\nIdeal for both professionals and personal use\nElevate your standards with Syltherine—where every moment is enhanced by innovation.","productImage":{"asset":{"_id":"image-fd34380db5561bddee83ba8fad1601efef20bfe9-285x301-png","url":"https://cdn.sanity.io/images/ilhf9wt8/production/fd34380db5561bddee83ba8fad1601efef20bfe9-285x301.png"}},"price":200,"tags":["living","fancy","elegance ","desgin"],"discountPercentage":null,"isNew":false,"_id":"BQj9k9W1Mf2GlcuUg4fORV","title":"Syltherine"},{"tags":["retro ","vintage ","furniture ","modern ","decor"],"discountPercentage":null,"isNew":false,"_id":"BQj9k9W1Mf2GlcuUg4fSDx","title":"Retro Vibe","description":"Introducing RetroVibe—a perfect blend of vintage charm and modern style, designed for those who appreciate timeless aesthetics with a contemporary twist. Inspired by the bold designs and vibrant colors of the past, RetroVibe brings a nostalgic yet fresh vibe to any space, infusing your home with character and flair.\n\nCrafted with meticulous attention to detail, RetroVibe combines classic materials and distinctive design elements to create a standout piece that enhances your living space. From its sleek lines to its unique color palette, every aspect of RetroVibe is carefully crafted to evoke the spirit of retro design while seamlessly fitting into today’s modern interiors.\n\nWhether you’re decorating a living room, bedroom, or workspace, RetroVibe serves as a conversation starter and a statement piece. Its versatility allows it to complement a variety of decor styles, from mid-century modern to eclectic and contemporary. The perfect way to add a touch of nostalgia and style, RetroVibe is ideal for those who love vintage aesthetics with a modern twist.\n\nKey Features:\n\nRetro-inspired design with modern touches\nBold color palette and classic materials that evoke nostalgia\nHigh-quality craftsmanship for durability and lasting appeal\nVersatile style that complements various home decor themes\nIdeal for creating a fun, stylish, and unique atmosphere\nBring back the charm of the past with RetroVibe—where classic design meets contemporary flair. Perfect for those who love a dash of nostalgia in their modern home.\n","productImage":{"asset":{"_id":"image-6e986db673401a7d253e8bdee86aceb4b71b4895-4144x4144-jpg","url":"https://cdn.sanity.io/images/ilhf9wt8/production/6e986db673401a7d253e8bdee86aceb4b71b4895-4144x4144.jpg"}},"price":340},{"price":550,"tags":["tropical ","vibe ","furniture ","exotic ","decor"],"discountPercentage":null,"isNew":false,"_id":"BQj9k9W1Mf2GlcuUg4fUlF","title":"Tropical Vibe","description":"Escape to paradise with TropicalVibe—a collection that brings the vibrant energy of the tropics right into your home. Inspired by lush landscapes, warm sunshine, and vibrant colors, TropicalVibe offers a refreshing, tropical-inspired aesthetic that creates a relaxed and inviting atmosphere in any space.\n\nDesigned for those who dream of a laid-back, vacation-like ambiance, TropicalVibe captures the essence of island living with its lively prints, natural textures, and bold colors. Whether you're looking to add a touch of the tropics to your living room, bedroom, or outdoor patio, TropicalVibe seamlessly infuses any area with a sense of adventure and tranquility.\n\nCrafted from high-quality materials, each piece in the TropicalVibe collection is both durable and stylish. The collection features elements such as leafy motifs, rattan finishes, and tropical florals that effortlessly capture the spirit of tropical destinations. Whether you’re lounging in your living room or hosting an outdoor gathering, TropicalVibe creates the perfect backdrop for relaxation and good vibes.\n\nKey Features:\n\nTropical-inspired designs that evoke warmth and relaxation\nLush colors, natural textures, and island-inspired prints\nHigh-quality materials for comfort, durability, and style\nPerfect for creating a vacation-like ambiance in any room or outdoor space\nIdeal for those who love bold, vibrant, and nature-infused decor\nBring the beauty and energy of the tropics into your home with TropicalVibe—where island-inspired design meets everyday comfort and style. Let every day feel like a getaway.","productImage":{"asset":{"_id":"image-9dd7acc17365cd290757246a27b64a3d817cbe13-5501x3095-jpg","url":"https://cdn.sanity.io/images/ilhf9wt8/production/9dd7acc17365cd290757246a27b64a3d817cbe13-5501x3095.jpg"}}},{"_id":"BQj9k9W1Mf2GlcuUg4fVvx","title":"Sunny Chic","description":"Embrace the warmth of style with SunnyChic—a vibrant and contemporary collection designed to bring the cheerful essence of sunshine and chic elegance to your home. Whether you're brightening up a living room, bedroom, or outdoor space, SunnyChic infuses every corner with a refreshing burst of energy and a touch of sophisticated charm.\n\nInspired by the warmth of sunny days and the laid-back yet stylish vibe of coastal living, SunnyChic features bold colors, light fabrics, and breezy designs that capture the spirit of summer all year round. From sunny yellows and soft neutrals to playful patterns and textures, this collection effortlessly combines comfort with trendsetting design, creating spaces that feel both lively and inviting.\n\nCrafted from high-quality materials, SunnyChic is designed for those who appreciate a modern and cheerful aesthetic without sacrificing comfort. The collection offers a perfect balance of casual elegance and bright appeal, making it an ideal choice for those who love to incorporate light, airy tones and a touch of playfulness into their decor.\n\nKey Features:\n\nBright, bold colors and breezy designs inspired by sunny, coastal living\nHigh-quality materials that are both durable and comfortable\nA versatile collection perfect for living rooms, bedrooms, or outdoor spaces\nCombines chic style with a relaxed, welcoming atmosphere\nIdeal for those looking to add a refreshing, cheerful touch to their home\nFill your home with the light and energy of SunnyChic—where sunshine meets style for a lively and sophisticated living experience. Make every day feel like a sunlit escape.","productImage":{"asset":{"_id":"image-ed5874fb4498ee4ff897075bad504056cb87388c-4000x3907-jpg","url":"https://cdn.sanity.io/images/ilhf9wt8/production/ed5874fb4498ee4ff897075bad504056cb87388c-4000x3907.jpg"}},"price":400,"tags":["sunny ","chic ","modern ","elegant ","furniture"],"discountPercentage":null,"isNew":false},{"title":"Rustic Vase Set","description":"Bring the charm of nature into your home with the Rustic Vase Set. Perfect for those who appreciate timeless beauty and a warm, inviting atmosphere, this set of vases adds a touch of rustic elegance to any space. Crafted with care and attention to detail, these vases are designed to evoke the essence of vintage craftsmanship while seamlessly complementing both modern and traditional decor styles.\n\nThe Rustic Vase Set features a collection of three uniquely designed vases, each with its own character. Their earthy tones, textured finishes, and artisanal touch capture the essence of the countryside, making them ideal for showcasing fresh flowers, dried arrangements, or simply as stand-alone decor pieces. Whether placed on a mantel, coffee table, or dining area, these vases effortlessly enhance the ambiance of your home.\n\nMade from high-quality materials, the Rustic Vase Set offers both style and durability. The natural, imperfect surfaces of the vases give them a distinct, hand-crafted appeal, ensuring that each set is one-of-a-kind. With their timeless design, these vases make a perfect gift for housewarmings, weddings, or any special occasion.\n\nKey Features:\n\nSet includes three uniquely designed rustic vases\nCrafted from high-quality materials with a natural, hand-crafted finish\nPerfect for displaying flowers, greenery, or as standalone decorative pieces\nVersatile design complements both modern and traditional interiors\nIdeal for gifting or personal use in any living space\nAdd warmth and character to your home with the Rustic Vase Set—where classic design meets natural beauty.","productImage":{"asset":{"_id":"image-2219cafc285ec13a2ed3f88aa36cbea852a11735-305x375-png","url":"https://cdn.sanity.io/images/ilhf9wt8/production/2219cafc285ec13a2ed3f88aa36cbea852a11735-305x375.png"}},"price":210,"tags":["rustic ","vase ","home decor","vintage ","interior design"],"discountPercentage":null,"isNew":false,"_id":"YjFIo1g1LQZHJZg27Paovr"},{"tags":["wooden ","craftsmanship ","furniture ","modern ","nature inspired"],"discountPercentage":null,"isNew":false,"_id":"YjFIo1g1LQZHJZg27Pap1V","title":"Timber Craft","description":"Introducing TimberCraft—a collection that celebrates the timeless beauty of wood craftsmanship and the art of nature’s finest materials. Inspired by the rustic charm and durability of natural wood, TimberCraft brings warmth, character, and a touch of handcrafted elegance to any space. Perfect for those who value authenticity and sustainability, this collection combines the strength of timber with refined design, making it the ideal choice for modern and traditional homes alike.\n\nEach piece in the TimberCraft collection is meticulously crafted to highlight the unique grains and textures of the wood, bringing an organic, earthy feel to your space. Whether you're looking for furniture, decor, or accents, TimberCraft offers a variety of beautifully designed pieces that blend rustic appeal with contemporary sophistication. The collection is designed to stand the test of time, with materials chosen for their durability and lasting beauty.\n\nTimberCraft is perfect for those who appreciate quality, craftsmanship, and the enduring beauty of wood. From striking tables and chairs to decorative accessories, this collection adds a natural elegance to any room, transforming your living area into a warm and welcoming retreat.\n\nKey Features:\n\nMade from high-quality, sustainable timber for durability and lasting appeal\nRustic yet refined design that complements both modern and traditional interiors\nUnique wood grains and textures that bring natural beauty to your space\nExpert craftsmanship that highlights the authenticity of each piece\nPerfect for creating a cozy, earthy atmosphere in any room\nBring the timeless charm of nature into your home with TimberCraft—where the beauty of wood meets masterful craftsmanship, creating lasting pieces that stand out in both style and substance.","productImage":{"asset":{"_id":"image-35a8072e40a8b80142ff8e96e0f3af21811f5b9f-3264x4928-jpg","url":"https://cdn.sanity.io/images/ilhf9wt8/production/35a8072e40a8b80142ff8e96e0f3af21811f5b9f-3264x4928.jpg"}},"price":320},{"discountPercentage":null,"isNew":true,"_id":"YjFIo1g1LQZHJZg27Pap6L","title":"Amber Haven","description":"Step into a world of warmth and tranquility with Amber Haven—a collection inspired by the golden glow and timeless beauty of amber. This sophisticated line combines the soothing hues of amber with elegant, contemporary design to create a space that feels both welcoming and luxurious. Ideal for those seeking a serene escape, Amber Haven infuses your home with a sense of calm, warmth, and understated elegance.\n\nCrafted with high-quality materials and a keen eye for detail, each piece in the Amber Haven collection is designed to evoke feelings of comfort and relaxation. The soft, amber-toned accents, paired with sleek lines and refined craftsmanship, bring a touch of nature’s beauty into your home. Whether you're furnishing your living room, bedroom, or dining space, Amber Haven creates an inviting atmosphere that radiates peace and sophistication.\n\nThe collection’s warmth and versatility allow it to seamlessly integrate into various décor styles, from modern to traditional, making it a perfect choice for those who love both timeless elegance and contemporary flair. Amber Haven offers a sanctuary of comfort and luxury, where every piece is designed to enhance your home and your well-being.\n\nKey Features:\n\nWarm amber tones and elegant design create a cozy, inviting ambiance\nHigh-quality craftsmanship and materials ensure durability and long-lasting appeal\nVersatile style complements a variety of interior designs, from modern to traditional\nPerfect for creating a serene and luxurious space in any room\nIdeal for those seeking a combination of beauty, comfort, and sophistication\nBring the golden glow of Amber Haven into your home—where warmth, luxury, and timeless design come together to create a peaceful and elegant retreat.","productImage":{"asset":{"_id":"image-d85aa7d13ed4a7f06e46c153928620b48d89729f-5029x3353-jpg","url":"https://cdn.sanity.io/images/ilhf9wt8/production/d85aa7d13ed4a7f06e46c153928620b48d89729f-5029x3353.jpg"}},"price":150,"tags":["amber ","luxury ","cozy ","elegant ","furniture"]},{"title":"Bright Space","description":"Welcome to BrightSpace—a collection designed to infuse your home with light, energy, and vibrancy. Inspired by the power of natural light and open spaces, BrightSpace brings a fresh, airy feel to any room. Whether you're looking to brighten your living area, create an inspiring workspace, or transform your bedroom into a peaceful retreat, BrightSpace offers the perfect blend of style and function to make your environment feel open and inviting.\n\nFeaturing clean lines, light hues, and functional designs, BrightSpace is all about creating a positive, uplifting atmosphere. Each piece is carefully crafted to enhance the flow of light, with materials that reflect brightness and encourage a sense of openness. The collection brings a modern, minimalist approach that allows your space to feel more expansive, whether through large windows, reflective surfaces, or light furniture choices.\n\nIdeal for those who appreciate a modern, fresh aesthetic with a focus on natural light, BrightSpace is perfect for those looking to create a lively yet serene environment. Whether you’re decorating a home office, living room, or sun-drenched dining area, this collection is designed to bring clarity and vibrancy to any space.\n\nKey Features:\n\nDesigned to enhance natural light and create an open, airy feel\nClean, minimalist lines that complement modern spaces\nLight, neutral tones and reflective surfaces for a bright atmosphere\nCrafted with quality materials for durability and lasting appeal\nPerfect for creating a vibrant, positive space in your home or office\nTransform your home into a bright, inviting haven with BrightSpace—where light, style, and functionality come together to create the perfect environment.","productImage":{"asset":{"_id":"image-d32066d0882c1632e027b053564115ed460e09eb-3393x5090-jpg","url":"https://cdn.sanity.io/images/ilhf9wt8/production/d32066d0882c1632e027b053564115ed460e09eb-3393x5090.jpg"}},"price":180,"tags":["bright ","space ","minimalistic ","modern ","decor"],"discountPercentage":null,"isNew":false,"_id":"YjFIo1g1LQZHJZg27PapIR"},{"title":"Vase Set","description":"Elevate your home decor with the timeless beauty of the Vase Set. Designed to complement any interior style, this carefully curated set of vases brings a touch of elegance and sophistication to your living space. Whether you’re looking to display fresh flowers, dried arrangements, or simply add a decorative accent, the Vase Set offers versatile options to enhance any room.\n\nCrafted from premium materials, each vase in the set features a unique design, ranging from sleek and modern to classic and traditional. The thoughtful mix of shapes, sizes, and finishes makes this set ideal for creating eye-catching displays in your home or office. Place them together for a coordinated look or spread them throughout different spaces for a cohesive, stylish touch.\n\nThe Vase Set is not just about aesthetic appeal—it’s also about quality and durability. Each piece is designed with precision, ensuring that the vases maintain their beauty for years to come. Whether you're gifting this set for a special occasion or adding it to your own home, it is sure to be a cherished piece that adds charm and character to any setting.\n\nKey Features:\n\nIncludes multiple vases with varying shapes and sizes\nPerfect for displaying flowers, plants, or as standalone decor\nHigh-quality materials for long-lasting beauty and durability\nVersatile design complements a wide range of interior styles\nIdeal for both gifting and personal use\nEnhance your space with the Vase Set—a blend of elegance, quality, and timeless design that transforms any room into a haven of beauty.","productImage":{"asset":{"_id":"image-8795ff7bdb3d810dbe0c3eb52cd22116c9115bce-305x375-png","url":"https://cdn.sanity.io/images/ilhf9wt8/production/8795ff7bdb3d810dbe0c3eb52cd22116c9115bce-305x375.png"}},"price":150,"tags":["vase ","decor ","interior design ","elegant","home "],"discountPercentage":null,"isNew":false,"_id":"YjFIo1g1LQZHJZg27PapMT"},{"price":250,"tags":["bed ","furniture ","sleep ","cozy ","modern"],"discountPercentage":null,"isNew":true,"_id":"YjFIo1g1LQZHJZg27PapdP","title":"Bed","description":"Introducing the Bed—your sanctuary for rest and relaxation, designed with both comfort and style in mind. This timeless piece is crafted to transform your bedroom into a peaceful retreat, offering a perfect balance of support, elegance, and durability. Whether you're outfitting a master bedroom or a guest room, the Bed ensures that every night is filled with restful sleep and every morning starts with ease.\n\nConstructed from high-quality materials, the Bed provides both sturdy support and luxurious comfort. The frame features sleek lines and a minimalist design, making it an ideal choice for a variety of interior styles, from modern to traditional. The soft yet supportive surface ensures that you can unwind in ultimate comfort, while the sturdy foundation provides long-lasting durability.\n\nDesigned for those who appreciate both aesthetics and practicality, the Bed is a versatile addition to any bedroom. Its clean design, quality craftsmanship, and functional features create an inviting space where you can rest, recharge, and enjoy your most restful nights.\n\nKey Features:\n\nHigh-quality construction for durability and long-lasting support\nSleek, minimalist design that fits into a wide range of bedroom styles\nComfortable and supportive surface for a restful night's sleep\nPerfect for master bedrooms, guest rooms, or smaller spaces\nBuilt with attention to detail for both beauty and practicality\nTransform your bedroom into a restful haven with the Bed—where style, comfort, and functionality meet to create the ultimate space for relaxation and rejuvenation.","productImage":{"asset":{"_id":"image-b6551d6252d30e222875fbcd5d91c6edca324a1d-3518x3238-jpg","url":"https://cdn.sanity.io/images/ilhf9wt8/production/b6551d6252d30e222875fbcd5d91c6edca324a1d-3518x3238.jpg"}}},{"price":100,"tags":["wood ","chair ","furniture ","classic ","rustic"],"discountPercentage":null,"isNew":false,"_id":"YjFIo1g1LQZHJZg27Papn5","title":"Wood Chair","description":"Introducing the Wood Chair—a beautifully crafted piece that blends timeless simplicity with natural elegance. Designed to bring warmth and character to any room, the Wood Chair is perfect for those who appreciate the beauty of wood and the durability of a well-made, functional chair. Whether you're adding a seating option to your dining room, office, or living area, this chair offers both style and comfort.\n\nCrafted from high-quality, sustainably sourced wood, the Wood Chair showcases the natural grain and texture of the wood, making each piece unique. Its clean lines and minimalist design highlight the inherent beauty of the material, allowing it to seamlessly complement a wide range of decor styles, from rustic and traditional to modern and contemporary.\n\nNot just a piece of furniture, the Wood Chair is built for comfort and practicality. Its sturdy construction provides reliable support, while the simple yet stylish design ensures it remains a staple in your home for years to come.\n\nKey Features:\n\nMade from high-quality, sustainably sourced wood for durability and style\nClean, minimalist design that complements a variety of decor styles\nComfortable seating and sturdy construction for everyday use\nNatural wood grain and texture make each chair unique\nVersatile design perfect for dining rooms, offices, or casual seating areas\nAdd a touch of natural elegance to your space with the Wood Chair—where timeless design meets functionality for a comfortable and stylish seating experience.","productImage":{"asset":{"_id":"image-2c7c233904e6c98e27a2156dce5f008b1554d25d-2831x3534-jpg","url":"https://cdn.sanity.io/images/ilhf9wt8/production/2c7c233904e6c98e27a2156dce5f008b1554d25d-2831x3534.jpg"}}},{"price":340,"tags":["retro ","vintage ","furniture ","modern ","decor"],"discountPercentage":null,"isNew":false,"_id":"YjFIo1g1LQZHJZg27Papsj","title":"Retro Vibe","description":"Introducing RetroVibe—a perfect blend of vintage charm and modern style, designed for those who appreciate timeless aesthetics with a contemporary twist. Inspired by the bold designs and vibrant colors of the past, RetroVibe brings a nostalgic yet fresh vibe to any space, infusing your home with character and flair.\n\nCrafted with meticulous attention to detail, RetroVibe combines classic materials and distinctive design elements to create a standout piece that enhances your living space. From its sleek lines to its unique color palette, every aspect of RetroVibe is carefully crafted to evoke the spirit of retro design while seamlessly fitting into today’s modern interiors.\n\nWhether you’re decorating a living room, bedroom, or workspace, RetroVibe serves as a conversation starter and a statement piece. Its versatility allows it to complement a variety of decor styles, from mid-century modern to eclectic and contemporary. The perfect way to add a touch of nostalgia and style, RetroVibe is ideal for those who love vintage aesthetics with a modern twist.\n\nKey Features:\n\nRetro-inspired design with modern touches\nBold color palette and classic materials that evoke nostalgia\nHigh-quality craftsmanship for durability and lasting appeal\nVersatile style that complements various home decor themes\nIdeal for creating a fun, stylish, and unique atmosphere\nBring back the charm of the past with RetroVibe—where classic design meets contemporary flair. Perfect for those who love a dash of nostalgia in their modern home.\n","productImage":{"asset":{"_id":"image-6e986db673401a7d253e8bdee86aceb4b71b4895-4144x4144-jpg","url":"https://cdn.sanity.io/images/ilhf9wt8/production/6e986db673401a7d253e8bdee86aceb4b71b4895-4144x4144.jpg"}}},{"productImage":{"asset":{"_id":"image-73e36a9afc074b751d9f2693d2b251ba12b36276-3433x3064-jpg","url":"https://cdn.sanity.io/images/ilhf9wt8/production/73e36a9afc074b751d9f2693d2b251ba12b36276-3433x3064.jpg"}},"price":250,"tags":["zen ","table ","furniture ","calm ","minimalistic"],"discountPercentage":null,"isNew":true,"_id":"YjFIo1g1LQZHJZg27Paq8r","title":"Zen Table","description":"Introduce tranquility and balance into your home with ZenTable—a beautifully crafted piece designed to inspire mindfulness, serenity, and effortless elegance. Inspired by the peaceful aesthetics of Zen design, this table serves as a functional centerpiece while fostering a calm, meditative atmosphere in any room. Perfect for modern homes or spaces dedicated to relaxation, ZenTable brings a sense of harmony and simplicity that enhances your daily life.\n\nCrafted with clean lines, natural materials, and subtle detailing, ZenTable captures the essence of minimalist beauty. Its simple yet striking design allows it to seamlessly integrate into a variety of interiors, whether placed in the living room, office, or meditation space. The ZenTable is built with both form and function in mind—offering a sturdy, durable surface while maintaining an elegant and soothing appearance.\n\nWhether used as a coffee table, a focal point in your meditation room, or a sleek accent in your living space, ZenTable encourages a peaceful, balanced environment. Its understated design creates an inviting atmosphere where you can reflect, unwind, and enjoy life's simpler moments.\n\nKey Features:\n\nMinimalist, Zen-inspired design that fosters peace and tranquility\nCrafted from high-quality natural materials for durability and elegance\nSimple, clean lines that complement modern and traditional interiors\nVersatile use in living rooms, offices, or meditation spaces\nEncourages balance and serenity, perfect for mindfulness practices\nCreate a calming and harmonious space with ZenTable—where design meets tranquility, making every moment of your day more peaceful and centered."},{"isNew":false,"_id":"YjFIo1g1LQZHJZg27PaqEV","title":"Tropical Vibe","description":"Escape to paradise with TropicalVibe—a collection that brings the vibrant energy of the tropics right into your home. Inspired by lush landscapes, warm sunshine, and vibrant colors, TropicalVibe offers a refreshing, tropical-inspired aesthetic that creates a relaxed and inviting atmosphere in any space.\n\nDesigned for those who dream of a laid-back, vacation-like ambiance, TropicalVibe captures the essence of island living with its lively prints, natural textures, and bold colors. Whether you're looking to add a touch of the tropics to your living room, bedroom, or outdoor patio, TropicalVibe seamlessly infuses any area with a sense of adventure and tranquility.\n\nCrafted from high-quality materials, each piece in the TropicalVibe collection is both durable and stylish. The collection features elements such as leafy motifs, rattan finishes, and tropical florals that effortlessly capture the spirit of tropical destinations. Whether you’re lounging in your living room or hosting an outdoor gathering, TropicalVibe creates the perfect backdrop for relaxation and good vibes.\n\nKey Features:\n\nTropical-inspired designs that evoke warmth and relaxation\nLush colors, natural textures, and island-inspired prints\nHigh-quality materials for comfort, durability, and style\nPerfect for creating a vacation-like ambiance in any room or outdoor space\nIdeal for those who love bold, vibrant, and nature-infused decor\nBring the beauty and energy of the tropics into your home with TropicalVibe—where island-inspired design meets everyday comfort and style. Let every day feel like a getaway.","productImage":{"asset":{"_id":"image-9dd7acc17365cd290757246a27b64a3d817cbe13-5501x3095-jpg","url":"https://cdn.sanity.io/images/ilhf9wt8/production/9dd7acc17365cd290757246a27b64a3d817cbe13-5501x3095.jpg"}},"price":550,"tags":["tropical ","vibe ","furniture ","exotic ","decor"],"discountPercentage":null},{"productImage":{"asset":{"_id":"image-b7565060672485ede215bbbbb4d6b063b1a83b49-3024x4032-jpg","url":"https://cdn.sanity.io/images/ilhf9wt8/production/b7565060672485ede215bbbbb4d6b063b1a83b49-3024x4032.jpg"}},"price":300,"tags":["sleek ","modern ","elegant","furniture ","living "],"discountPercentage":null,"isNew":true,"_id":"YjFIo1g1LQZHJZg27PaqK9","title":"Sleek Living","description":"Welcome to SleekLiving, where modern sophistication meets functional design for the ultimate living experience. Crafted for those who value style, convenience, and innovation, SleekLiving is a collection of premium home essentials that redefine the way you live. With an emphasis on minimalism and elegance, every product in the SleekLiving line is engineered to bring a refined touch to your home without compromising on performance or comfort.\n\nSleekLiving is all about transforming your space into a sanctuary of calm and sophistication. Featuring clean lines, contemporary aesthetics, and cutting-edge functionality, this collection offers versatile solutions for every room in your home. Whether you're upgrading your living room, kitchen, bedroom, or office, SleekLiving effortlessly blends into any decor, offering you the freedom to create a space that reflects your unique style.\n\nDesigned with the modern homeowner in mind, SleekLiving products are not just about looks—they are built for practicality and ease of use. Each item is thoughtfully crafted using high-quality materials that ensure durability and long-lasting performance. From smart furniture solutions to stylish accessories, SleekLiving brings together the best of contemporary design with everyday functionality.\n\nKey Features:\n\nModern, minimalist design that enhances any living space\nVersatile range of products for every room in your home\nHigh-quality materials for durability and long-lasting performance\nInnovative features that combine form and function\nPerfect for those who appreciate style and practicality\nTransform your home into a sleek, stylish haven with SleekLiving—where contemporary design meets everyday convenience."},{"_id":"YjFIo1g1LQZHJZg27PaqX3","title":"Nordic Elegance","description":"Elevate your space with Nordic Elegance—a collection that brings the minimalist beauty and understated sophistication of Scandinavian design into your home. Inspired by the serene landscapes and functional aesthetics of Nordic regions, this collection offers timeless pieces that blend clean lines, natural materials, and a refined simplicity to create a peaceful and inviting atmosphere.\n\nCrafted with precision and attention to detail, Nordic Elegance celebrates the beauty of light, airy spaces, and the harmony between form and function. Each piece is designed to be both practical and visually appealing, combining functionality with refined, minimalist elegance. Whether you are outfitting your living room, bedroom, or home office, the Nordic Elegance collection creates a sophisticated yet relaxed vibe that suits any modern interior.\n\nWith natural wood finishes, neutral tones, and soft textures, Nordic Elegance fosters a sense of calm and tranquility, making it the perfect choice for those who value simplicity and quality. Ideal for creating a serene, clutter-free space, this collection is a true reflection of Scandinavian design principles: clean, functional, and beautifully crafted.\n\nKey Features:\n\nMinimalist, Scandinavian-inspired design that emphasizes simplicity and functionality\nCrafted from natural materials like wood, stone, and soft textiles for a warm, inviting feel\nLight, neutral color palette that complements various interior styles\nHigh-quality craftsmanship for lasting beauty and durability\nIdeal for creating a peaceful, elegant environment in any room\nBring the peaceful elegance of Nordic design into your home with Nordic Elegance—where simplicity, quality, and style unite to create the ultimate atmosphere of calm and sophistication.","productImage":{"asset":{"_id":"image-c371d0a7592905e368cf906ccc918d41033e7a85-4140x5520-jpg","url":"https://cdn.sanity.io/images/ilhf9wt8/production/c371d0a7592905e368cf906ccc918d41033e7a85-4140x5520.jpg"}},"price":280,"tags":["nordic ","elegance ","furniture ","minimalistic ","modern"],"discountPercentage":null,"isNew":false},{"description":"Embrace the warmth of style with SunnyChic—a vibrant and contemporary collection designed to bring the cheerful essence of sunshine and chic elegance to your home. Whether you're brightening up a living room, bedroom, or outdoor space, SunnyChic infuses every corner with a refreshing burst of energy and a touch of sophisticated charm.\n\nInspired by the warmth of sunny days and the laid-back yet stylish vibe of coastal living, SunnyChic features bold colors, light fabrics, and breezy designs that capture the spirit of summer all year round. From sunny yellows and soft neutrals to playful patterns and textures, this collection effortlessly combines comfort with trendsetting design, creating spaces that feel both lively and inviting.\n\nCrafted from high-quality materials, SunnyChic is designed for those who appreciate a modern and cheerful aesthetic without sacrificing comfort. The collection offers a perfect balance of casual elegance and bright appeal, making it an ideal choice for those who love to incorporate light, airy tones and a touch of playfulness into their decor.\n\nKey Features:\n\nBright, bold colors and breezy designs inspired by sunny, coastal living\nHigh-quality materials that are both durable and comfortable\nA versatile collection perfect for living rooms, bedrooms, or outdoor spaces\nCombines chic style with a relaxed, welcoming atmosphere\nIdeal for those looking to add a refreshing, cheerful touch to their home\nFill your home with the light and energy of SunnyChic—where sunshine meets style for a lively and sophisticated living experience. Make every day feel like a sunlit escape.","productImage":{"asset":{"_id":"image-ed5874fb4498ee4ff897075bad504056cb87388c-4000x3907-jpg","url":"https://cdn.sanity.io/images/ilhf9wt8/production/ed5874fb4498ee4ff897075bad504056cb87388c-4000x3907.jpg"}},"price":400,"tags":["sunny ","chic ","modern ","elegant ","furniture"],"discountPercentage":null,"isNew":false,"_id":"YjFIo1g1LQZHJZg27Pasct","title":"Sunny Chic"},{"description":"Introducing TimberCraft—a collection that celebrates the timeless beauty of wood craftsmanship and the art of nature’s finest materials. Inspired by the rustic charm and durability of natural wood, TimberCraft brings warmth, character, and a touch of handcrafted elegance to any space. Perfect for those who value authenticity and sustainability, this collection combines the strength of timber with refined design, making it the ideal choice for modern and traditional homes alike.\n\nEach piece in the TimberCraft collection is meticulously crafted to highlight the unique grains and textures of the wood, bringing an organic, earthy feel to your space. Whether you're looking for furniture, decor, or accents, TimberCraft offers a variety of beautifully designed pieces that blend rustic appeal with contemporary sophistication. The collection is designed to stand the test of time, with materials chosen for their durability and lasting beauty.\n\nTimberCraft is perfect for those who appreciate quality, craftsmanship, and the enduring beauty of wood. From striking tables and chairs to decorative accessories, this collection adds a natural elegance to any room, transforming your living area into a warm and welcoming retreat.\n\nKey Features:\n\nMade from high-quality, sustainable timber for durability and lasting appeal\nRustic yet refined design that complements both modern and traditional interiors\nUnique wood grains and textures that bring natural beauty to your space\nExpert craftsmanship that highlights the authenticity of each piece\nPerfect for creating a cozy, earthy atmosphere in any room\nBring the timeless charm of nature into your home with TimberCraft—where the beauty of wood meets masterful craftsmanship, creating lasting pieces that stand out in both style and substance.","productImage":{"asset":{"_id":"image-35a8072e40a8b80142ff8e96e0f3af21811f5b9f-3264x4928-jpg","url":"https://cdn.sanity.io/images/ilhf9wt8/production/35a8072e40a8b80142ff8e96e0f3af21811f5b9f-3264x4928.jpg"}},"price":320,"tags":["wooden ","craftsmanship ","furniture ","modern ","nature inspired"],"discountPercentage":null,"isNew":false,"_id":"YjFIo1g1LQZHJZg27QhAJb","title":"Timber Craft"},{"tags":["amber ","luxury ","cozy ","elegant ","furniture"],"discountPercentage":null,"isNew":true,"_id":"YjFIo1g1LQZHJZg27QhAYv","title":"Amber Haven","description":"Step into a world of warmth and tranquility with Amber Haven—a collection inspired by the golden glow and timeless beauty of amber. This sophisticated line combines the soothing hues of amber with elegant, contemporary design to create a space that feels both welcoming and luxurious. Ideal for those seeking a serene escape, Amber Haven infuses your home with a sense of calm, warmth, and understated elegance.\n\nCrafted with high-quality materials and a keen eye for detail, each piece in the Amber Haven collection is designed to evoke feelings of comfort and relaxation. The soft, amber-toned accents, paired with sleek lines and refined craftsmanship, bring a touch of nature’s beauty into your home. Whether you're furnishing your living room, bedroom, or dining space, Amber Haven creates an inviting atmosphere that radiates peace and sophistication.\n\nThe collection’s warmth and versatility allow it to seamlessly integrate into various décor styles, from modern to traditional, making it a perfect choice for those who love both timeless elegance and contemporary flair. Amber Haven offers a sanctuary of comfort and luxury, where every piece is designed to enhance your home and your well-being.\n\nKey Features:\n\nWarm amber tones and elegant design create a cozy, inviting ambiance\nHigh-quality craftsmanship and materials ensure durability and long-lasting appeal\nVersatile style complements a variety of interior designs, from modern to traditional\nPerfect for creating a serene and luxurious space in any room\nIdeal for those seeking a combination of beauty, comfort, and sophistication\nBring the golden glow of Amber Haven into your home—where warmth, luxury, and timeless design come together to create a peaceful and elegant retreat.","productImage":{"asset":{"_id":"image-d85aa7d13ed4a7f06e46c153928620b48d89729f-5029x3353-jpg","url":"https://cdn.sanity.io/images/ilhf9wt8/production/d85aa7d13ed4a7f06e46c153928620b48d89729f-5029x3353.jpg"}},"price":150},{"productImage":{"asset":{"_id":"image-8795ff7bdb3d810dbe0c3eb52cd22116c9115bce-305x375-png","url":"https://cdn.sanity.io/images/ilhf9wt8/production/8795ff7bdb3d810dbe0c3eb52cd22116c9115bce-305x375.png"}},"price":150,"tags":["vase ","decor ","interior design ","elegant","home "],"discountPercentage":null,"isNew":false,"_id":"YjFIo1g1LQZHJZg27QhAyj","title":"Vase Set","description":"Elevate your home decor with the timeless beauty of the Vase Set. Designed to complement any interior style, this carefully curated set of vases brings a touch of elegance and sophistication to your living space. Whether you’re looking to display fresh flowers, dried arrangements, or simply add a decorative accent, the Vase Set offers versatile options to enhance any room.\n\nCrafted from premium materials, each vase in the set features a unique design, ranging from sleek and modern to classic and traditional. The thoughtful mix of shapes, sizes, and finishes makes this set ideal for creating eye-catching displays in your home or office. Place them together for a coordinated look or spread them throughout different spaces for a cohesive, stylish touch.\n\nThe Vase Set is not just about aesthetic appeal—it’s also about quality and durability. Each piece is designed with precision, ensuring that the vases maintain their beauty for years to come. Whether you're gifting this set for a special occasion or adding it to your own home, it is sure to be a cherished piece that adds charm and character to any setting.\n\nKey Features:\n\nIncludes multiple vases with varying shapes and sizes\nPerfect for displaying flowers, plants, or as standalone decor\nHigh-quality materials for long-lasting beauty and durability\nVersatile design complements a wide range of interior styles\nIdeal for both gifting and personal use\nEnhance your space with the Vase Set—a blend of elegance, quality, and timeless design that transforms any room into a haven of beauty."},{"tags":["wood ","chair ","furniture ","classic ","rustic"],"discountPercentage":null,"isNew":false,"_id":"YjFIo1g1LQZHJZg27QhDpL","title":"Wood Chair","description":"Introducing the Wood Chair—a beautifully crafted piece that blends timeless simplicity with natural elegance. Designed to bring warmth and character to any room, the Wood Chair is perfect for those who appreciate the beauty of wood and the durability of a well-made, functional chair. Whether you're adding a seating option to your dining room, office, or living area, this chair offers both style and comfort.\n\nCrafted from high-quality, sustainably sourced wood, the Wood Chair showcases the natural grain and texture of the wood, making each piece unique. Its clean lines and minimalist design highlight the inherent beauty of the material, allowing it to seamlessly complement a wide range of decor styles, from rustic and traditional to modern and contemporary.\n\nNot just a piece of furniture, the Wood Chair is built for comfort and practicality. Its sturdy construction provides reliable support, while the simple yet stylish design ensures it remains a staple in your home for years to come.\n\nKey Features:\n\nMade from high-quality, sustainably sourced wood for durability and style\nClean, minimalist design that complements a variety of decor styles\nComfortable seating and sturdy construction for everyday use\nNatural wood grain and texture make each chair unique\nVersatile design perfect for dining rooms, offices, or casual seating areas\nAdd a touch of natural elegance to your space with the Wood Chair—where timeless design meets functionality for a comfortable and stylish seating experience.","productImage":{"asset":{"_id":"image-2c7c233904e6c98e27a2156dce5f008b1554d25d-2831x3534-jpg","url":"https://cdn.sanity.io/images/ilhf9wt8/production/2c7c233904e6c98e27a2156dce5f008b1554d25d-2831x3534.jpg"}},"price":100},{"description":"Introducing The Lucky Lamp—a unique blend of charm, elegance, and positive energy designed to illuminate your home and bring good fortune into your life. This beautifully crafted lamp isn’t just a light source, it’s a symbol of prosperity and warmth, making it the perfect addition to any space that needs a touch of light and positivity.\n\nThe Lucky Lamp features a stunning design that combines modern aesthetics with a timeless appeal. Its soft glow creates a calming atmosphere, while its symbolic design is said to attract good luck, success, and harmony. Whether placed on a bedside table, desk, or living room console, The Lucky Lamp adds a touch of magic and tranquility to your surroundings.\n\nCrafted with high-quality materials and attention to detail, The Lucky Lamp is not only a functional lighting solution but also a decorative piece that enhances your space. Its versatile design complements various decor styles, from contemporary to traditional, making it an ideal fit for any room in your home or office.\n\nPerfect for gifting or adding a touch of positivity to your own home, The Lucky Lamp is a thoughtful way to spread good energy and light wherever it goes.\n\nKey Features:\n\nUnique design that symbolizes good luck, prosperity, and harmony\nSoft, warm light that creates a calming atmosphere\nHigh-quality materials for durability and lasting appeal\nVersatile and stylish design that complements any decor\nIdeal for gifting or personal use\nBring good fortune and illumination into your life with The Lucky Lamp—where light meets positivity and timeless design.","productImage":{"asset":{"_id":"image-c10750f3c15f8807251977fe5e042b0a6cee55ab-305x375-png","url":"https://cdn.sanity.io/images/ilhf9wt8/production/c10750f3c15f8807251977fe5e042b0a6cee55ab-305x375.png"}},"price":200,"tags":["lamp ","lucky ","decor ","lighting ","vintage"],"discountPercentage":null,"isNew":false,"_id":"YjFIo1g1LQZHJZg27QhDyD","title":"The Lucky Lamp"},{"title":"Pure Aura","description":"Experience the essence of tranquility and purity with PureAura—a collection designed to bring peace, balance, and sophistication to your living space. Inspired by the clarity of nature and the calm of serene environments, PureAura transforms any room into a haven of peaceful elegance, creating an atmosphere that invites relaxation and mindfulness.\n\nEach piece in the PureAura collection is thoughtfully crafted with an emphasis on minimalism and clean design, allowing you to create a calm, clutter-free environment. The collection features soft, neutral tones, gentle textures, and natural materials, all chosen to enhance the serenity and flow of your home. Whether you're furnishing your living room, bedroom, or meditation space, PureAura offers a subtle yet powerful presence that promotes well-being and inner peace.\n\nCrafted from high-quality materials, every item in the PureAura collection is designed for both beauty and durability. From soothing furniture to delicate decorative accents, PureAura creates a harmonious balance between style and simplicity, making it the perfect choice for anyone who values a peaceful, refined space.\n\nKey Features:\n\nMinimalist design with soft, neutral tones for a calming atmosphere\nCrafted from natural materials that enhance the sense of tranquility\nHigh-quality craftsmanship for lasting beauty and durability\nPerfect for creating a peaceful, serene home environment\nIdeal for meditation rooms, bedrooms, or any space that requires relaxation and balance\nElevate your home with PureAura—where simplicity meets elegance, creating an atmosphere of calm, clarity, and pure serenity. Let your space reflect the tranquility and balance that you deserve.","productImage":{"asset":{"_id":"image-db6d068faf67dab6145cadcd8e572944c6b9e935-3648x5472-jpg","url":"https://cdn.sanity.io/images/ilhf9wt8/production/db6d068faf67dab6145cadcd8e572944c6b9e935-3648x5472.jpg"}},"price":280,"tags":["pure ","modern ","elegance ","interior design","furniture"],"discountPercentage":null,"isNew":false,"_id":"YjFIo1g1LQZHJZg27QhEYV"},{"title":"Sleek Living","description":"Welcome to SleekLiving, where modern sophistication meets functional design for the ultimate living experience. Crafted for those who value style, convenience, and innovation, SleekLiving is a collection of premium home essentials that redefine the way you live. With an emphasis on minimalism and elegance, every product in the SleekLiving line is engineered to bring a refined touch to your home without compromising on performance or comfort.\n\nSleekLiving is all about transforming your space into a sanctuary of calm and sophistication. Featuring clean lines, contemporary aesthetics, and cutting-edge functionality, this collection offers versatile solutions for every room in your home. Whether you're upgrading your living room, kitchen, bedroom, or office, SleekLiving effortlessly blends into any decor, offering you the freedom to create a space that reflects your unique style.\n\nDesigned with the modern homeowner in mind, SleekLiving products are not just about looks—they are built for practicality and ease of use. Each item is thoughtfully crafted using high-quality materials that ensure durability and long-lasting performance. From smart furniture solutions to stylish accessories, SleekLiving brings together the best of contemporary design with everyday functionality.\n\nKey Features:\n\nModern, minimalist design that enhances any living space\nVersatile range of products for every room in your home\nHigh-quality materials for durability and long-lasting performance\nInnovative features that combine form and function\nPerfect for those who appreciate style and practicality\nTransform your home into a sleek, stylish haven with SleekLiving—where contemporary design meets everyday convenience.","productImage":{"asset":{"_id":"image-b7565060672485ede215bbbbb4d6b063b1a83b49-3024x4032-jpg","url":"https://cdn.sanity.io/images/ilhf9wt8/production/b7565060672485ede215bbbbb4d6b063b1a83b49-3024x4032.jpg"}},"price":300,"tags":["sleek ","modern ","elegant","furniture ","living "],"discountPercentage":null,"isNew":true,"_id":"YjFIo1g1LQZHJZg27QhEuH"}],"syncTags":["s1:oebO9A","s1:JL/Xxg","s1:tmZhOQ","s1:x6XANA","s1:+l2ukQ","s1:xi8e2g","s1:0d5Kjg","s1:tlUhiQ","s1:pzlBCQ","s1:/Yg7yA","s1:9CKZHQ","s1:LWBuyw","s1:vQucuA","s1:8dKtHg","s1:dqvuQg","s1:CIXQoA","s1:U0ailg","s1:n+LilQ","s1:rcGoyA","s1:2wyteg","s1:nWwLzw","s1:CSGjtA","s1:KMVLgA","s1:1JJcBQ","s1:TDc0Og"],"ms":25}","status":200,"url":"https://ilhf9wt8.apicdn.sanity.io/v2025-01-13/data/query/production?query=%0A++++*%5B_type+%3D%3D+%22product%22%5D%7B%0A++_id%2C%0A++title%2C%0A++description%2C%0A++productImage+%7B%0A++++asset-%3E%7B%0A++++++_id%2C%0A++++++url%0A++++%7D%0A++%7D%2C%0A++price%2C%0A++tags%2C%0A++discountPercentage%2C%0A++isNew%0A%7D%0A&returnQuery=false"},"revalidate":31536000,"tags":[]}